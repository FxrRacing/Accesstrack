
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model UserProfiles
 * 
 */
export type UserProfiles = $Result.DefaultSelection<Prisma.$UserProfilesPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model UserHistory
 * 
 */
export type UserHistory = $Result.DefaultSelection<Prisma.$UserHistoryPayload>
/**
 * Model AccountRep
 * 
 */
export type AccountRep = $Result.DefaultSelection<Prisma.$AccountRepPayload>
/**
 * Model Software
 * 
 */
export type Software = $Result.DefaultSelection<Prisma.$SoftwarePayload>
/**
 * Model SoftwareHistory
 * 
 */
export type SoftwareHistory = $Result.DefaultSelection<Prisma.$SoftwareHistoryPayload>
/**
 * Model UserSoftware
 * 
 */
export type UserSoftware = $Result.DefaultSelection<Prisma.$UserSoftwarePayload>
/**
 * Model SharedAccount
 * 
 */
export type SharedAccount = $Result.DefaultSelection<Prisma.$SharedAccountPayload>
/**
 * Model SharedAccountHistory
 * 
 */
export type SharedAccountHistory = $Result.DefaultSelection<Prisma.$SharedAccountHistoryPayload>
/**
 * Model SoftwareAccess
 * 
 */
export type SoftwareAccess = $Result.DefaultSelection<Prisma.$SoftwareAccessPayload>
/**
 * Model audit_log_entries
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type audit_log_entries = $Result.DefaultSelection<Prisma.$audit_log_entriesPayload>
/**
 * Model flow_state
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type flow_state = $Result.DefaultSelection<Prisma.$flow_statePayload>
/**
 * Model identities
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type identities = $Result.DefaultSelection<Prisma.$identitiesPayload>
/**
 * Model instances
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type instances = $Result.DefaultSelection<Prisma.$instancesPayload>
/**
 * Model mfa_amr_claims
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type mfa_amr_claims = $Result.DefaultSelection<Prisma.$mfa_amr_claimsPayload>
/**
 * Model mfa_challenges
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type mfa_challenges = $Result.DefaultSelection<Prisma.$mfa_challengesPayload>
/**
 * Model mfa_factors
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type mfa_factors = $Result.DefaultSelection<Prisma.$mfa_factorsPayload>
/**
 * Model one_time_tokens
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type one_time_tokens = $Result.DefaultSelection<Prisma.$one_time_tokensPayload>
/**
 * Model refresh_tokens
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type refresh_tokens = $Result.DefaultSelection<Prisma.$refresh_tokensPayload>
/**
 * Model saml_providers
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type saml_providers = $Result.DefaultSelection<Prisma.$saml_providersPayload>
/**
 * Model saml_relay_states
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type saml_relay_states = $Result.DefaultSelection<Prisma.$saml_relay_statesPayload>
/**
 * Model schema_migrations
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type schema_migrations = $Result.DefaultSelection<Prisma.$schema_migrationsPayload>
/**
 * Model sessions
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type sessions = $Result.DefaultSelection<Prisma.$sessionsPayload>
/**
 * Model sso_domains
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 * This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
 */
export type sso_domains = $Result.DefaultSelection<Prisma.$sso_domainsPayload>
/**
 * Model sso_providers
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 * This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
 */
export type sso_providers = $Result.DefaultSelection<Prisma.$sso_providersPayload>
/**
 * Model users
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 * This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>
/**
 * Model buckets
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type buckets = $Result.DefaultSelection<Prisma.$bucketsPayload>
/**
 * Model migrations
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type migrations = $Result.DefaultSelection<Prisma.$migrationsPayload>
/**
 * Model objects
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type objects = $Result.DefaultSelection<Prisma.$objectsPayload>
/**
 * Model s3_multipart_uploads
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type s3_multipart_uploads = $Result.DefaultSelection<Prisma.$s3_multipart_uploadsPayload>
/**
 * Model s3_multipart_uploads_parts
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type s3_multipart_uploads_parts = $Result.DefaultSelection<Prisma.$s3_multipart_uploads_partsPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const PaymentFrequency: {
  WEEKLY: 'WEEKLY',
  BIWEEKLY: 'BIWEEKLY',
  SEMIMONTHLY: 'SEMIMONTHLY',
  MONTHLY: 'MONTHLY',
  QUARTERLY: 'QUARTERLY',
  ANNUALLY: 'ANNUALLY'
};

export type PaymentFrequency = (typeof PaymentFrequency)[keyof typeof PaymentFrequency]


export const PaymentMethod: {
  CREDIT_CARD: 'CREDIT_CARD',
  DEBIT_CARD: 'DEBIT_CARD',
  BANK_TRANSFER: 'BANK_TRANSFER',
  PAYPAL: 'PAYPAL',
  CASH: 'CASH',
  CHECK: 'CHECK',
  OTHER: 'OTHER'
};

export type PaymentMethod = (typeof PaymentMethod)[keyof typeof PaymentMethod]


export const EntityType: {
  USER: 'USER',
  SOFTWARE: 'SOFTWARE',
  SHARED_ACCOUNT: 'SHARED_ACCOUNT'
};

export type EntityType = (typeof EntityType)[keyof typeof EntityType]


export const aal_level: {
  aal1: 'aal1',
  aal2: 'aal2',
  aal3: 'aal3'
};

export type aal_level = (typeof aal_level)[keyof typeof aal_level]


export const code_challenge_method: {
  s256: 's256',
  plain: 'plain'
};

export type code_challenge_method = (typeof code_challenge_method)[keyof typeof code_challenge_method]


export const factor_status: {
  unverified: 'unverified',
  verified: 'verified'
};

export type factor_status = (typeof factor_status)[keyof typeof factor_status]


export const factor_type: {
  totp: 'totp',
  webauthn: 'webauthn',
  phone: 'phone'
};

export type factor_type = (typeof factor_type)[keyof typeof factor_type]


export const one_time_token_type: {
  confirmation_token: 'confirmation_token',
  reauthentication_token: 'reauthentication_token',
  recovery_token: 'recovery_token',
  email_change_token_new: 'email_change_token_new',
  email_change_token_current: 'email_change_token_current',
  phone_change_token: 'phone_change_token'
};

export type one_time_token_type = (typeof one_time_token_type)[keyof typeof one_time_token_type]

}

export type PaymentFrequency = $Enums.PaymentFrequency

export const PaymentFrequency: typeof $Enums.PaymentFrequency

export type PaymentMethod = $Enums.PaymentMethod

export const PaymentMethod: typeof $Enums.PaymentMethod

export type EntityType = $Enums.EntityType

export const EntityType: typeof $Enums.EntityType

export type aal_level = $Enums.aal_level

export const aal_level: typeof $Enums.aal_level

export type code_challenge_method = $Enums.code_challenge_method

export const code_challenge_method: typeof $Enums.code_challenge_method

export type factor_status = $Enums.factor_status

export const factor_status: typeof $Enums.factor_status

export type factor_type = $Enums.factor_type

export const factor_type: typeof $Enums.factor_type

export type one_time_token_type = $Enums.one_time_token_type

export const one_time_token_type: typeof $Enums.one_time_token_type

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more UserProfiles
 * const userProfiles = await prisma.userProfiles.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more UserProfiles
   * const userProfiles = await prisma.userProfiles.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.userProfiles`: Exposes CRUD operations for the **UserProfiles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserProfiles
    * const userProfiles = await prisma.userProfiles.findMany()
    * ```
    */
  get userProfiles(): Prisma.UserProfilesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userHistory`: Exposes CRUD operations for the **UserHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserHistories
    * const userHistories = await prisma.userHistory.findMany()
    * ```
    */
  get userHistory(): Prisma.UserHistoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.accountRep`: Exposes CRUD operations for the **AccountRep** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AccountReps
    * const accountReps = await prisma.accountRep.findMany()
    * ```
    */
  get accountRep(): Prisma.AccountRepDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.software`: Exposes CRUD operations for the **Software** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Software
    * const software = await prisma.software.findMany()
    * ```
    */
  get software(): Prisma.SoftwareDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.softwareHistory`: Exposes CRUD operations for the **SoftwareHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SoftwareHistories
    * const softwareHistories = await prisma.softwareHistory.findMany()
    * ```
    */
  get softwareHistory(): Prisma.SoftwareHistoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userSoftware`: Exposes CRUD operations for the **UserSoftware** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserSoftwares
    * const userSoftwares = await prisma.userSoftware.findMany()
    * ```
    */
  get userSoftware(): Prisma.UserSoftwareDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sharedAccount`: Exposes CRUD operations for the **SharedAccount** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SharedAccounts
    * const sharedAccounts = await prisma.sharedAccount.findMany()
    * ```
    */
  get sharedAccount(): Prisma.SharedAccountDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sharedAccountHistory`: Exposes CRUD operations for the **SharedAccountHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SharedAccountHistories
    * const sharedAccountHistories = await prisma.sharedAccountHistory.findMany()
    * ```
    */
  get sharedAccountHistory(): Prisma.SharedAccountHistoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.softwareAccess`: Exposes CRUD operations for the **SoftwareAccess** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SoftwareAccesses
    * const softwareAccesses = await prisma.softwareAccess.findMany()
    * ```
    */
  get softwareAccess(): Prisma.SoftwareAccessDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.audit_log_entries`: Exposes CRUD operations for the **audit_log_entries** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Audit_log_entries
    * const audit_log_entries = await prisma.audit_log_entries.findMany()
    * ```
    */
  get audit_log_entries(): Prisma.audit_log_entriesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.flow_state`: Exposes CRUD operations for the **flow_state** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Flow_states
    * const flow_states = await prisma.flow_state.findMany()
    * ```
    */
  get flow_state(): Prisma.flow_stateDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.identities`: Exposes CRUD operations for the **identities** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Identities
    * const identities = await prisma.identities.findMany()
    * ```
    */
  get identities(): Prisma.identitiesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.instances`: Exposes CRUD operations for the **instances** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Instances
    * const instances = await prisma.instances.findMany()
    * ```
    */
  get instances(): Prisma.instancesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mfa_amr_claims`: Exposes CRUD operations for the **mfa_amr_claims** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mfa_amr_claims
    * const mfa_amr_claims = await prisma.mfa_amr_claims.findMany()
    * ```
    */
  get mfa_amr_claims(): Prisma.mfa_amr_claimsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mfa_challenges`: Exposes CRUD operations for the **mfa_challenges** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mfa_challenges
    * const mfa_challenges = await prisma.mfa_challenges.findMany()
    * ```
    */
  get mfa_challenges(): Prisma.mfa_challengesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mfa_factors`: Exposes CRUD operations for the **mfa_factors** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mfa_factors
    * const mfa_factors = await prisma.mfa_factors.findMany()
    * ```
    */
  get mfa_factors(): Prisma.mfa_factorsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.one_time_tokens`: Exposes CRUD operations for the **one_time_tokens** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more One_time_tokens
    * const one_time_tokens = await prisma.one_time_tokens.findMany()
    * ```
    */
  get one_time_tokens(): Prisma.one_time_tokensDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.refresh_tokens`: Exposes CRUD operations for the **refresh_tokens** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Refresh_tokens
    * const refresh_tokens = await prisma.refresh_tokens.findMany()
    * ```
    */
  get refresh_tokens(): Prisma.refresh_tokensDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.saml_providers`: Exposes CRUD operations for the **saml_providers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Saml_providers
    * const saml_providers = await prisma.saml_providers.findMany()
    * ```
    */
  get saml_providers(): Prisma.saml_providersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.saml_relay_states`: Exposes CRUD operations for the **saml_relay_states** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Saml_relay_states
    * const saml_relay_states = await prisma.saml_relay_states.findMany()
    * ```
    */
  get saml_relay_states(): Prisma.saml_relay_statesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.schema_migrations`: Exposes CRUD operations for the **schema_migrations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Schema_migrations
    * const schema_migrations = await prisma.schema_migrations.findMany()
    * ```
    */
  get schema_migrations(): Prisma.schema_migrationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sessions`: Exposes CRUD operations for the **sessions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sessions
    * const sessions = await prisma.sessions.findMany()
    * ```
    */
  get sessions(): Prisma.sessionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sso_domains`: Exposes CRUD operations for the **sso_domains** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sso_domains
    * const sso_domains = await prisma.sso_domains.findMany()
    * ```
    */
  get sso_domains(): Prisma.sso_domainsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sso_providers`: Exposes CRUD operations for the **sso_providers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sso_providers
    * const sso_providers = await prisma.sso_providers.findMany()
    * ```
    */
  get sso_providers(): Prisma.sso_providersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.buckets`: Exposes CRUD operations for the **buckets** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Buckets
    * const buckets = await prisma.buckets.findMany()
    * ```
    */
  get buckets(): Prisma.bucketsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.migrations`: Exposes CRUD operations for the **migrations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Migrations
    * const migrations = await prisma.migrations.findMany()
    * ```
    */
  get migrations(): Prisma.migrationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.objects`: Exposes CRUD operations for the **objects** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Objects
    * const objects = await prisma.objects.findMany()
    * ```
    */
  get objects(): Prisma.objectsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.s3_multipart_uploads`: Exposes CRUD operations for the **s3_multipart_uploads** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more S3_multipart_uploads
    * const s3_multipart_uploads = await prisma.s3_multipart_uploads.findMany()
    * ```
    */
  get s3_multipart_uploads(): Prisma.s3_multipart_uploadsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.s3_multipart_uploads_parts`: Exposes CRUD operations for the **s3_multipart_uploads_parts** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more S3_multipart_uploads_parts
    * const s3_multipart_uploads_parts = await prisma.s3_multipart_uploads_parts.findMany()
    * ```
    */
  get s3_multipart_uploads_parts(): Prisma.s3_multipart_uploads_partsDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.6.0
   * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    UserProfiles: 'UserProfiles',
    User: 'User',
    UserHistory: 'UserHistory',
    AccountRep: 'AccountRep',
    Software: 'Software',
    SoftwareHistory: 'SoftwareHistory',
    UserSoftware: 'UserSoftware',
    SharedAccount: 'SharedAccount',
    SharedAccountHistory: 'SharedAccountHistory',
    SoftwareAccess: 'SoftwareAccess',
    audit_log_entries: 'audit_log_entries',
    flow_state: 'flow_state',
    identities: 'identities',
    instances: 'instances',
    mfa_amr_claims: 'mfa_amr_claims',
    mfa_challenges: 'mfa_challenges',
    mfa_factors: 'mfa_factors',
    one_time_tokens: 'one_time_tokens',
    refresh_tokens: 'refresh_tokens',
    saml_providers: 'saml_providers',
    saml_relay_states: 'saml_relay_states',
    schema_migrations: 'schema_migrations',
    sessions: 'sessions',
    sso_domains: 'sso_domains',
    sso_providers: 'sso_providers',
    users: 'users',
    buckets: 'buckets',
    migrations: 'migrations',
    objects: 'objects',
    s3_multipart_uploads: 's3_multipart_uploads',
    s3_multipart_uploads_parts: 's3_multipart_uploads_parts'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "userProfiles" | "user" | "userHistory" | "accountRep" | "software" | "softwareHistory" | "userSoftware" | "sharedAccount" | "sharedAccountHistory" | "softwareAccess" | "audit_log_entries" | "flow_state" | "identities" | "instances" | "mfa_amr_claims" | "mfa_challenges" | "mfa_factors" | "one_time_tokens" | "refresh_tokens" | "saml_providers" | "saml_relay_states" | "schema_migrations" | "sessions" | "sso_domains" | "sso_providers" | "users" | "buckets" | "migrations" | "objects" | "s3_multipart_uploads" | "s3_multipart_uploads_parts"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      UserProfiles: {
        payload: Prisma.$UserProfilesPayload<ExtArgs>
        fields: Prisma.UserProfilesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserProfilesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserProfilesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilesPayload>
          }
          findFirst: {
            args: Prisma.UserProfilesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserProfilesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilesPayload>
          }
          findMany: {
            args: Prisma.UserProfilesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilesPayload>[]
          }
          create: {
            args: Prisma.UserProfilesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilesPayload>
          }
          createMany: {
            args: Prisma.UserProfilesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserProfilesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilesPayload>[]
          }
          delete: {
            args: Prisma.UserProfilesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilesPayload>
          }
          update: {
            args: Prisma.UserProfilesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilesPayload>
          }
          deleteMany: {
            args: Prisma.UserProfilesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserProfilesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserProfilesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilesPayload>[]
          }
          upsert: {
            args: Prisma.UserProfilesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilesPayload>
          }
          aggregate: {
            args: Prisma.UserProfilesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserProfiles>
          }
          groupBy: {
            args: Prisma.UserProfilesGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserProfilesGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserProfilesCountArgs<ExtArgs>
            result: $Utils.Optional<UserProfilesCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      UserHistory: {
        payload: Prisma.$UserHistoryPayload<ExtArgs>
        fields: Prisma.UserHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHistoryPayload>
          }
          findFirst: {
            args: Prisma.UserHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHistoryPayload>
          }
          findMany: {
            args: Prisma.UserHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHistoryPayload>[]
          }
          create: {
            args: Prisma.UserHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHistoryPayload>
          }
          createMany: {
            args: Prisma.UserHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHistoryPayload>[]
          }
          delete: {
            args: Prisma.UserHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHistoryPayload>
          }
          update: {
            args: Prisma.UserHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHistoryPayload>
          }
          deleteMany: {
            args: Prisma.UserHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserHistoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHistoryPayload>[]
          }
          upsert: {
            args: Prisma.UserHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHistoryPayload>
          }
          aggregate: {
            args: Prisma.UserHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserHistory>
          }
          groupBy: {
            args: Prisma.UserHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<UserHistoryCountAggregateOutputType> | number
          }
        }
      }
      AccountRep: {
        payload: Prisma.$AccountRepPayload<ExtArgs>
        fields: Prisma.AccountRepFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AccountRepFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountRepPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AccountRepFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountRepPayload>
          }
          findFirst: {
            args: Prisma.AccountRepFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountRepPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AccountRepFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountRepPayload>
          }
          findMany: {
            args: Prisma.AccountRepFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountRepPayload>[]
          }
          create: {
            args: Prisma.AccountRepCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountRepPayload>
          }
          createMany: {
            args: Prisma.AccountRepCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AccountRepCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountRepPayload>[]
          }
          delete: {
            args: Prisma.AccountRepDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountRepPayload>
          }
          update: {
            args: Prisma.AccountRepUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountRepPayload>
          }
          deleteMany: {
            args: Prisma.AccountRepDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AccountRepUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AccountRepUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountRepPayload>[]
          }
          upsert: {
            args: Prisma.AccountRepUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountRepPayload>
          }
          aggregate: {
            args: Prisma.AccountRepAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAccountRep>
          }
          groupBy: {
            args: Prisma.AccountRepGroupByArgs<ExtArgs>
            result: $Utils.Optional<AccountRepGroupByOutputType>[]
          }
          count: {
            args: Prisma.AccountRepCountArgs<ExtArgs>
            result: $Utils.Optional<AccountRepCountAggregateOutputType> | number
          }
        }
      }
      Software: {
        payload: Prisma.$SoftwarePayload<ExtArgs>
        fields: Prisma.SoftwareFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SoftwareFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwarePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SoftwareFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwarePayload>
          }
          findFirst: {
            args: Prisma.SoftwareFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwarePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SoftwareFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwarePayload>
          }
          findMany: {
            args: Prisma.SoftwareFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwarePayload>[]
          }
          create: {
            args: Prisma.SoftwareCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwarePayload>
          }
          createMany: {
            args: Prisma.SoftwareCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SoftwareCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwarePayload>[]
          }
          delete: {
            args: Prisma.SoftwareDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwarePayload>
          }
          update: {
            args: Prisma.SoftwareUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwarePayload>
          }
          deleteMany: {
            args: Prisma.SoftwareDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SoftwareUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SoftwareUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwarePayload>[]
          }
          upsert: {
            args: Prisma.SoftwareUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwarePayload>
          }
          aggregate: {
            args: Prisma.SoftwareAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSoftware>
          }
          groupBy: {
            args: Prisma.SoftwareGroupByArgs<ExtArgs>
            result: $Utils.Optional<SoftwareGroupByOutputType>[]
          }
          count: {
            args: Prisma.SoftwareCountArgs<ExtArgs>
            result: $Utils.Optional<SoftwareCountAggregateOutputType> | number
          }
        }
      }
      SoftwareHistory: {
        payload: Prisma.$SoftwareHistoryPayload<ExtArgs>
        fields: Prisma.SoftwareHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SoftwareHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SoftwareHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareHistoryPayload>
          }
          findFirst: {
            args: Prisma.SoftwareHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SoftwareHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareHistoryPayload>
          }
          findMany: {
            args: Prisma.SoftwareHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareHistoryPayload>[]
          }
          create: {
            args: Prisma.SoftwareHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareHistoryPayload>
          }
          createMany: {
            args: Prisma.SoftwareHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SoftwareHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareHistoryPayload>[]
          }
          delete: {
            args: Prisma.SoftwareHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareHistoryPayload>
          }
          update: {
            args: Prisma.SoftwareHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareHistoryPayload>
          }
          deleteMany: {
            args: Prisma.SoftwareHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SoftwareHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SoftwareHistoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareHistoryPayload>[]
          }
          upsert: {
            args: Prisma.SoftwareHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareHistoryPayload>
          }
          aggregate: {
            args: Prisma.SoftwareHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSoftwareHistory>
          }
          groupBy: {
            args: Prisma.SoftwareHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<SoftwareHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.SoftwareHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<SoftwareHistoryCountAggregateOutputType> | number
          }
        }
      }
      UserSoftware: {
        payload: Prisma.$UserSoftwarePayload<ExtArgs>
        fields: Prisma.UserSoftwareFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserSoftwareFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSoftwarePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserSoftwareFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSoftwarePayload>
          }
          findFirst: {
            args: Prisma.UserSoftwareFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSoftwarePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserSoftwareFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSoftwarePayload>
          }
          findMany: {
            args: Prisma.UserSoftwareFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSoftwarePayload>[]
          }
          create: {
            args: Prisma.UserSoftwareCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSoftwarePayload>
          }
          createMany: {
            args: Prisma.UserSoftwareCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserSoftwareCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSoftwarePayload>[]
          }
          delete: {
            args: Prisma.UserSoftwareDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSoftwarePayload>
          }
          update: {
            args: Prisma.UserSoftwareUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSoftwarePayload>
          }
          deleteMany: {
            args: Prisma.UserSoftwareDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserSoftwareUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserSoftwareUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSoftwarePayload>[]
          }
          upsert: {
            args: Prisma.UserSoftwareUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSoftwarePayload>
          }
          aggregate: {
            args: Prisma.UserSoftwareAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserSoftware>
          }
          groupBy: {
            args: Prisma.UserSoftwareGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserSoftwareGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserSoftwareCountArgs<ExtArgs>
            result: $Utils.Optional<UserSoftwareCountAggregateOutputType> | number
          }
        }
      }
      SharedAccount: {
        payload: Prisma.$SharedAccountPayload<ExtArgs>
        fields: Prisma.SharedAccountFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SharedAccountFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SharedAccountPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SharedAccountFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SharedAccountPayload>
          }
          findFirst: {
            args: Prisma.SharedAccountFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SharedAccountPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SharedAccountFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SharedAccountPayload>
          }
          findMany: {
            args: Prisma.SharedAccountFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SharedAccountPayload>[]
          }
          create: {
            args: Prisma.SharedAccountCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SharedAccountPayload>
          }
          createMany: {
            args: Prisma.SharedAccountCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SharedAccountCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SharedAccountPayload>[]
          }
          delete: {
            args: Prisma.SharedAccountDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SharedAccountPayload>
          }
          update: {
            args: Prisma.SharedAccountUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SharedAccountPayload>
          }
          deleteMany: {
            args: Prisma.SharedAccountDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SharedAccountUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SharedAccountUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SharedAccountPayload>[]
          }
          upsert: {
            args: Prisma.SharedAccountUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SharedAccountPayload>
          }
          aggregate: {
            args: Prisma.SharedAccountAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSharedAccount>
          }
          groupBy: {
            args: Prisma.SharedAccountGroupByArgs<ExtArgs>
            result: $Utils.Optional<SharedAccountGroupByOutputType>[]
          }
          count: {
            args: Prisma.SharedAccountCountArgs<ExtArgs>
            result: $Utils.Optional<SharedAccountCountAggregateOutputType> | number
          }
        }
      }
      SharedAccountHistory: {
        payload: Prisma.$SharedAccountHistoryPayload<ExtArgs>
        fields: Prisma.SharedAccountHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SharedAccountHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SharedAccountHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SharedAccountHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SharedAccountHistoryPayload>
          }
          findFirst: {
            args: Prisma.SharedAccountHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SharedAccountHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SharedAccountHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SharedAccountHistoryPayload>
          }
          findMany: {
            args: Prisma.SharedAccountHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SharedAccountHistoryPayload>[]
          }
          create: {
            args: Prisma.SharedAccountHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SharedAccountHistoryPayload>
          }
          createMany: {
            args: Prisma.SharedAccountHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SharedAccountHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SharedAccountHistoryPayload>[]
          }
          delete: {
            args: Prisma.SharedAccountHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SharedAccountHistoryPayload>
          }
          update: {
            args: Prisma.SharedAccountHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SharedAccountHistoryPayload>
          }
          deleteMany: {
            args: Prisma.SharedAccountHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SharedAccountHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SharedAccountHistoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SharedAccountHistoryPayload>[]
          }
          upsert: {
            args: Prisma.SharedAccountHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SharedAccountHistoryPayload>
          }
          aggregate: {
            args: Prisma.SharedAccountHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSharedAccountHistory>
          }
          groupBy: {
            args: Prisma.SharedAccountHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<SharedAccountHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.SharedAccountHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<SharedAccountHistoryCountAggregateOutputType> | number
          }
        }
      }
      SoftwareAccess: {
        payload: Prisma.$SoftwareAccessPayload<ExtArgs>
        fields: Prisma.SoftwareAccessFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SoftwareAccessFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareAccessPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SoftwareAccessFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareAccessPayload>
          }
          findFirst: {
            args: Prisma.SoftwareAccessFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareAccessPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SoftwareAccessFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareAccessPayload>
          }
          findMany: {
            args: Prisma.SoftwareAccessFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareAccessPayload>[]
          }
          create: {
            args: Prisma.SoftwareAccessCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareAccessPayload>
          }
          createMany: {
            args: Prisma.SoftwareAccessCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SoftwareAccessCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareAccessPayload>[]
          }
          delete: {
            args: Prisma.SoftwareAccessDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareAccessPayload>
          }
          update: {
            args: Prisma.SoftwareAccessUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareAccessPayload>
          }
          deleteMany: {
            args: Prisma.SoftwareAccessDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SoftwareAccessUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SoftwareAccessUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareAccessPayload>[]
          }
          upsert: {
            args: Prisma.SoftwareAccessUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareAccessPayload>
          }
          aggregate: {
            args: Prisma.SoftwareAccessAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSoftwareAccess>
          }
          groupBy: {
            args: Prisma.SoftwareAccessGroupByArgs<ExtArgs>
            result: $Utils.Optional<SoftwareAccessGroupByOutputType>[]
          }
          count: {
            args: Prisma.SoftwareAccessCountArgs<ExtArgs>
            result: $Utils.Optional<SoftwareAccessCountAggregateOutputType> | number
          }
        }
      }
      audit_log_entries: {
        payload: Prisma.$audit_log_entriesPayload<ExtArgs>
        fields: Prisma.audit_log_entriesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.audit_log_entriesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.audit_log_entriesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload>
          }
          findFirst: {
            args: Prisma.audit_log_entriesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.audit_log_entriesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload>
          }
          findMany: {
            args: Prisma.audit_log_entriesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload>[]
          }
          create: {
            args: Prisma.audit_log_entriesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload>
          }
          createMany: {
            args: Prisma.audit_log_entriesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.audit_log_entriesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload>[]
          }
          delete: {
            args: Prisma.audit_log_entriesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload>
          }
          update: {
            args: Prisma.audit_log_entriesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload>
          }
          deleteMany: {
            args: Prisma.audit_log_entriesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.audit_log_entriesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.audit_log_entriesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload>[]
          }
          upsert: {
            args: Prisma.audit_log_entriesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload>
          }
          aggregate: {
            args: Prisma.Audit_log_entriesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAudit_log_entries>
          }
          groupBy: {
            args: Prisma.audit_log_entriesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Audit_log_entriesGroupByOutputType>[]
          }
          count: {
            args: Prisma.audit_log_entriesCountArgs<ExtArgs>
            result: $Utils.Optional<Audit_log_entriesCountAggregateOutputType> | number
          }
        }
      }
      flow_state: {
        payload: Prisma.$flow_statePayload<ExtArgs>
        fields: Prisma.flow_stateFieldRefs
        operations: {
          findUnique: {
            args: Prisma.flow_stateFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.flow_stateFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload>
          }
          findFirst: {
            args: Prisma.flow_stateFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.flow_stateFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload>
          }
          findMany: {
            args: Prisma.flow_stateFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload>[]
          }
          create: {
            args: Prisma.flow_stateCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload>
          }
          createMany: {
            args: Prisma.flow_stateCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.flow_stateCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload>[]
          }
          delete: {
            args: Prisma.flow_stateDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload>
          }
          update: {
            args: Prisma.flow_stateUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload>
          }
          deleteMany: {
            args: Prisma.flow_stateDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.flow_stateUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.flow_stateUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload>[]
          }
          upsert: {
            args: Prisma.flow_stateUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload>
          }
          aggregate: {
            args: Prisma.Flow_stateAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFlow_state>
          }
          groupBy: {
            args: Prisma.flow_stateGroupByArgs<ExtArgs>
            result: $Utils.Optional<Flow_stateGroupByOutputType>[]
          }
          count: {
            args: Prisma.flow_stateCountArgs<ExtArgs>
            result: $Utils.Optional<Flow_stateCountAggregateOutputType> | number
          }
        }
      }
      identities: {
        payload: Prisma.$identitiesPayload<ExtArgs>
        fields: Prisma.identitiesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.identitiesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.identitiesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload>
          }
          findFirst: {
            args: Prisma.identitiesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.identitiesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload>
          }
          findMany: {
            args: Prisma.identitiesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload>[]
          }
          create: {
            args: Prisma.identitiesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload>
          }
          createMany: {
            args: Prisma.identitiesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.identitiesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload>[]
          }
          delete: {
            args: Prisma.identitiesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload>
          }
          update: {
            args: Prisma.identitiesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload>
          }
          deleteMany: {
            args: Prisma.identitiesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.identitiesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.identitiesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload>[]
          }
          upsert: {
            args: Prisma.identitiesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload>
          }
          aggregate: {
            args: Prisma.IdentitiesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateIdentities>
          }
          groupBy: {
            args: Prisma.identitiesGroupByArgs<ExtArgs>
            result: $Utils.Optional<IdentitiesGroupByOutputType>[]
          }
          count: {
            args: Prisma.identitiesCountArgs<ExtArgs>
            result: $Utils.Optional<IdentitiesCountAggregateOutputType> | number
          }
        }
      }
      instances: {
        payload: Prisma.$instancesPayload<ExtArgs>
        fields: Prisma.instancesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.instancesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instancesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.instancesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instancesPayload>
          }
          findFirst: {
            args: Prisma.instancesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instancesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.instancesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instancesPayload>
          }
          findMany: {
            args: Prisma.instancesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instancesPayload>[]
          }
          create: {
            args: Prisma.instancesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instancesPayload>
          }
          createMany: {
            args: Prisma.instancesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.instancesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instancesPayload>[]
          }
          delete: {
            args: Prisma.instancesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instancesPayload>
          }
          update: {
            args: Prisma.instancesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instancesPayload>
          }
          deleteMany: {
            args: Prisma.instancesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.instancesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.instancesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instancesPayload>[]
          }
          upsert: {
            args: Prisma.instancesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instancesPayload>
          }
          aggregate: {
            args: Prisma.InstancesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInstances>
          }
          groupBy: {
            args: Prisma.instancesGroupByArgs<ExtArgs>
            result: $Utils.Optional<InstancesGroupByOutputType>[]
          }
          count: {
            args: Prisma.instancesCountArgs<ExtArgs>
            result: $Utils.Optional<InstancesCountAggregateOutputType> | number
          }
        }
      }
      mfa_amr_claims: {
        payload: Prisma.$mfa_amr_claimsPayload<ExtArgs>
        fields: Prisma.mfa_amr_claimsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.mfa_amr_claimsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.mfa_amr_claimsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload>
          }
          findFirst: {
            args: Prisma.mfa_amr_claimsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.mfa_amr_claimsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload>
          }
          findMany: {
            args: Prisma.mfa_amr_claimsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload>[]
          }
          create: {
            args: Prisma.mfa_amr_claimsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload>
          }
          createMany: {
            args: Prisma.mfa_amr_claimsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.mfa_amr_claimsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload>[]
          }
          delete: {
            args: Prisma.mfa_amr_claimsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload>
          }
          update: {
            args: Prisma.mfa_amr_claimsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload>
          }
          deleteMany: {
            args: Prisma.mfa_amr_claimsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.mfa_amr_claimsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.mfa_amr_claimsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload>[]
          }
          upsert: {
            args: Prisma.mfa_amr_claimsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload>
          }
          aggregate: {
            args: Prisma.Mfa_amr_claimsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMfa_amr_claims>
          }
          groupBy: {
            args: Prisma.mfa_amr_claimsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Mfa_amr_claimsGroupByOutputType>[]
          }
          count: {
            args: Prisma.mfa_amr_claimsCountArgs<ExtArgs>
            result: $Utils.Optional<Mfa_amr_claimsCountAggregateOutputType> | number
          }
        }
      }
      mfa_challenges: {
        payload: Prisma.$mfa_challengesPayload<ExtArgs>
        fields: Prisma.mfa_challengesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.mfa_challengesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.mfa_challengesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload>
          }
          findFirst: {
            args: Prisma.mfa_challengesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.mfa_challengesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload>
          }
          findMany: {
            args: Prisma.mfa_challengesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload>[]
          }
          create: {
            args: Prisma.mfa_challengesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload>
          }
          createMany: {
            args: Prisma.mfa_challengesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.mfa_challengesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload>[]
          }
          delete: {
            args: Prisma.mfa_challengesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload>
          }
          update: {
            args: Prisma.mfa_challengesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload>
          }
          deleteMany: {
            args: Prisma.mfa_challengesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.mfa_challengesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.mfa_challengesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload>[]
          }
          upsert: {
            args: Prisma.mfa_challengesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload>
          }
          aggregate: {
            args: Prisma.Mfa_challengesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMfa_challenges>
          }
          groupBy: {
            args: Prisma.mfa_challengesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Mfa_challengesGroupByOutputType>[]
          }
          count: {
            args: Prisma.mfa_challengesCountArgs<ExtArgs>
            result: $Utils.Optional<Mfa_challengesCountAggregateOutputType> | number
          }
        }
      }
      mfa_factors: {
        payload: Prisma.$mfa_factorsPayload<ExtArgs>
        fields: Prisma.mfa_factorsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.mfa_factorsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.mfa_factorsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload>
          }
          findFirst: {
            args: Prisma.mfa_factorsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.mfa_factorsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload>
          }
          findMany: {
            args: Prisma.mfa_factorsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload>[]
          }
          create: {
            args: Prisma.mfa_factorsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload>
          }
          createMany: {
            args: Prisma.mfa_factorsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.mfa_factorsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload>[]
          }
          delete: {
            args: Prisma.mfa_factorsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload>
          }
          update: {
            args: Prisma.mfa_factorsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload>
          }
          deleteMany: {
            args: Prisma.mfa_factorsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.mfa_factorsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.mfa_factorsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload>[]
          }
          upsert: {
            args: Prisma.mfa_factorsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload>
          }
          aggregate: {
            args: Prisma.Mfa_factorsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMfa_factors>
          }
          groupBy: {
            args: Prisma.mfa_factorsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Mfa_factorsGroupByOutputType>[]
          }
          count: {
            args: Prisma.mfa_factorsCountArgs<ExtArgs>
            result: $Utils.Optional<Mfa_factorsCountAggregateOutputType> | number
          }
        }
      }
      one_time_tokens: {
        payload: Prisma.$one_time_tokensPayload<ExtArgs>
        fields: Prisma.one_time_tokensFieldRefs
        operations: {
          findUnique: {
            args: Prisma.one_time_tokensFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$one_time_tokensPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.one_time_tokensFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$one_time_tokensPayload>
          }
          findFirst: {
            args: Prisma.one_time_tokensFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$one_time_tokensPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.one_time_tokensFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$one_time_tokensPayload>
          }
          findMany: {
            args: Prisma.one_time_tokensFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$one_time_tokensPayload>[]
          }
          create: {
            args: Prisma.one_time_tokensCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$one_time_tokensPayload>
          }
          createMany: {
            args: Prisma.one_time_tokensCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.one_time_tokensCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$one_time_tokensPayload>[]
          }
          delete: {
            args: Prisma.one_time_tokensDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$one_time_tokensPayload>
          }
          update: {
            args: Prisma.one_time_tokensUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$one_time_tokensPayload>
          }
          deleteMany: {
            args: Prisma.one_time_tokensDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.one_time_tokensUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.one_time_tokensUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$one_time_tokensPayload>[]
          }
          upsert: {
            args: Prisma.one_time_tokensUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$one_time_tokensPayload>
          }
          aggregate: {
            args: Prisma.One_time_tokensAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOne_time_tokens>
          }
          groupBy: {
            args: Prisma.one_time_tokensGroupByArgs<ExtArgs>
            result: $Utils.Optional<One_time_tokensGroupByOutputType>[]
          }
          count: {
            args: Prisma.one_time_tokensCountArgs<ExtArgs>
            result: $Utils.Optional<One_time_tokensCountAggregateOutputType> | number
          }
        }
      }
      refresh_tokens: {
        payload: Prisma.$refresh_tokensPayload<ExtArgs>
        fields: Prisma.refresh_tokensFieldRefs
        operations: {
          findUnique: {
            args: Prisma.refresh_tokensFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.refresh_tokensFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>
          }
          findFirst: {
            args: Prisma.refresh_tokensFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.refresh_tokensFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>
          }
          findMany: {
            args: Prisma.refresh_tokensFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>[]
          }
          create: {
            args: Prisma.refresh_tokensCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>
          }
          createMany: {
            args: Prisma.refresh_tokensCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.refresh_tokensCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>[]
          }
          delete: {
            args: Prisma.refresh_tokensDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>
          }
          update: {
            args: Prisma.refresh_tokensUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>
          }
          deleteMany: {
            args: Prisma.refresh_tokensDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.refresh_tokensUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.refresh_tokensUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>[]
          }
          upsert: {
            args: Prisma.refresh_tokensUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>
          }
          aggregate: {
            args: Prisma.Refresh_tokensAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRefresh_tokens>
          }
          groupBy: {
            args: Prisma.refresh_tokensGroupByArgs<ExtArgs>
            result: $Utils.Optional<Refresh_tokensGroupByOutputType>[]
          }
          count: {
            args: Prisma.refresh_tokensCountArgs<ExtArgs>
            result: $Utils.Optional<Refresh_tokensCountAggregateOutputType> | number
          }
        }
      }
      saml_providers: {
        payload: Prisma.$saml_providersPayload<ExtArgs>
        fields: Prisma.saml_providersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.saml_providersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.saml_providersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload>
          }
          findFirst: {
            args: Prisma.saml_providersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.saml_providersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload>
          }
          findMany: {
            args: Prisma.saml_providersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload>[]
          }
          create: {
            args: Prisma.saml_providersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload>
          }
          createMany: {
            args: Prisma.saml_providersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.saml_providersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload>[]
          }
          delete: {
            args: Prisma.saml_providersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload>
          }
          update: {
            args: Prisma.saml_providersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload>
          }
          deleteMany: {
            args: Prisma.saml_providersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.saml_providersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.saml_providersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload>[]
          }
          upsert: {
            args: Prisma.saml_providersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload>
          }
          aggregate: {
            args: Prisma.Saml_providersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSaml_providers>
          }
          groupBy: {
            args: Prisma.saml_providersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Saml_providersGroupByOutputType>[]
          }
          count: {
            args: Prisma.saml_providersCountArgs<ExtArgs>
            result: $Utils.Optional<Saml_providersCountAggregateOutputType> | number
          }
        }
      }
      saml_relay_states: {
        payload: Prisma.$saml_relay_statesPayload<ExtArgs>
        fields: Prisma.saml_relay_statesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.saml_relay_statesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.saml_relay_statesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload>
          }
          findFirst: {
            args: Prisma.saml_relay_statesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.saml_relay_statesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload>
          }
          findMany: {
            args: Prisma.saml_relay_statesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload>[]
          }
          create: {
            args: Prisma.saml_relay_statesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload>
          }
          createMany: {
            args: Prisma.saml_relay_statesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.saml_relay_statesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload>[]
          }
          delete: {
            args: Prisma.saml_relay_statesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload>
          }
          update: {
            args: Prisma.saml_relay_statesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload>
          }
          deleteMany: {
            args: Prisma.saml_relay_statesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.saml_relay_statesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.saml_relay_statesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload>[]
          }
          upsert: {
            args: Prisma.saml_relay_statesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload>
          }
          aggregate: {
            args: Prisma.Saml_relay_statesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSaml_relay_states>
          }
          groupBy: {
            args: Prisma.saml_relay_statesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Saml_relay_statesGroupByOutputType>[]
          }
          count: {
            args: Prisma.saml_relay_statesCountArgs<ExtArgs>
            result: $Utils.Optional<Saml_relay_statesCountAggregateOutputType> | number
          }
        }
      }
      schema_migrations: {
        payload: Prisma.$schema_migrationsPayload<ExtArgs>
        fields: Prisma.schema_migrationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.schema_migrationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.schema_migrationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          findFirst: {
            args: Prisma.schema_migrationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.schema_migrationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          findMany: {
            args: Prisma.schema_migrationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>[]
          }
          create: {
            args: Prisma.schema_migrationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          createMany: {
            args: Prisma.schema_migrationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.schema_migrationsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>[]
          }
          delete: {
            args: Prisma.schema_migrationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          update: {
            args: Prisma.schema_migrationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          deleteMany: {
            args: Prisma.schema_migrationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.schema_migrationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.schema_migrationsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>[]
          }
          upsert: {
            args: Prisma.schema_migrationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          aggregate: {
            args: Prisma.Schema_migrationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSchema_migrations>
          }
          groupBy: {
            args: Prisma.schema_migrationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Schema_migrationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.schema_migrationsCountArgs<ExtArgs>
            result: $Utils.Optional<Schema_migrationsCountAggregateOutputType> | number
          }
        }
      }
      sessions: {
        payload: Prisma.$sessionsPayload<ExtArgs>
        fields: Prisma.sessionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sessionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sessionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          findFirst: {
            args: Prisma.sessionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sessionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          findMany: {
            args: Prisma.sessionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>[]
          }
          create: {
            args: Prisma.sessionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          createMany: {
            args: Prisma.sessionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.sessionsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>[]
          }
          delete: {
            args: Prisma.sessionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          update: {
            args: Prisma.sessionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          deleteMany: {
            args: Prisma.sessionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sessionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.sessionsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>[]
          }
          upsert: {
            args: Prisma.sessionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          aggregate: {
            args: Prisma.SessionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSessions>
          }
          groupBy: {
            args: Prisma.sessionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<SessionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sessionsCountArgs<ExtArgs>
            result: $Utils.Optional<SessionsCountAggregateOutputType> | number
          }
        }
      }
      sso_domains: {
        payload: Prisma.$sso_domainsPayload<ExtArgs>
        fields: Prisma.sso_domainsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sso_domainsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sso_domainsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload>
          }
          findFirst: {
            args: Prisma.sso_domainsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sso_domainsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload>
          }
          findMany: {
            args: Prisma.sso_domainsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload>[]
          }
          create: {
            args: Prisma.sso_domainsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload>
          }
          createMany: {
            args: Prisma.sso_domainsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.sso_domainsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload>[]
          }
          delete: {
            args: Prisma.sso_domainsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload>
          }
          update: {
            args: Prisma.sso_domainsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload>
          }
          deleteMany: {
            args: Prisma.sso_domainsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sso_domainsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.sso_domainsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload>[]
          }
          upsert: {
            args: Prisma.sso_domainsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload>
          }
          aggregate: {
            args: Prisma.Sso_domainsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSso_domains>
          }
          groupBy: {
            args: Prisma.sso_domainsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sso_domainsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sso_domainsCountArgs<ExtArgs>
            result: $Utils.Optional<Sso_domainsCountAggregateOutputType> | number
          }
        }
      }
      sso_providers: {
        payload: Prisma.$sso_providersPayload<ExtArgs>
        fields: Prisma.sso_providersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sso_providersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sso_providersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload>
          }
          findFirst: {
            args: Prisma.sso_providersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sso_providersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload>
          }
          findMany: {
            args: Prisma.sso_providersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload>[]
          }
          create: {
            args: Prisma.sso_providersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload>
          }
          createMany: {
            args: Prisma.sso_providersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.sso_providersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload>[]
          }
          delete: {
            args: Prisma.sso_providersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload>
          }
          update: {
            args: Prisma.sso_providersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload>
          }
          deleteMany: {
            args: Prisma.sso_providersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sso_providersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.sso_providersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload>[]
          }
          upsert: {
            args: Prisma.sso_providersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload>
          }
          aggregate: {
            args: Prisma.Sso_providersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSso_providers>
          }
          groupBy: {
            args: Prisma.sso_providersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sso_providersGroupByOutputType>[]
          }
          count: {
            args: Prisma.sso_providersCountArgs<ExtArgs>
            result: $Utils.Optional<Sso_providersCountAggregateOutputType> | number
          }
        }
      }
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.usersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.usersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
      buckets: {
        payload: Prisma.$bucketsPayload<ExtArgs>
        fields: Prisma.bucketsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.bucketsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bucketsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.bucketsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bucketsPayload>
          }
          findFirst: {
            args: Prisma.bucketsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bucketsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.bucketsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bucketsPayload>
          }
          findMany: {
            args: Prisma.bucketsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bucketsPayload>[]
          }
          create: {
            args: Prisma.bucketsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bucketsPayload>
          }
          createMany: {
            args: Prisma.bucketsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.bucketsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bucketsPayload>[]
          }
          delete: {
            args: Prisma.bucketsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bucketsPayload>
          }
          update: {
            args: Prisma.bucketsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bucketsPayload>
          }
          deleteMany: {
            args: Prisma.bucketsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.bucketsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.bucketsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bucketsPayload>[]
          }
          upsert: {
            args: Prisma.bucketsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bucketsPayload>
          }
          aggregate: {
            args: Prisma.BucketsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBuckets>
          }
          groupBy: {
            args: Prisma.bucketsGroupByArgs<ExtArgs>
            result: $Utils.Optional<BucketsGroupByOutputType>[]
          }
          count: {
            args: Prisma.bucketsCountArgs<ExtArgs>
            result: $Utils.Optional<BucketsCountAggregateOutputType> | number
          }
        }
      }
      migrations: {
        payload: Prisma.$migrationsPayload<ExtArgs>
        fields: Prisma.migrationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.migrationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$migrationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.migrationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$migrationsPayload>
          }
          findFirst: {
            args: Prisma.migrationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$migrationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.migrationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$migrationsPayload>
          }
          findMany: {
            args: Prisma.migrationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$migrationsPayload>[]
          }
          create: {
            args: Prisma.migrationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$migrationsPayload>
          }
          createMany: {
            args: Prisma.migrationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.migrationsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$migrationsPayload>[]
          }
          delete: {
            args: Prisma.migrationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$migrationsPayload>
          }
          update: {
            args: Prisma.migrationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$migrationsPayload>
          }
          deleteMany: {
            args: Prisma.migrationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.migrationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.migrationsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$migrationsPayload>[]
          }
          upsert: {
            args: Prisma.migrationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$migrationsPayload>
          }
          aggregate: {
            args: Prisma.MigrationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMigrations>
          }
          groupBy: {
            args: Prisma.migrationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<MigrationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.migrationsCountArgs<ExtArgs>
            result: $Utils.Optional<MigrationsCountAggregateOutputType> | number
          }
        }
      }
      objects: {
        payload: Prisma.$objectsPayload<ExtArgs>
        fields: Prisma.objectsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.objectsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$objectsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.objectsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$objectsPayload>
          }
          findFirst: {
            args: Prisma.objectsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$objectsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.objectsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$objectsPayload>
          }
          findMany: {
            args: Prisma.objectsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$objectsPayload>[]
          }
          create: {
            args: Prisma.objectsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$objectsPayload>
          }
          createMany: {
            args: Prisma.objectsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.objectsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$objectsPayload>[]
          }
          delete: {
            args: Prisma.objectsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$objectsPayload>
          }
          update: {
            args: Prisma.objectsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$objectsPayload>
          }
          deleteMany: {
            args: Prisma.objectsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.objectsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.objectsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$objectsPayload>[]
          }
          upsert: {
            args: Prisma.objectsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$objectsPayload>
          }
          aggregate: {
            args: Prisma.ObjectsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateObjects>
          }
          groupBy: {
            args: Prisma.objectsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ObjectsGroupByOutputType>[]
          }
          count: {
            args: Prisma.objectsCountArgs<ExtArgs>
            result: $Utils.Optional<ObjectsCountAggregateOutputType> | number
          }
        }
      }
      s3_multipart_uploads: {
        payload: Prisma.$s3_multipart_uploadsPayload<ExtArgs>
        fields: Prisma.s3_multipart_uploadsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.s3_multipart_uploadsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$s3_multipart_uploadsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.s3_multipart_uploadsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$s3_multipart_uploadsPayload>
          }
          findFirst: {
            args: Prisma.s3_multipart_uploadsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$s3_multipart_uploadsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.s3_multipart_uploadsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$s3_multipart_uploadsPayload>
          }
          findMany: {
            args: Prisma.s3_multipart_uploadsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$s3_multipart_uploadsPayload>[]
          }
          create: {
            args: Prisma.s3_multipart_uploadsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$s3_multipart_uploadsPayload>
          }
          createMany: {
            args: Prisma.s3_multipart_uploadsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.s3_multipart_uploadsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$s3_multipart_uploadsPayload>[]
          }
          delete: {
            args: Prisma.s3_multipart_uploadsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$s3_multipart_uploadsPayload>
          }
          update: {
            args: Prisma.s3_multipart_uploadsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$s3_multipart_uploadsPayload>
          }
          deleteMany: {
            args: Prisma.s3_multipart_uploadsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.s3_multipart_uploadsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.s3_multipart_uploadsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$s3_multipart_uploadsPayload>[]
          }
          upsert: {
            args: Prisma.s3_multipart_uploadsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$s3_multipart_uploadsPayload>
          }
          aggregate: {
            args: Prisma.S3_multipart_uploadsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateS3_multipart_uploads>
          }
          groupBy: {
            args: Prisma.s3_multipart_uploadsGroupByArgs<ExtArgs>
            result: $Utils.Optional<S3_multipart_uploadsGroupByOutputType>[]
          }
          count: {
            args: Prisma.s3_multipart_uploadsCountArgs<ExtArgs>
            result: $Utils.Optional<S3_multipart_uploadsCountAggregateOutputType> | number
          }
        }
      }
      s3_multipart_uploads_parts: {
        payload: Prisma.$s3_multipart_uploads_partsPayload<ExtArgs>
        fields: Prisma.s3_multipart_uploads_partsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.s3_multipart_uploads_partsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$s3_multipart_uploads_partsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.s3_multipart_uploads_partsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$s3_multipart_uploads_partsPayload>
          }
          findFirst: {
            args: Prisma.s3_multipart_uploads_partsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$s3_multipart_uploads_partsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.s3_multipart_uploads_partsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$s3_multipart_uploads_partsPayload>
          }
          findMany: {
            args: Prisma.s3_multipart_uploads_partsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$s3_multipart_uploads_partsPayload>[]
          }
          create: {
            args: Prisma.s3_multipart_uploads_partsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$s3_multipart_uploads_partsPayload>
          }
          createMany: {
            args: Prisma.s3_multipart_uploads_partsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.s3_multipart_uploads_partsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$s3_multipart_uploads_partsPayload>[]
          }
          delete: {
            args: Prisma.s3_multipart_uploads_partsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$s3_multipart_uploads_partsPayload>
          }
          update: {
            args: Prisma.s3_multipart_uploads_partsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$s3_multipart_uploads_partsPayload>
          }
          deleteMany: {
            args: Prisma.s3_multipart_uploads_partsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.s3_multipart_uploads_partsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.s3_multipart_uploads_partsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$s3_multipart_uploads_partsPayload>[]
          }
          upsert: {
            args: Prisma.s3_multipart_uploads_partsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$s3_multipart_uploads_partsPayload>
          }
          aggregate: {
            args: Prisma.S3_multipart_uploads_partsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateS3_multipart_uploads_parts>
          }
          groupBy: {
            args: Prisma.s3_multipart_uploads_partsGroupByArgs<ExtArgs>
            result: $Utils.Optional<S3_multipart_uploads_partsGroupByOutputType>[]
          }
          count: {
            args: Prisma.s3_multipart_uploads_partsCountArgs<ExtArgs>
            result: $Utils.Optional<S3_multipart_uploads_partsCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    userProfiles?: UserProfilesOmit
    user?: UserOmit
    userHistory?: UserHistoryOmit
    accountRep?: AccountRepOmit
    software?: SoftwareOmit
    softwareHistory?: SoftwareHistoryOmit
    userSoftware?: UserSoftwareOmit
    sharedAccount?: SharedAccountOmit
    sharedAccountHistory?: SharedAccountHistoryOmit
    softwareAccess?: SoftwareAccessOmit
    audit_log_entries?: audit_log_entriesOmit
    flow_state?: flow_stateOmit
    identities?: identitiesOmit
    instances?: instancesOmit
    mfa_amr_claims?: mfa_amr_claimsOmit
    mfa_challenges?: mfa_challengesOmit
    mfa_factors?: mfa_factorsOmit
    one_time_tokens?: one_time_tokensOmit
    refresh_tokens?: refresh_tokensOmit
    saml_providers?: saml_providersOmit
    saml_relay_states?: saml_relay_statesOmit
    schema_migrations?: schema_migrationsOmit
    sessions?: sessionsOmit
    sso_domains?: sso_domainsOmit
    sso_providers?: sso_providersOmit
    users?: usersOmit
    buckets?: bucketsOmit
    migrations?: migrationsOmit
    objects?: objectsOmit
    s3_multipart_uploads?: s3_multipart_uploadsOmit
    s3_multipart_uploads_parts?: s3_multipart_uploads_partsOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserProfilesCountOutputType
   */

  export type UserProfilesCountOutputType = {
    UserSoftware: number
    Software: number
  }

  export type UserProfilesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    UserSoftware?: boolean | UserProfilesCountOutputTypeCountUserSoftwareArgs
    Software?: boolean | UserProfilesCountOutputTypeCountSoftwareArgs
  }

  // Custom InputTypes
  /**
   * UserProfilesCountOutputType without action
   */
  export type UserProfilesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfilesCountOutputType
     */
    select?: UserProfilesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserProfilesCountOutputType without action
   */
  export type UserProfilesCountOutputTypeCountUserSoftwareArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserSoftwareWhereInput
  }

  /**
   * UserProfilesCountOutputType without action
   */
  export type UserProfilesCountOutputTypeCountSoftwareArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SoftwareWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    SharedAccount: number
    softwareNotes: number
    Software: number
    subordinates: number
    histories: number
    software: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SharedAccount?: boolean | UserCountOutputTypeCountSharedAccountArgs
    softwareNotes?: boolean | UserCountOutputTypeCountSoftwareNotesArgs
    Software?: boolean | UserCountOutputTypeCountSoftwareArgs
    subordinates?: boolean | UserCountOutputTypeCountSubordinatesArgs
    histories?: boolean | UserCountOutputTypeCountHistoriesArgs
    software?: boolean | UserCountOutputTypeCountSoftwareArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSharedAccountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SharedAccountWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSoftwareNotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SoftwareWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSoftwareArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SoftwareWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSubordinatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountHistoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserHistoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSoftwareArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserSoftwareWhereInput
  }


  /**
   * Count Type SoftwareCountOutputType
   */

  export type SoftwareCountOutputType = {
    accountReps: number
    SoftwareAccess: number
    histories: number
    UserSoftware: number
    Assigned: number
  }

  export type SoftwareCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accountReps?: boolean | SoftwareCountOutputTypeCountAccountRepsArgs
    SoftwareAccess?: boolean | SoftwareCountOutputTypeCountSoftwareAccessArgs
    histories?: boolean | SoftwareCountOutputTypeCountHistoriesArgs
    UserSoftware?: boolean | SoftwareCountOutputTypeCountUserSoftwareArgs
    Assigned?: boolean | SoftwareCountOutputTypeCountAssignedArgs
  }

  // Custom InputTypes
  /**
   * SoftwareCountOutputType without action
   */
  export type SoftwareCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareCountOutputType
     */
    select?: SoftwareCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SoftwareCountOutputType without action
   */
  export type SoftwareCountOutputTypeCountAccountRepsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountRepWhereInput
  }

  /**
   * SoftwareCountOutputType without action
   */
  export type SoftwareCountOutputTypeCountSoftwareAccessArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SoftwareAccessWhereInput
  }

  /**
   * SoftwareCountOutputType without action
   */
  export type SoftwareCountOutputTypeCountHistoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SoftwareHistoryWhereInput
  }

  /**
   * SoftwareCountOutputType without action
   */
  export type SoftwareCountOutputTypeCountUserSoftwareArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserSoftwareWhereInput
  }

  /**
   * SoftwareCountOutputType without action
   */
  export type SoftwareCountOutputTypeCountAssignedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserProfilesWhereInput
  }


  /**
   * Count Type SharedAccountCountOutputType
   */

  export type SharedAccountCountOutputType = {
    histories: number
    softwareAccesses: number
  }

  export type SharedAccountCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    histories?: boolean | SharedAccountCountOutputTypeCountHistoriesArgs
    softwareAccesses?: boolean | SharedAccountCountOutputTypeCountSoftwareAccessesArgs
  }

  // Custom InputTypes
  /**
   * SharedAccountCountOutputType without action
   */
  export type SharedAccountCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccountCountOutputType
     */
    select?: SharedAccountCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SharedAccountCountOutputType without action
   */
  export type SharedAccountCountOutputTypeCountHistoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SharedAccountHistoryWhereInput
  }

  /**
   * SharedAccountCountOutputType without action
   */
  export type SharedAccountCountOutputTypeCountSoftwareAccessesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SoftwareAccessWhereInput
  }


  /**
   * Count Type Flow_stateCountOutputType
   */

  export type Flow_stateCountOutputType = {
    saml_relay_states: number
  }

  export type Flow_stateCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    saml_relay_states?: boolean | Flow_stateCountOutputTypeCountSaml_relay_statesArgs
  }

  // Custom InputTypes
  /**
   * Flow_stateCountOutputType without action
   */
  export type Flow_stateCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Flow_stateCountOutputType
     */
    select?: Flow_stateCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Flow_stateCountOutputType without action
   */
  export type Flow_stateCountOutputTypeCountSaml_relay_statesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: saml_relay_statesWhereInput
  }


  /**
   * Count Type Mfa_factorsCountOutputType
   */

  export type Mfa_factorsCountOutputType = {
    mfa_challenges: number
  }

  export type Mfa_factorsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mfa_challenges?: boolean | Mfa_factorsCountOutputTypeCountMfa_challengesArgs
  }

  // Custom InputTypes
  /**
   * Mfa_factorsCountOutputType without action
   */
  export type Mfa_factorsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mfa_factorsCountOutputType
     */
    select?: Mfa_factorsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Mfa_factorsCountOutputType without action
   */
  export type Mfa_factorsCountOutputTypeCountMfa_challengesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mfa_challengesWhereInput
  }


  /**
   * Count Type SessionsCountOutputType
   */

  export type SessionsCountOutputType = {
    mfa_amr_claims: number
    refresh_tokens: number
  }

  export type SessionsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mfa_amr_claims?: boolean | SessionsCountOutputTypeCountMfa_amr_claimsArgs
    refresh_tokens?: boolean | SessionsCountOutputTypeCountRefresh_tokensArgs
  }

  // Custom InputTypes
  /**
   * SessionsCountOutputType without action
   */
  export type SessionsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SessionsCountOutputType
     */
    select?: SessionsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SessionsCountOutputType without action
   */
  export type SessionsCountOutputTypeCountMfa_amr_claimsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mfa_amr_claimsWhereInput
  }

  /**
   * SessionsCountOutputType without action
   */
  export type SessionsCountOutputTypeCountRefresh_tokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: refresh_tokensWhereInput
  }


  /**
   * Count Type Sso_providersCountOutputType
   */

  export type Sso_providersCountOutputType = {
    saml_providers: number
    saml_relay_states: number
    sso_domains: number
  }

  export type Sso_providersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    saml_providers?: boolean | Sso_providersCountOutputTypeCountSaml_providersArgs
    saml_relay_states?: boolean | Sso_providersCountOutputTypeCountSaml_relay_statesArgs
    sso_domains?: boolean | Sso_providersCountOutputTypeCountSso_domainsArgs
  }

  // Custom InputTypes
  /**
   * Sso_providersCountOutputType without action
   */
  export type Sso_providersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sso_providersCountOutputType
     */
    select?: Sso_providersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Sso_providersCountOutputType without action
   */
  export type Sso_providersCountOutputTypeCountSaml_providersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: saml_providersWhereInput
  }

  /**
   * Sso_providersCountOutputType without action
   */
  export type Sso_providersCountOutputTypeCountSaml_relay_statesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: saml_relay_statesWhereInput
  }

  /**
   * Sso_providersCountOutputType without action
   */
  export type Sso_providersCountOutputTypeCountSso_domainsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sso_domainsWhereInput
  }


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    identities: number
    mfa_factors: number
    one_time_tokens: number
    sessions: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    identities?: boolean | UsersCountOutputTypeCountIdentitiesArgs
    mfa_factors?: boolean | UsersCountOutputTypeCountMfa_factorsArgs
    one_time_tokens?: boolean | UsersCountOutputTypeCountOne_time_tokensArgs
    sessions?: boolean | UsersCountOutputTypeCountSessionsArgs
  }

  // Custom InputTypes
  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountIdentitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: identitiesWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountMfa_factorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mfa_factorsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountOne_time_tokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: one_time_tokensWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sessionsWhereInput
  }


  /**
   * Count Type BucketsCountOutputType
   */

  export type BucketsCountOutputType = {
    objects: number
    s3_multipart_uploads: number
    s3_multipart_uploads_parts: number
  }

  export type BucketsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    objects?: boolean | BucketsCountOutputTypeCountObjectsArgs
    s3_multipart_uploads?: boolean | BucketsCountOutputTypeCountS3_multipart_uploadsArgs
    s3_multipart_uploads_parts?: boolean | BucketsCountOutputTypeCountS3_multipart_uploads_partsArgs
  }

  // Custom InputTypes
  /**
   * BucketsCountOutputType without action
   */
  export type BucketsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BucketsCountOutputType
     */
    select?: BucketsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BucketsCountOutputType without action
   */
  export type BucketsCountOutputTypeCountObjectsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: objectsWhereInput
  }

  /**
   * BucketsCountOutputType without action
   */
  export type BucketsCountOutputTypeCountS3_multipart_uploadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: s3_multipart_uploadsWhereInput
  }

  /**
   * BucketsCountOutputType without action
   */
  export type BucketsCountOutputTypeCountS3_multipart_uploads_partsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: s3_multipart_uploads_partsWhereInput
  }


  /**
   * Count Type S3_multipart_uploadsCountOutputType
   */

  export type S3_multipart_uploadsCountOutputType = {
    s3_multipart_uploads_parts: number
  }

  export type S3_multipart_uploadsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    s3_multipart_uploads_parts?: boolean | S3_multipart_uploadsCountOutputTypeCountS3_multipart_uploads_partsArgs
  }

  // Custom InputTypes
  /**
   * S3_multipart_uploadsCountOutputType without action
   */
  export type S3_multipart_uploadsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the S3_multipart_uploadsCountOutputType
     */
    select?: S3_multipart_uploadsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * S3_multipart_uploadsCountOutputType without action
   */
  export type S3_multipart_uploadsCountOutputTypeCountS3_multipart_uploads_partsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: s3_multipart_uploads_partsWhereInput
  }


  /**
   * Models
   */

  /**
   * Model UserProfiles
   */

  export type AggregateUserProfiles = {
    _count: UserProfilesCountAggregateOutputType | null
    _min: UserProfilesMinAggregateOutputType | null
    _max: UserProfilesMaxAggregateOutputType | null
  }

  export type UserProfilesMinAggregateOutputType = {
    id: string | null
    username: string | null
    fullName: string | null
    email: string | null
    phone: string | null
    avatarUrl: string | null
    website: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserProfilesMaxAggregateOutputType = {
    id: string | null
    username: string | null
    fullName: string | null
    email: string | null
    phone: string | null
    avatarUrl: string | null
    website: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserProfilesCountAggregateOutputType = {
    id: number
    username: number
    fullName: number
    email: number
    phone: number
    avatarUrl: number
    website: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserProfilesMinAggregateInputType = {
    id?: true
    username?: true
    fullName?: true
    email?: true
    phone?: true
    avatarUrl?: true
    website?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserProfilesMaxAggregateInputType = {
    id?: true
    username?: true
    fullName?: true
    email?: true
    phone?: true
    avatarUrl?: true
    website?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserProfilesCountAggregateInputType = {
    id?: true
    username?: true
    fullName?: true
    email?: true
    phone?: true
    avatarUrl?: true
    website?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserProfilesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserProfiles to aggregate.
     */
    where?: UserProfilesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserProfiles to fetch.
     */
    orderBy?: UserProfilesOrderByWithRelationInput | UserProfilesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserProfilesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserProfiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserProfiles
    **/
    _count?: true | UserProfilesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserProfilesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserProfilesMaxAggregateInputType
  }

  export type GetUserProfilesAggregateType<T extends UserProfilesAggregateArgs> = {
        [P in keyof T & keyof AggregateUserProfiles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserProfiles[P]>
      : GetScalarType<T[P], AggregateUserProfiles[P]>
  }




  export type UserProfilesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserProfilesWhereInput
    orderBy?: UserProfilesOrderByWithAggregationInput | UserProfilesOrderByWithAggregationInput[]
    by: UserProfilesScalarFieldEnum[] | UserProfilesScalarFieldEnum
    having?: UserProfilesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserProfilesCountAggregateInputType | true
    _min?: UserProfilesMinAggregateInputType
    _max?: UserProfilesMaxAggregateInputType
  }

  export type UserProfilesGroupByOutputType = {
    id: string
    username: string | null
    fullName: string | null
    email: string | null
    phone: string | null
    avatarUrl: string | null
    website: string | null
    createdAt: Date
    updatedAt: Date
    _count: UserProfilesCountAggregateOutputType | null
    _min: UserProfilesMinAggregateOutputType | null
    _max: UserProfilesMaxAggregateOutputType | null
  }

  type GetUserProfilesGroupByPayload<T extends UserProfilesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserProfilesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserProfilesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserProfilesGroupByOutputType[P]>
            : GetScalarType<T[P], UserProfilesGroupByOutputType[P]>
        }
      >
    >


  export type UserProfilesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    fullName?: boolean
    email?: boolean
    phone?: boolean
    avatarUrl?: boolean
    website?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    UserSoftware?: boolean | UserProfiles$UserSoftwareArgs<ExtArgs>
    Software?: boolean | UserProfiles$SoftwareArgs<ExtArgs>
    _count?: boolean | UserProfilesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userProfiles"]>

  export type UserProfilesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    fullName?: boolean
    email?: boolean
    phone?: boolean
    avatarUrl?: boolean
    website?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["userProfiles"]>

  export type UserProfilesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    fullName?: boolean
    email?: boolean
    phone?: boolean
    avatarUrl?: boolean
    website?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["userProfiles"]>

  export type UserProfilesSelectScalar = {
    id?: boolean
    username?: boolean
    fullName?: boolean
    email?: boolean
    phone?: boolean
    avatarUrl?: boolean
    website?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserProfilesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "fullName" | "email" | "phone" | "avatarUrl" | "website" | "createdAt" | "updatedAt", ExtArgs["result"]["userProfiles"]>
  export type UserProfilesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    UserSoftware?: boolean | UserProfiles$UserSoftwareArgs<ExtArgs>
    Software?: boolean | UserProfiles$SoftwareArgs<ExtArgs>
    _count?: boolean | UserProfilesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserProfilesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UserProfilesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserProfilesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserProfiles"
    objects: {
      UserSoftware: Prisma.$UserSoftwarePayload<ExtArgs>[]
      Software: Prisma.$SoftwarePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      username: string | null
      fullName: string | null
      email: string | null
      phone: string | null
      avatarUrl: string | null
      website: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["userProfiles"]>
    composites: {}
  }

  type UserProfilesGetPayload<S extends boolean | null | undefined | UserProfilesDefaultArgs> = $Result.GetResult<Prisma.$UserProfilesPayload, S>

  type UserProfilesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserProfilesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserProfilesCountAggregateInputType | true
    }

  export interface UserProfilesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserProfiles'], meta: { name: 'UserProfiles' } }
    /**
     * Find zero or one UserProfiles that matches the filter.
     * @param {UserProfilesFindUniqueArgs} args - Arguments to find a UserProfiles
     * @example
     * // Get one UserProfiles
     * const userProfiles = await prisma.userProfiles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserProfilesFindUniqueArgs>(args: SelectSubset<T, UserProfilesFindUniqueArgs<ExtArgs>>): Prisma__UserProfilesClient<$Result.GetResult<Prisma.$UserProfilesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UserProfiles that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserProfilesFindUniqueOrThrowArgs} args - Arguments to find a UserProfiles
     * @example
     * // Get one UserProfiles
     * const userProfiles = await prisma.userProfiles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserProfilesFindUniqueOrThrowArgs>(args: SelectSubset<T, UserProfilesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserProfilesClient<$Result.GetResult<Prisma.$UserProfilesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserProfiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserProfilesFindFirstArgs} args - Arguments to find a UserProfiles
     * @example
     * // Get one UserProfiles
     * const userProfiles = await prisma.userProfiles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserProfilesFindFirstArgs>(args?: SelectSubset<T, UserProfilesFindFirstArgs<ExtArgs>>): Prisma__UserProfilesClient<$Result.GetResult<Prisma.$UserProfilesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserProfiles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserProfilesFindFirstOrThrowArgs} args - Arguments to find a UserProfiles
     * @example
     * // Get one UserProfiles
     * const userProfiles = await prisma.userProfiles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserProfilesFindFirstOrThrowArgs>(args?: SelectSubset<T, UserProfilesFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserProfilesClient<$Result.GetResult<Prisma.$UserProfilesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UserProfiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserProfilesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserProfiles
     * const userProfiles = await prisma.userProfiles.findMany()
     * 
     * // Get first 10 UserProfiles
     * const userProfiles = await prisma.userProfiles.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userProfilesWithIdOnly = await prisma.userProfiles.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserProfilesFindManyArgs>(args?: SelectSubset<T, UserProfilesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserProfilesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UserProfiles.
     * @param {UserProfilesCreateArgs} args - Arguments to create a UserProfiles.
     * @example
     * // Create one UserProfiles
     * const UserProfiles = await prisma.userProfiles.create({
     *   data: {
     *     // ... data to create a UserProfiles
     *   }
     * })
     * 
     */
    create<T extends UserProfilesCreateArgs>(args: SelectSubset<T, UserProfilesCreateArgs<ExtArgs>>): Prisma__UserProfilesClient<$Result.GetResult<Prisma.$UserProfilesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UserProfiles.
     * @param {UserProfilesCreateManyArgs} args - Arguments to create many UserProfiles.
     * @example
     * // Create many UserProfiles
     * const userProfiles = await prisma.userProfiles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserProfilesCreateManyArgs>(args?: SelectSubset<T, UserProfilesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserProfiles and returns the data saved in the database.
     * @param {UserProfilesCreateManyAndReturnArgs} args - Arguments to create many UserProfiles.
     * @example
     * // Create many UserProfiles
     * const userProfiles = await prisma.userProfiles.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserProfiles and only return the `id`
     * const userProfilesWithIdOnly = await prisma.userProfiles.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserProfilesCreateManyAndReturnArgs>(args?: SelectSubset<T, UserProfilesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserProfilesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UserProfiles.
     * @param {UserProfilesDeleteArgs} args - Arguments to delete one UserProfiles.
     * @example
     * // Delete one UserProfiles
     * const UserProfiles = await prisma.userProfiles.delete({
     *   where: {
     *     // ... filter to delete one UserProfiles
     *   }
     * })
     * 
     */
    delete<T extends UserProfilesDeleteArgs>(args: SelectSubset<T, UserProfilesDeleteArgs<ExtArgs>>): Prisma__UserProfilesClient<$Result.GetResult<Prisma.$UserProfilesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UserProfiles.
     * @param {UserProfilesUpdateArgs} args - Arguments to update one UserProfiles.
     * @example
     * // Update one UserProfiles
     * const userProfiles = await prisma.userProfiles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserProfilesUpdateArgs>(args: SelectSubset<T, UserProfilesUpdateArgs<ExtArgs>>): Prisma__UserProfilesClient<$Result.GetResult<Prisma.$UserProfilesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UserProfiles.
     * @param {UserProfilesDeleteManyArgs} args - Arguments to filter UserProfiles to delete.
     * @example
     * // Delete a few UserProfiles
     * const { count } = await prisma.userProfiles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserProfilesDeleteManyArgs>(args?: SelectSubset<T, UserProfilesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserProfiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserProfilesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserProfiles
     * const userProfiles = await prisma.userProfiles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserProfilesUpdateManyArgs>(args: SelectSubset<T, UserProfilesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserProfiles and returns the data updated in the database.
     * @param {UserProfilesUpdateManyAndReturnArgs} args - Arguments to update many UserProfiles.
     * @example
     * // Update many UserProfiles
     * const userProfiles = await prisma.userProfiles.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UserProfiles and only return the `id`
     * const userProfilesWithIdOnly = await prisma.userProfiles.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserProfilesUpdateManyAndReturnArgs>(args: SelectSubset<T, UserProfilesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserProfilesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UserProfiles.
     * @param {UserProfilesUpsertArgs} args - Arguments to update or create a UserProfiles.
     * @example
     * // Update or create a UserProfiles
     * const userProfiles = await prisma.userProfiles.upsert({
     *   create: {
     *     // ... data to create a UserProfiles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserProfiles we want to update
     *   }
     * })
     */
    upsert<T extends UserProfilesUpsertArgs>(args: SelectSubset<T, UserProfilesUpsertArgs<ExtArgs>>): Prisma__UserProfilesClient<$Result.GetResult<Prisma.$UserProfilesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UserProfiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserProfilesCountArgs} args - Arguments to filter UserProfiles to count.
     * @example
     * // Count the number of UserProfiles
     * const count = await prisma.userProfiles.count({
     *   where: {
     *     // ... the filter for the UserProfiles we want to count
     *   }
     * })
    **/
    count<T extends UserProfilesCountArgs>(
      args?: Subset<T, UserProfilesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserProfilesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserProfiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserProfilesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserProfilesAggregateArgs>(args: Subset<T, UserProfilesAggregateArgs>): Prisma.PrismaPromise<GetUserProfilesAggregateType<T>>

    /**
     * Group by UserProfiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserProfilesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserProfilesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserProfilesGroupByArgs['orderBy'] }
        : { orderBy?: UserProfilesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserProfilesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserProfilesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserProfiles model
   */
  readonly fields: UserProfilesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserProfiles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserProfilesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    UserSoftware<T extends UserProfiles$UserSoftwareArgs<ExtArgs> = {}>(args?: Subset<T, UserProfiles$UserSoftwareArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSoftwarePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Software<T extends UserProfiles$SoftwareArgs<ExtArgs> = {}>(args?: Subset<T, UserProfiles$SoftwareArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserProfiles model
   */
  interface UserProfilesFieldRefs {
    readonly id: FieldRef<"UserProfiles", 'String'>
    readonly username: FieldRef<"UserProfiles", 'String'>
    readonly fullName: FieldRef<"UserProfiles", 'String'>
    readonly email: FieldRef<"UserProfiles", 'String'>
    readonly phone: FieldRef<"UserProfiles", 'String'>
    readonly avatarUrl: FieldRef<"UserProfiles", 'String'>
    readonly website: FieldRef<"UserProfiles", 'String'>
    readonly createdAt: FieldRef<"UserProfiles", 'DateTime'>
    readonly updatedAt: FieldRef<"UserProfiles", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserProfiles findUnique
   */
  export type UserProfilesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfiles
     */
    select?: UserProfilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfiles
     */
    omit?: UserProfilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfilesInclude<ExtArgs> | null
    /**
     * Filter, which UserProfiles to fetch.
     */
    where: UserProfilesWhereUniqueInput
  }

  /**
   * UserProfiles findUniqueOrThrow
   */
  export type UserProfilesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfiles
     */
    select?: UserProfilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfiles
     */
    omit?: UserProfilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfilesInclude<ExtArgs> | null
    /**
     * Filter, which UserProfiles to fetch.
     */
    where: UserProfilesWhereUniqueInput
  }

  /**
   * UserProfiles findFirst
   */
  export type UserProfilesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfiles
     */
    select?: UserProfilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfiles
     */
    omit?: UserProfilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfilesInclude<ExtArgs> | null
    /**
     * Filter, which UserProfiles to fetch.
     */
    where?: UserProfilesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserProfiles to fetch.
     */
    orderBy?: UserProfilesOrderByWithRelationInput | UserProfilesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserProfiles.
     */
    cursor?: UserProfilesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserProfiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserProfiles.
     */
    distinct?: UserProfilesScalarFieldEnum | UserProfilesScalarFieldEnum[]
  }

  /**
   * UserProfiles findFirstOrThrow
   */
  export type UserProfilesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfiles
     */
    select?: UserProfilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfiles
     */
    omit?: UserProfilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfilesInclude<ExtArgs> | null
    /**
     * Filter, which UserProfiles to fetch.
     */
    where?: UserProfilesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserProfiles to fetch.
     */
    orderBy?: UserProfilesOrderByWithRelationInput | UserProfilesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserProfiles.
     */
    cursor?: UserProfilesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserProfiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserProfiles.
     */
    distinct?: UserProfilesScalarFieldEnum | UserProfilesScalarFieldEnum[]
  }

  /**
   * UserProfiles findMany
   */
  export type UserProfilesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfiles
     */
    select?: UserProfilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfiles
     */
    omit?: UserProfilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfilesInclude<ExtArgs> | null
    /**
     * Filter, which UserProfiles to fetch.
     */
    where?: UserProfilesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserProfiles to fetch.
     */
    orderBy?: UserProfilesOrderByWithRelationInput | UserProfilesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserProfiles.
     */
    cursor?: UserProfilesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserProfiles.
     */
    skip?: number
    distinct?: UserProfilesScalarFieldEnum | UserProfilesScalarFieldEnum[]
  }

  /**
   * UserProfiles create
   */
  export type UserProfilesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfiles
     */
    select?: UserProfilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfiles
     */
    omit?: UserProfilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfilesInclude<ExtArgs> | null
    /**
     * The data needed to create a UserProfiles.
     */
    data: XOR<UserProfilesCreateInput, UserProfilesUncheckedCreateInput>
  }

  /**
   * UserProfiles createMany
   */
  export type UserProfilesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserProfiles.
     */
    data: UserProfilesCreateManyInput | UserProfilesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserProfiles createManyAndReturn
   */
  export type UserProfilesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfiles
     */
    select?: UserProfilesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfiles
     */
    omit?: UserProfilesOmit<ExtArgs> | null
    /**
     * The data used to create many UserProfiles.
     */
    data: UserProfilesCreateManyInput | UserProfilesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserProfiles update
   */
  export type UserProfilesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfiles
     */
    select?: UserProfilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfiles
     */
    omit?: UserProfilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfilesInclude<ExtArgs> | null
    /**
     * The data needed to update a UserProfiles.
     */
    data: XOR<UserProfilesUpdateInput, UserProfilesUncheckedUpdateInput>
    /**
     * Choose, which UserProfiles to update.
     */
    where: UserProfilesWhereUniqueInput
  }

  /**
   * UserProfiles updateMany
   */
  export type UserProfilesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserProfiles.
     */
    data: XOR<UserProfilesUpdateManyMutationInput, UserProfilesUncheckedUpdateManyInput>
    /**
     * Filter which UserProfiles to update
     */
    where?: UserProfilesWhereInput
    /**
     * Limit how many UserProfiles to update.
     */
    limit?: number
  }

  /**
   * UserProfiles updateManyAndReturn
   */
  export type UserProfilesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfiles
     */
    select?: UserProfilesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfiles
     */
    omit?: UserProfilesOmit<ExtArgs> | null
    /**
     * The data used to update UserProfiles.
     */
    data: XOR<UserProfilesUpdateManyMutationInput, UserProfilesUncheckedUpdateManyInput>
    /**
     * Filter which UserProfiles to update
     */
    where?: UserProfilesWhereInput
    /**
     * Limit how many UserProfiles to update.
     */
    limit?: number
  }

  /**
   * UserProfiles upsert
   */
  export type UserProfilesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfiles
     */
    select?: UserProfilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfiles
     */
    omit?: UserProfilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfilesInclude<ExtArgs> | null
    /**
     * The filter to search for the UserProfiles to update in case it exists.
     */
    where: UserProfilesWhereUniqueInput
    /**
     * In case the UserProfiles found by the `where` argument doesn't exist, create a new UserProfiles with this data.
     */
    create: XOR<UserProfilesCreateInput, UserProfilesUncheckedCreateInput>
    /**
     * In case the UserProfiles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserProfilesUpdateInput, UserProfilesUncheckedUpdateInput>
  }

  /**
   * UserProfiles delete
   */
  export type UserProfilesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfiles
     */
    select?: UserProfilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfiles
     */
    omit?: UserProfilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfilesInclude<ExtArgs> | null
    /**
     * Filter which UserProfiles to delete.
     */
    where: UserProfilesWhereUniqueInput
  }

  /**
   * UserProfiles deleteMany
   */
  export type UserProfilesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserProfiles to delete
     */
    where?: UserProfilesWhereInput
    /**
     * Limit how many UserProfiles to delete.
     */
    limit?: number
  }

  /**
   * UserProfiles.UserSoftware
   */
  export type UserProfiles$UserSoftwareArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSoftware
     */
    select?: UserSoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSoftware
     */
    omit?: UserSoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSoftwareInclude<ExtArgs> | null
    where?: UserSoftwareWhereInput
    orderBy?: UserSoftwareOrderByWithRelationInput | UserSoftwareOrderByWithRelationInput[]
    cursor?: UserSoftwareWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserSoftwareScalarFieldEnum | UserSoftwareScalarFieldEnum[]
  }

  /**
   * UserProfiles.Software
   */
  export type UserProfiles$SoftwareArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareInclude<ExtArgs> | null
    where?: SoftwareWhereInput
    orderBy?: SoftwareOrderByWithRelationInput | SoftwareOrderByWithRelationInput[]
    cursor?: SoftwareWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SoftwareScalarFieldEnum | SoftwareScalarFieldEnum[]
  }

  /**
   * UserProfiles without action
   */
  export type UserProfilesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfiles
     */
    select?: UserProfilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfiles
     */
    omit?: UserProfilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfilesInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    department: string | null
    email: string | null
    name: string | null
    jobTitle: string | null
    location: string | null
    personalEmail: string | null
    reportsToId: string | null
    type: string | null
    status: string | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    department: string | null
    email: string | null
    name: string | null
    jobTitle: string | null
    location: string | null
    personalEmail: string | null
    reportsToId: string | null
    type: string | null
    status: string | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    createdAt: number
    updatedAt: number
    department: number
    email: number
    name: number
    jobTitle: number
    location: number
    personalEmail: number
    reportsToId: number
    type: number
    status: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    department?: true
    email?: true
    name?: true
    jobTitle?: true
    location?: true
    personalEmail?: true
    reportsToId?: true
    type?: true
    status?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    department?: true
    email?: true
    name?: true
    jobTitle?: true
    location?: true
    personalEmail?: true
    reportsToId?: true
    type?: true
    status?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    department?: true
    email?: true
    name?: true
    jobTitle?: true
    location?: true
    personalEmail?: true
    reportsToId?: true
    type?: true
    status?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    createdAt: Date
    updatedAt: Date
    department: string
    email: string
    name: string
    jobTitle: string | null
    location: string | null
    personalEmail: string | null
    reportsToId: string | null
    type: string | null
    status: string
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    department?: boolean
    email?: boolean
    name?: boolean
    jobTitle?: boolean
    location?: boolean
    personalEmail?: boolean
    reportsToId?: boolean
    type?: boolean
    status?: boolean
    SharedAccount?: boolean | User$SharedAccountArgs<ExtArgs>
    softwareNotes?: boolean | User$softwareNotesArgs<ExtArgs>
    Software?: boolean | User$SoftwareArgs<ExtArgs>
    reportsTo?: boolean | User$reportsToArgs<ExtArgs>
    subordinates?: boolean | User$subordinatesArgs<ExtArgs>
    histories?: boolean | User$historiesArgs<ExtArgs>
    software?: boolean | User$softwareArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    department?: boolean
    email?: boolean
    name?: boolean
    jobTitle?: boolean
    location?: boolean
    personalEmail?: boolean
    reportsToId?: boolean
    type?: boolean
    status?: boolean
    reportsTo?: boolean | User$reportsToArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    department?: boolean
    email?: boolean
    name?: boolean
    jobTitle?: boolean
    location?: boolean
    personalEmail?: boolean
    reportsToId?: boolean
    type?: boolean
    status?: boolean
    reportsTo?: boolean | User$reportsToArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    department?: boolean
    email?: boolean
    name?: boolean
    jobTitle?: boolean
    location?: boolean
    personalEmail?: boolean
    reportsToId?: boolean
    type?: boolean
    status?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "createdAt" | "updatedAt" | "department" | "email" | "name" | "jobTitle" | "location" | "personalEmail" | "reportsToId" | "type" | "status", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SharedAccount?: boolean | User$SharedAccountArgs<ExtArgs>
    softwareNotes?: boolean | User$softwareNotesArgs<ExtArgs>
    Software?: boolean | User$SoftwareArgs<ExtArgs>
    reportsTo?: boolean | User$reportsToArgs<ExtArgs>
    subordinates?: boolean | User$subordinatesArgs<ExtArgs>
    histories?: boolean | User$historiesArgs<ExtArgs>
    software?: boolean | User$softwareArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reportsTo?: boolean | User$reportsToArgs<ExtArgs>
  }
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reportsTo?: boolean | User$reportsToArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      SharedAccount: Prisma.$SharedAccountPayload<ExtArgs>[]
      softwareNotes: Prisma.$SoftwarePayload<ExtArgs>[]
      Software: Prisma.$SoftwarePayload<ExtArgs>[]
      reportsTo: Prisma.$UserPayload<ExtArgs> | null
      subordinates: Prisma.$UserPayload<ExtArgs>[]
      histories: Prisma.$UserHistoryPayload<ExtArgs>[]
      software: Prisma.$UserSoftwarePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      createdAt: Date
      updatedAt: Date
      department: string
      email: string
      name: string
      jobTitle: string | null
      location: string | null
      personalEmail: string | null
      reportsToId: string | null
      type: string | null
      status: string
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    SharedAccount<T extends User$SharedAccountArgs<ExtArgs> = {}>(args?: Subset<T, User$SharedAccountArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SharedAccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    softwareNotes<T extends User$softwareNotesArgs<ExtArgs> = {}>(args?: Subset<T, User$softwareNotesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Software<T extends User$SoftwareArgs<ExtArgs> = {}>(args?: Subset<T, User$SoftwareArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reportsTo<T extends User$reportsToArgs<ExtArgs> = {}>(args?: Subset<T, User$reportsToArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    subordinates<T extends User$subordinatesArgs<ExtArgs> = {}>(args?: Subset<T, User$subordinatesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    histories<T extends User$historiesArgs<ExtArgs> = {}>(args?: Subset<T, User$historiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    software<T extends User$softwareArgs<ExtArgs> = {}>(args?: Subset<T, User$softwareArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSoftwarePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
    readonly department: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly name: FieldRef<"User", 'String'>
    readonly jobTitle: FieldRef<"User", 'String'>
    readonly location: FieldRef<"User", 'String'>
    readonly personalEmail: FieldRef<"User", 'String'>
    readonly reportsToId: FieldRef<"User", 'String'>
    readonly type: FieldRef<"User", 'String'>
    readonly status: FieldRef<"User", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.SharedAccount
   */
  export type User$SharedAccountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccount
     */
    select?: SharedAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccount
     */
    omit?: SharedAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountInclude<ExtArgs> | null
    where?: SharedAccountWhereInput
    orderBy?: SharedAccountOrderByWithRelationInput | SharedAccountOrderByWithRelationInput[]
    cursor?: SharedAccountWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SharedAccountScalarFieldEnum | SharedAccountScalarFieldEnum[]
  }

  /**
   * User.softwareNotes
   */
  export type User$softwareNotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareInclude<ExtArgs> | null
    where?: SoftwareWhereInput
    orderBy?: SoftwareOrderByWithRelationInput | SoftwareOrderByWithRelationInput[]
    cursor?: SoftwareWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SoftwareScalarFieldEnum | SoftwareScalarFieldEnum[]
  }

  /**
   * User.Software
   */
  export type User$SoftwareArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareInclude<ExtArgs> | null
    where?: SoftwareWhereInput
    orderBy?: SoftwareOrderByWithRelationInput | SoftwareOrderByWithRelationInput[]
    cursor?: SoftwareWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SoftwareScalarFieldEnum | SoftwareScalarFieldEnum[]
  }

  /**
   * User.reportsTo
   */
  export type User$reportsToArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * User.subordinates
   */
  export type User$subordinatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User.histories
   */
  export type User$historiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryInclude<ExtArgs> | null
    where?: UserHistoryWhereInput
    orderBy?: UserHistoryOrderByWithRelationInput | UserHistoryOrderByWithRelationInput[]
    cursor?: UserHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserHistoryScalarFieldEnum | UserHistoryScalarFieldEnum[]
  }

  /**
   * User.software
   */
  export type User$softwareArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSoftware
     */
    select?: UserSoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSoftware
     */
    omit?: UserSoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSoftwareInclude<ExtArgs> | null
    where?: UserSoftwareWhereInput
    orderBy?: UserSoftwareOrderByWithRelationInput | UserSoftwareOrderByWithRelationInput[]
    cursor?: UserSoftwareWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserSoftwareScalarFieldEnum | UserSoftwareScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model UserHistory
   */

  export type AggregateUserHistory = {
    _count: UserHistoryCountAggregateOutputType | null
    _min: UserHistoryMinAggregateOutputType | null
    _max: UserHistoryMaxAggregateOutputType | null
  }

  export type UserHistoryMinAggregateOutputType = {
    id: string | null
    userId: string | null
    action: string | null
    field: string | null
    newValue: string | null
    oldValue: string | null
    updatedBy: string | null
    updatedOn: Date | null
  }

  export type UserHistoryMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    action: string | null
    field: string | null
    newValue: string | null
    oldValue: string | null
    updatedBy: string | null
    updatedOn: Date | null
  }

  export type UserHistoryCountAggregateOutputType = {
    id: number
    userId: number
    action: number
    field: number
    newValue: number
    oldValue: number
    updatedBy: number
    updatedOn: number
    _all: number
  }


  export type UserHistoryMinAggregateInputType = {
    id?: true
    userId?: true
    action?: true
    field?: true
    newValue?: true
    oldValue?: true
    updatedBy?: true
    updatedOn?: true
  }

  export type UserHistoryMaxAggregateInputType = {
    id?: true
    userId?: true
    action?: true
    field?: true
    newValue?: true
    oldValue?: true
    updatedBy?: true
    updatedOn?: true
  }

  export type UserHistoryCountAggregateInputType = {
    id?: true
    userId?: true
    action?: true
    field?: true
    newValue?: true
    oldValue?: true
    updatedBy?: true
    updatedOn?: true
    _all?: true
  }

  export type UserHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserHistory to aggregate.
     */
    where?: UserHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserHistories to fetch.
     */
    orderBy?: UserHistoryOrderByWithRelationInput | UserHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserHistories
    **/
    _count?: true | UserHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserHistoryMaxAggregateInputType
  }

  export type GetUserHistoryAggregateType<T extends UserHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateUserHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserHistory[P]>
      : GetScalarType<T[P], AggregateUserHistory[P]>
  }




  export type UserHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserHistoryWhereInput
    orderBy?: UserHistoryOrderByWithAggregationInput | UserHistoryOrderByWithAggregationInput[]
    by: UserHistoryScalarFieldEnum[] | UserHistoryScalarFieldEnum
    having?: UserHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserHistoryCountAggregateInputType | true
    _min?: UserHistoryMinAggregateInputType
    _max?: UserHistoryMaxAggregateInputType
  }

  export type UserHistoryGroupByOutputType = {
    id: string
    userId: string
    action: string
    field: string
    newValue: string | null
    oldValue: string | null
    updatedBy: string
    updatedOn: Date
    _count: UserHistoryCountAggregateOutputType | null
    _min: UserHistoryMinAggregateOutputType | null
    _max: UserHistoryMaxAggregateOutputType | null
  }

  type GetUserHistoryGroupByPayload<T extends UserHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], UserHistoryGroupByOutputType[P]>
        }
      >
    >


  export type UserHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    action?: boolean
    field?: boolean
    newValue?: boolean
    oldValue?: boolean
    updatedBy?: boolean
    updatedOn?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userHistory"]>

  export type UserHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    action?: boolean
    field?: boolean
    newValue?: boolean
    oldValue?: boolean
    updatedBy?: boolean
    updatedOn?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userHistory"]>

  export type UserHistorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    action?: boolean
    field?: boolean
    newValue?: boolean
    oldValue?: boolean
    updatedBy?: boolean
    updatedOn?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userHistory"]>

  export type UserHistorySelectScalar = {
    id?: boolean
    userId?: boolean
    action?: boolean
    field?: boolean
    newValue?: boolean
    oldValue?: boolean
    updatedBy?: boolean
    updatedOn?: boolean
  }

  export type UserHistoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "action" | "field" | "newValue" | "oldValue" | "updatedBy" | "updatedOn", ExtArgs["result"]["userHistory"]>
  export type UserHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserHistoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserHistoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserHistory"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      action: string
      field: string
      newValue: string | null
      oldValue: string | null
      updatedBy: string
      updatedOn: Date
    }, ExtArgs["result"]["userHistory"]>
    composites: {}
  }

  type UserHistoryGetPayload<S extends boolean | null | undefined | UserHistoryDefaultArgs> = $Result.GetResult<Prisma.$UserHistoryPayload, S>

  type UserHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserHistoryCountAggregateInputType | true
    }

  export interface UserHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserHistory'], meta: { name: 'UserHistory' } }
    /**
     * Find zero or one UserHistory that matches the filter.
     * @param {UserHistoryFindUniqueArgs} args - Arguments to find a UserHistory
     * @example
     * // Get one UserHistory
     * const userHistory = await prisma.userHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserHistoryFindUniqueArgs>(args: SelectSubset<T, UserHistoryFindUniqueArgs<ExtArgs>>): Prisma__UserHistoryClient<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UserHistory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserHistoryFindUniqueOrThrowArgs} args - Arguments to find a UserHistory
     * @example
     * // Get one UserHistory
     * const userHistory = await prisma.userHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, UserHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserHistoryClient<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHistoryFindFirstArgs} args - Arguments to find a UserHistory
     * @example
     * // Get one UserHistory
     * const userHistory = await prisma.userHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserHistoryFindFirstArgs>(args?: SelectSubset<T, UserHistoryFindFirstArgs<ExtArgs>>): Prisma__UserHistoryClient<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHistoryFindFirstOrThrowArgs} args - Arguments to find a UserHistory
     * @example
     * // Get one UserHistory
     * const userHistory = await prisma.userHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, UserHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserHistoryClient<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UserHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserHistories
     * const userHistories = await prisma.userHistory.findMany()
     * 
     * // Get first 10 UserHistories
     * const userHistories = await prisma.userHistory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userHistoryWithIdOnly = await prisma.userHistory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserHistoryFindManyArgs>(args?: SelectSubset<T, UserHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UserHistory.
     * @param {UserHistoryCreateArgs} args - Arguments to create a UserHistory.
     * @example
     * // Create one UserHistory
     * const UserHistory = await prisma.userHistory.create({
     *   data: {
     *     // ... data to create a UserHistory
     *   }
     * })
     * 
     */
    create<T extends UserHistoryCreateArgs>(args: SelectSubset<T, UserHistoryCreateArgs<ExtArgs>>): Prisma__UserHistoryClient<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UserHistories.
     * @param {UserHistoryCreateManyArgs} args - Arguments to create many UserHistories.
     * @example
     * // Create many UserHistories
     * const userHistory = await prisma.userHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserHistoryCreateManyArgs>(args?: SelectSubset<T, UserHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserHistories and returns the data saved in the database.
     * @param {UserHistoryCreateManyAndReturnArgs} args - Arguments to create many UserHistories.
     * @example
     * // Create many UserHistories
     * const userHistory = await prisma.userHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserHistories and only return the `id`
     * const userHistoryWithIdOnly = await prisma.userHistory.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, UserHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UserHistory.
     * @param {UserHistoryDeleteArgs} args - Arguments to delete one UserHistory.
     * @example
     * // Delete one UserHistory
     * const UserHistory = await prisma.userHistory.delete({
     *   where: {
     *     // ... filter to delete one UserHistory
     *   }
     * })
     * 
     */
    delete<T extends UserHistoryDeleteArgs>(args: SelectSubset<T, UserHistoryDeleteArgs<ExtArgs>>): Prisma__UserHistoryClient<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UserHistory.
     * @param {UserHistoryUpdateArgs} args - Arguments to update one UserHistory.
     * @example
     * // Update one UserHistory
     * const userHistory = await prisma.userHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserHistoryUpdateArgs>(args: SelectSubset<T, UserHistoryUpdateArgs<ExtArgs>>): Prisma__UserHistoryClient<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UserHistories.
     * @param {UserHistoryDeleteManyArgs} args - Arguments to filter UserHistories to delete.
     * @example
     * // Delete a few UserHistories
     * const { count } = await prisma.userHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserHistoryDeleteManyArgs>(args?: SelectSubset<T, UserHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserHistories
     * const userHistory = await prisma.userHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserHistoryUpdateManyArgs>(args: SelectSubset<T, UserHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserHistories and returns the data updated in the database.
     * @param {UserHistoryUpdateManyAndReturnArgs} args - Arguments to update many UserHistories.
     * @example
     * // Update many UserHistories
     * const userHistory = await prisma.userHistory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UserHistories and only return the `id`
     * const userHistoryWithIdOnly = await prisma.userHistory.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserHistoryUpdateManyAndReturnArgs>(args: SelectSubset<T, UserHistoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UserHistory.
     * @param {UserHistoryUpsertArgs} args - Arguments to update or create a UserHistory.
     * @example
     * // Update or create a UserHistory
     * const userHistory = await prisma.userHistory.upsert({
     *   create: {
     *     // ... data to create a UserHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserHistory we want to update
     *   }
     * })
     */
    upsert<T extends UserHistoryUpsertArgs>(args: SelectSubset<T, UserHistoryUpsertArgs<ExtArgs>>): Prisma__UserHistoryClient<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UserHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHistoryCountArgs} args - Arguments to filter UserHistories to count.
     * @example
     * // Count the number of UserHistories
     * const count = await prisma.userHistory.count({
     *   where: {
     *     // ... the filter for the UserHistories we want to count
     *   }
     * })
    **/
    count<T extends UserHistoryCountArgs>(
      args?: Subset<T, UserHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserHistoryAggregateArgs>(args: Subset<T, UserHistoryAggregateArgs>): Prisma.PrismaPromise<GetUserHistoryAggregateType<T>>

    /**
     * Group by UserHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserHistoryGroupByArgs['orderBy'] }
        : { orderBy?: UserHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserHistory model
   */
  readonly fields: UserHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserHistory model
   */
  interface UserHistoryFieldRefs {
    readonly id: FieldRef<"UserHistory", 'String'>
    readonly userId: FieldRef<"UserHistory", 'String'>
    readonly action: FieldRef<"UserHistory", 'String'>
    readonly field: FieldRef<"UserHistory", 'String'>
    readonly newValue: FieldRef<"UserHistory", 'String'>
    readonly oldValue: FieldRef<"UserHistory", 'String'>
    readonly updatedBy: FieldRef<"UserHistory", 'String'>
    readonly updatedOn: FieldRef<"UserHistory", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserHistory findUnique
   */
  export type UserHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryInclude<ExtArgs> | null
    /**
     * Filter, which UserHistory to fetch.
     */
    where: UserHistoryWhereUniqueInput
  }

  /**
   * UserHistory findUniqueOrThrow
   */
  export type UserHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryInclude<ExtArgs> | null
    /**
     * Filter, which UserHistory to fetch.
     */
    where: UserHistoryWhereUniqueInput
  }

  /**
   * UserHistory findFirst
   */
  export type UserHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryInclude<ExtArgs> | null
    /**
     * Filter, which UserHistory to fetch.
     */
    where?: UserHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserHistories to fetch.
     */
    orderBy?: UserHistoryOrderByWithRelationInput | UserHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserHistories.
     */
    cursor?: UserHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserHistories.
     */
    distinct?: UserHistoryScalarFieldEnum | UserHistoryScalarFieldEnum[]
  }

  /**
   * UserHistory findFirstOrThrow
   */
  export type UserHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryInclude<ExtArgs> | null
    /**
     * Filter, which UserHistory to fetch.
     */
    where?: UserHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserHistories to fetch.
     */
    orderBy?: UserHistoryOrderByWithRelationInput | UserHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserHistories.
     */
    cursor?: UserHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserHistories.
     */
    distinct?: UserHistoryScalarFieldEnum | UserHistoryScalarFieldEnum[]
  }

  /**
   * UserHistory findMany
   */
  export type UserHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryInclude<ExtArgs> | null
    /**
     * Filter, which UserHistories to fetch.
     */
    where?: UserHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserHistories to fetch.
     */
    orderBy?: UserHistoryOrderByWithRelationInput | UserHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserHistories.
     */
    cursor?: UserHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserHistories.
     */
    skip?: number
    distinct?: UserHistoryScalarFieldEnum | UserHistoryScalarFieldEnum[]
  }

  /**
   * UserHistory create
   */
  export type UserHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a UserHistory.
     */
    data: XOR<UserHistoryCreateInput, UserHistoryUncheckedCreateInput>
  }

  /**
   * UserHistory createMany
   */
  export type UserHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserHistories.
     */
    data: UserHistoryCreateManyInput | UserHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserHistory createManyAndReturn
   */
  export type UserHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * The data used to create many UserHistories.
     */
    data: UserHistoryCreateManyInput | UserHistoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserHistory update
   */
  export type UserHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a UserHistory.
     */
    data: XOR<UserHistoryUpdateInput, UserHistoryUncheckedUpdateInput>
    /**
     * Choose, which UserHistory to update.
     */
    where: UserHistoryWhereUniqueInput
  }

  /**
   * UserHistory updateMany
   */
  export type UserHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserHistories.
     */
    data: XOR<UserHistoryUpdateManyMutationInput, UserHistoryUncheckedUpdateManyInput>
    /**
     * Filter which UserHistories to update
     */
    where?: UserHistoryWhereInput
    /**
     * Limit how many UserHistories to update.
     */
    limit?: number
  }

  /**
   * UserHistory updateManyAndReturn
   */
  export type UserHistoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * The data used to update UserHistories.
     */
    data: XOR<UserHistoryUpdateManyMutationInput, UserHistoryUncheckedUpdateManyInput>
    /**
     * Filter which UserHistories to update
     */
    where?: UserHistoryWhereInput
    /**
     * Limit how many UserHistories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserHistory upsert
   */
  export type UserHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the UserHistory to update in case it exists.
     */
    where: UserHistoryWhereUniqueInput
    /**
     * In case the UserHistory found by the `where` argument doesn't exist, create a new UserHistory with this data.
     */
    create: XOR<UserHistoryCreateInput, UserHistoryUncheckedCreateInput>
    /**
     * In case the UserHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserHistoryUpdateInput, UserHistoryUncheckedUpdateInput>
  }

  /**
   * UserHistory delete
   */
  export type UserHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryInclude<ExtArgs> | null
    /**
     * Filter which UserHistory to delete.
     */
    where: UserHistoryWhereUniqueInput
  }

  /**
   * UserHistory deleteMany
   */
  export type UserHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserHistories to delete
     */
    where?: UserHistoryWhereInput
    /**
     * Limit how many UserHistories to delete.
     */
    limit?: number
  }

  /**
   * UserHistory without action
   */
  export type UserHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryInclude<ExtArgs> | null
  }


  /**
   * Model AccountRep
   */

  export type AggregateAccountRep = {
    _count: AccountRepCountAggregateOutputType | null
    _min: AccountRepMinAggregateOutputType | null
    _max: AccountRepMaxAggregateOutputType | null
  }

  export type AccountRepMinAggregateOutputType = {
    id: string | null
    softwareId: string | null
    email: string | null
    name: string | null
    phone: string | null
  }

  export type AccountRepMaxAggregateOutputType = {
    id: string | null
    softwareId: string | null
    email: string | null
    name: string | null
    phone: string | null
  }

  export type AccountRepCountAggregateOutputType = {
    id: number
    softwareId: number
    email: number
    name: number
    phone: number
    _all: number
  }


  export type AccountRepMinAggregateInputType = {
    id?: true
    softwareId?: true
    email?: true
    name?: true
    phone?: true
  }

  export type AccountRepMaxAggregateInputType = {
    id?: true
    softwareId?: true
    email?: true
    name?: true
    phone?: true
  }

  export type AccountRepCountAggregateInputType = {
    id?: true
    softwareId?: true
    email?: true
    name?: true
    phone?: true
    _all?: true
  }

  export type AccountRepAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AccountRep to aggregate.
     */
    where?: AccountRepWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AccountReps to fetch.
     */
    orderBy?: AccountRepOrderByWithRelationInput | AccountRepOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AccountRepWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AccountReps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AccountReps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AccountReps
    **/
    _count?: true | AccountRepCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AccountRepMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AccountRepMaxAggregateInputType
  }

  export type GetAccountRepAggregateType<T extends AccountRepAggregateArgs> = {
        [P in keyof T & keyof AggregateAccountRep]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccountRep[P]>
      : GetScalarType<T[P], AggregateAccountRep[P]>
  }




  export type AccountRepGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountRepWhereInput
    orderBy?: AccountRepOrderByWithAggregationInput | AccountRepOrderByWithAggregationInput[]
    by: AccountRepScalarFieldEnum[] | AccountRepScalarFieldEnum
    having?: AccountRepScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AccountRepCountAggregateInputType | true
    _min?: AccountRepMinAggregateInputType
    _max?: AccountRepMaxAggregateInputType
  }

  export type AccountRepGroupByOutputType = {
    id: string
    softwareId: string
    email: string
    name: string
    phone: string
    _count: AccountRepCountAggregateOutputType | null
    _min: AccountRepMinAggregateOutputType | null
    _max: AccountRepMaxAggregateOutputType | null
  }

  type GetAccountRepGroupByPayload<T extends AccountRepGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AccountRepGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AccountRepGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AccountRepGroupByOutputType[P]>
            : GetScalarType<T[P], AccountRepGroupByOutputType[P]>
        }
      >
    >


  export type AccountRepSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    softwareId?: boolean
    email?: boolean
    name?: boolean
    phone?: boolean
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["accountRep"]>

  export type AccountRepSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    softwareId?: boolean
    email?: boolean
    name?: boolean
    phone?: boolean
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["accountRep"]>

  export type AccountRepSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    softwareId?: boolean
    email?: boolean
    name?: boolean
    phone?: boolean
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["accountRep"]>

  export type AccountRepSelectScalar = {
    id?: boolean
    softwareId?: boolean
    email?: boolean
    name?: boolean
    phone?: boolean
  }

  export type AccountRepOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "softwareId" | "email" | "name" | "phone", ExtArgs["result"]["accountRep"]>
  export type AccountRepInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
  }
  export type AccountRepIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
  }
  export type AccountRepIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
  }

  export type $AccountRepPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AccountRep"
    objects: {
      software: Prisma.$SoftwarePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      softwareId: string
      email: string
      name: string
      phone: string
    }, ExtArgs["result"]["accountRep"]>
    composites: {}
  }

  type AccountRepGetPayload<S extends boolean | null | undefined | AccountRepDefaultArgs> = $Result.GetResult<Prisma.$AccountRepPayload, S>

  type AccountRepCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AccountRepFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AccountRepCountAggregateInputType | true
    }

  export interface AccountRepDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AccountRep'], meta: { name: 'AccountRep' } }
    /**
     * Find zero or one AccountRep that matches the filter.
     * @param {AccountRepFindUniqueArgs} args - Arguments to find a AccountRep
     * @example
     * // Get one AccountRep
     * const accountRep = await prisma.accountRep.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AccountRepFindUniqueArgs>(args: SelectSubset<T, AccountRepFindUniqueArgs<ExtArgs>>): Prisma__AccountRepClient<$Result.GetResult<Prisma.$AccountRepPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AccountRep that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AccountRepFindUniqueOrThrowArgs} args - Arguments to find a AccountRep
     * @example
     * // Get one AccountRep
     * const accountRep = await prisma.accountRep.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AccountRepFindUniqueOrThrowArgs>(args: SelectSubset<T, AccountRepFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AccountRepClient<$Result.GetResult<Prisma.$AccountRepPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AccountRep that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountRepFindFirstArgs} args - Arguments to find a AccountRep
     * @example
     * // Get one AccountRep
     * const accountRep = await prisma.accountRep.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AccountRepFindFirstArgs>(args?: SelectSubset<T, AccountRepFindFirstArgs<ExtArgs>>): Prisma__AccountRepClient<$Result.GetResult<Prisma.$AccountRepPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AccountRep that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountRepFindFirstOrThrowArgs} args - Arguments to find a AccountRep
     * @example
     * // Get one AccountRep
     * const accountRep = await prisma.accountRep.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AccountRepFindFirstOrThrowArgs>(args?: SelectSubset<T, AccountRepFindFirstOrThrowArgs<ExtArgs>>): Prisma__AccountRepClient<$Result.GetResult<Prisma.$AccountRepPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AccountReps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountRepFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AccountReps
     * const accountReps = await prisma.accountRep.findMany()
     * 
     * // Get first 10 AccountReps
     * const accountReps = await prisma.accountRep.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const accountRepWithIdOnly = await prisma.accountRep.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AccountRepFindManyArgs>(args?: SelectSubset<T, AccountRepFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountRepPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AccountRep.
     * @param {AccountRepCreateArgs} args - Arguments to create a AccountRep.
     * @example
     * // Create one AccountRep
     * const AccountRep = await prisma.accountRep.create({
     *   data: {
     *     // ... data to create a AccountRep
     *   }
     * })
     * 
     */
    create<T extends AccountRepCreateArgs>(args: SelectSubset<T, AccountRepCreateArgs<ExtArgs>>): Prisma__AccountRepClient<$Result.GetResult<Prisma.$AccountRepPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AccountReps.
     * @param {AccountRepCreateManyArgs} args - Arguments to create many AccountReps.
     * @example
     * // Create many AccountReps
     * const accountRep = await prisma.accountRep.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AccountRepCreateManyArgs>(args?: SelectSubset<T, AccountRepCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AccountReps and returns the data saved in the database.
     * @param {AccountRepCreateManyAndReturnArgs} args - Arguments to create many AccountReps.
     * @example
     * // Create many AccountReps
     * const accountRep = await prisma.accountRep.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AccountReps and only return the `id`
     * const accountRepWithIdOnly = await prisma.accountRep.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AccountRepCreateManyAndReturnArgs>(args?: SelectSubset<T, AccountRepCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountRepPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AccountRep.
     * @param {AccountRepDeleteArgs} args - Arguments to delete one AccountRep.
     * @example
     * // Delete one AccountRep
     * const AccountRep = await prisma.accountRep.delete({
     *   where: {
     *     // ... filter to delete one AccountRep
     *   }
     * })
     * 
     */
    delete<T extends AccountRepDeleteArgs>(args: SelectSubset<T, AccountRepDeleteArgs<ExtArgs>>): Prisma__AccountRepClient<$Result.GetResult<Prisma.$AccountRepPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AccountRep.
     * @param {AccountRepUpdateArgs} args - Arguments to update one AccountRep.
     * @example
     * // Update one AccountRep
     * const accountRep = await prisma.accountRep.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AccountRepUpdateArgs>(args: SelectSubset<T, AccountRepUpdateArgs<ExtArgs>>): Prisma__AccountRepClient<$Result.GetResult<Prisma.$AccountRepPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AccountReps.
     * @param {AccountRepDeleteManyArgs} args - Arguments to filter AccountReps to delete.
     * @example
     * // Delete a few AccountReps
     * const { count } = await prisma.accountRep.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AccountRepDeleteManyArgs>(args?: SelectSubset<T, AccountRepDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AccountReps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountRepUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AccountReps
     * const accountRep = await prisma.accountRep.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AccountRepUpdateManyArgs>(args: SelectSubset<T, AccountRepUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AccountReps and returns the data updated in the database.
     * @param {AccountRepUpdateManyAndReturnArgs} args - Arguments to update many AccountReps.
     * @example
     * // Update many AccountReps
     * const accountRep = await prisma.accountRep.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AccountReps and only return the `id`
     * const accountRepWithIdOnly = await prisma.accountRep.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AccountRepUpdateManyAndReturnArgs>(args: SelectSubset<T, AccountRepUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountRepPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AccountRep.
     * @param {AccountRepUpsertArgs} args - Arguments to update or create a AccountRep.
     * @example
     * // Update or create a AccountRep
     * const accountRep = await prisma.accountRep.upsert({
     *   create: {
     *     // ... data to create a AccountRep
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AccountRep we want to update
     *   }
     * })
     */
    upsert<T extends AccountRepUpsertArgs>(args: SelectSubset<T, AccountRepUpsertArgs<ExtArgs>>): Prisma__AccountRepClient<$Result.GetResult<Prisma.$AccountRepPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AccountReps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountRepCountArgs} args - Arguments to filter AccountReps to count.
     * @example
     * // Count the number of AccountReps
     * const count = await prisma.accountRep.count({
     *   where: {
     *     // ... the filter for the AccountReps we want to count
     *   }
     * })
    **/
    count<T extends AccountRepCountArgs>(
      args?: Subset<T, AccountRepCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AccountRepCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AccountRep.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountRepAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AccountRepAggregateArgs>(args: Subset<T, AccountRepAggregateArgs>): Prisma.PrismaPromise<GetAccountRepAggregateType<T>>

    /**
     * Group by AccountRep.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountRepGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AccountRepGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AccountRepGroupByArgs['orderBy'] }
        : { orderBy?: AccountRepGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AccountRepGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccountRepGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AccountRep model
   */
  readonly fields: AccountRepFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AccountRep.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AccountRepClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    software<T extends SoftwareDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SoftwareDefaultArgs<ExtArgs>>): Prisma__SoftwareClient<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AccountRep model
   */
  interface AccountRepFieldRefs {
    readonly id: FieldRef<"AccountRep", 'String'>
    readonly softwareId: FieldRef<"AccountRep", 'String'>
    readonly email: FieldRef<"AccountRep", 'String'>
    readonly name: FieldRef<"AccountRep", 'String'>
    readonly phone: FieldRef<"AccountRep", 'String'>
  }
    

  // Custom InputTypes
  /**
   * AccountRep findUnique
   */
  export type AccountRepFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountRep
     */
    select?: AccountRepSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AccountRep
     */
    omit?: AccountRepOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountRepInclude<ExtArgs> | null
    /**
     * Filter, which AccountRep to fetch.
     */
    where: AccountRepWhereUniqueInput
  }

  /**
   * AccountRep findUniqueOrThrow
   */
  export type AccountRepFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountRep
     */
    select?: AccountRepSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AccountRep
     */
    omit?: AccountRepOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountRepInclude<ExtArgs> | null
    /**
     * Filter, which AccountRep to fetch.
     */
    where: AccountRepWhereUniqueInput
  }

  /**
   * AccountRep findFirst
   */
  export type AccountRepFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountRep
     */
    select?: AccountRepSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AccountRep
     */
    omit?: AccountRepOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountRepInclude<ExtArgs> | null
    /**
     * Filter, which AccountRep to fetch.
     */
    where?: AccountRepWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AccountReps to fetch.
     */
    orderBy?: AccountRepOrderByWithRelationInput | AccountRepOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AccountReps.
     */
    cursor?: AccountRepWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AccountReps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AccountReps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AccountReps.
     */
    distinct?: AccountRepScalarFieldEnum | AccountRepScalarFieldEnum[]
  }

  /**
   * AccountRep findFirstOrThrow
   */
  export type AccountRepFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountRep
     */
    select?: AccountRepSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AccountRep
     */
    omit?: AccountRepOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountRepInclude<ExtArgs> | null
    /**
     * Filter, which AccountRep to fetch.
     */
    where?: AccountRepWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AccountReps to fetch.
     */
    orderBy?: AccountRepOrderByWithRelationInput | AccountRepOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AccountReps.
     */
    cursor?: AccountRepWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AccountReps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AccountReps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AccountReps.
     */
    distinct?: AccountRepScalarFieldEnum | AccountRepScalarFieldEnum[]
  }

  /**
   * AccountRep findMany
   */
  export type AccountRepFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountRep
     */
    select?: AccountRepSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AccountRep
     */
    omit?: AccountRepOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountRepInclude<ExtArgs> | null
    /**
     * Filter, which AccountReps to fetch.
     */
    where?: AccountRepWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AccountReps to fetch.
     */
    orderBy?: AccountRepOrderByWithRelationInput | AccountRepOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AccountReps.
     */
    cursor?: AccountRepWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AccountReps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AccountReps.
     */
    skip?: number
    distinct?: AccountRepScalarFieldEnum | AccountRepScalarFieldEnum[]
  }

  /**
   * AccountRep create
   */
  export type AccountRepCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountRep
     */
    select?: AccountRepSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AccountRep
     */
    omit?: AccountRepOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountRepInclude<ExtArgs> | null
    /**
     * The data needed to create a AccountRep.
     */
    data: XOR<AccountRepCreateInput, AccountRepUncheckedCreateInput>
  }

  /**
   * AccountRep createMany
   */
  export type AccountRepCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AccountReps.
     */
    data: AccountRepCreateManyInput | AccountRepCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AccountRep createManyAndReturn
   */
  export type AccountRepCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountRep
     */
    select?: AccountRepSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AccountRep
     */
    omit?: AccountRepOmit<ExtArgs> | null
    /**
     * The data used to create many AccountReps.
     */
    data: AccountRepCreateManyInput | AccountRepCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountRepIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AccountRep update
   */
  export type AccountRepUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountRep
     */
    select?: AccountRepSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AccountRep
     */
    omit?: AccountRepOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountRepInclude<ExtArgs> | null
    /**
     * The data needed to update a AccountRep.
     */
    data: XOR<AccountRepUpdateInput, AccountRepUncheckedUpdateInput>
    /**
     * Choose, which AccountRep to update.
     */
    where: AccountRepWhereUniqueInput
  }

  /**
   * AccountRep updateMany
   */
  export type AccountRepUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AccountReps.
     */
    data: XOR<AccountRepUpdateManyMutationInput, AccountRepUncheckedUpdateManyInput>
    /**
     * Filter which AccountReps to update
     */
    where?: AccountRepWhereInput
    /**
     * Limit how many AccountReps to update.
     */
    limit?: number
  }

  /**
   * AccountRep updateManyAndReturn
   */
  export type AccountRepUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountRep
     */
    select?: AccountRepSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AccountRep
     */
    omit?: AccountRepOmit<ExtArgs> | null
    /**
     * The data used to update AccountReps.
     */
    data: XOR<AccountRepUpdateManyMutationInput, AccountRepUncheckedUpdateManyInput>
    /**
     * Filter which AccountReps to update
     */
    where?: AccountRepWhereInput
    /**
     * Limit how many AccountReps to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountRepIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AccountRep upsert
   */
  export type AccountRepUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountRep
     */
    select?: AccountRepSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AccountRep
     */
    omit?: AccountRepOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountRepInclude<ExtArgs> | null
    /**
     * The filter to search for the AccountRep to update in case it exists.
     */
    where: AccountRepWhereUniqueInput
    /**
     * In case the AccountRep found by the `where` argument doesn't exist, create a new AccountRep with this data.
     */
    create: XOR<AccountRepCreateInput, AccountRepUncheckedCreateInput>
    /**
     * In case the AccountRep was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AccountRepUpdateInput, AccountRepUncheckedUpdateInput>
  }

  /**
   * AccountRep delete
   */
  export type AccountRepDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountRep
     */
    select?: AccountRepSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AccountRep
     */
    omit?: AccountRepOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountRepInclude<ExtArgs> | null
    /**
     * Filter which AccountRep to delete.
     */
    where: AccountRepWhereUniqueInput
  }

  /**
   * AccountRep deleteMany
   */
  export type AccountRepDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AccountReps to delete
     */
    where?: AccountRepWhereInput
    /**
     * Limit how many AccountReps to delete.
     */
    limit?: number
  }

  /**
   * AccountRep without action
   */
  export type AccountRepDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountRep
     */
    select?: AccountRepSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AccountRep
     */
    omit?: AccountRepOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountRepInclude<ExtArgs> | null
  }


  /**
   * Model Software
   */

  export type AggregateSoftware = {
    _count: SoftwareCountAggregateOutputType | null
    _avg: SoftwareAvgAggregateOutputType | null
    _sum: SoftwareSumAggregateOutputType | null
    _min: SoftwareMinAggregateOutputType | null
    _max: SoftwareMaxAggregateOutputType | null
  }

  export type SoftwareAvgAggregateOutputType = {
    userCount: number | null
    amount: number | null
    pricePerUser: number | null
  }

  export type SoftwareSumAggregateOutputType = {
    userCount: number | null
    amount: number | null
    pricePerUser: number | null
  }

  export type SoftwareMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    category: string | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
    userCount: number | null
    notes: string | null
    notesLastUpdatedById: string | null
    accountRep: string | null
    amount: number | null
    currency: string | null
    licenseType: string | null
    paymentDueDate: Date | null
    paymentFrequency: $Enums.PaymentFrequency | null
    paymentMethod: $Enums.PaymentMethod | null
    pricePerUser: number | null
    updatedById: string | null
    website: string | null
  }

  export type SoftwareMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    category: string | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
    userCount: number | null
    notes: string | null
    notesLastUpdatedById: string | null
    accountRep: string | null
    amount: number | null
    currency: string | null
    licenseType: string | null
    paymentDueDate: Date | null
    paymentFrequency: $Enums.PaymentFrequency | null
    paymentMethod: $Enums.PaymentMethod | null
    pricePerUser: number | null
    updatedById: string | null
    website: string | null
  }

  export type SoftwareCountAggregateOutputType = {
    id: number
    name: number
    description: number
    category: number
    status: number
    createdAt: number
    updatedAt: number
    userCount: number
    notes: number
    notesLastUpdatedById: number
    accountRep: number
    amount: number
    currency: number
    licenseType: number
    paymentDueDate: number
    paymentFrequency: number
    paymentMethod: number
    pricePerUser: number
    updatedById: number
    website: number
    _all: number
  }


  export type SoftwareAvgAggregateInputType = {
    userCount?: true
    amount?: true
    pricePerUser?: true
  }

  export type SoftwareSumAggregateInputType = {
    userCount?: true
    amount?: true
    pricePerUser?: true
  }

  export type SoftwareMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    category?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    userCount?: true
    notes?: true
    notesLastUpdatedById?: true
    accountRep?: true
    amount?: true
    currency?: true
    licenseType?: true
    paymentDueDate?: true
    paymentFrequency?: true
    paymentMethod?: true
    pricePerUser?: true
    updatedById?: true
    website?: true
  }

  export type SoftwareMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    category?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    userCount?: true
    notes?: true
    notesLastUpdatedById?: true
    accountRep?: true
    amount?: true
    currency?: true
    licenseType?: true
    paymentDueDate?: true
    paymentFrequency?: true
    paymentMethod?: true
    pricePerUser?: true
    updatedById?: true
    website?: true
  }

  export type SoftwareCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    category?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    userCount?: true
    notes?: true
    notesLastUpdatedById?: true
    accountRep?: true
    amount?: true
    currency?: true
    licenseType?: true
    paymentDueDate?: true
    paymentFrequency?: true
    paymentMethod?: true
    pricePerUser?: true
    updatedById?: true
    website?: true
    _all?: true
  }

  export type SoftwareAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Software to aggregate.
     */
    where?: SoftwareWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Software to fetch.
     */
    orderBy?: SoftwareOrderByWithRelationInput | SoftwareOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SoftwareWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Software from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Software.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Software
    **/
    _count?: true | SoftwareCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SoftwareAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SoftwareSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SoftwareMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SoftwareMaxAggregateInputType
  }

  export type GetSoftwareAggregateType<T extends SoftwareAggregateArgs> = {
        [P in keyof T & keyof AggregateSoftware]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSoftware[P]>
      : GetScalarType<T[P], AggregateSoftware[P]>
  }




  export type SoftwareGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SoftwareWhereInput
    orderBy?: SoftwareOrderByWithAggregationInput | SoftwareOrderByWithAggregationInput[]
    by: SoftwareScalarFieldEnum[] | SoftwareScalarFieldEnum
    having?: SoftwareScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SoftwareCountAggregateInputType | true
    _avg?: SoftwareAvgAggregateInputType
    _sum?: SoftwareSumAggregateInputType
    _min?: SoftwareMinAggregateInputType
    _max?: SoftwareMaxAggregateInputType
  }

  export type SoftwareGroupByOutputType = {
    id: string
    name: string
    description: string | null
    category: string | null
    status: string | null
    createdAt: Date
    updatedAt: Date
    userCount: number | null
    notes: string | null
    notesLastUpdatedById: string
    accountRep: string | null
    amount: number | null
    currency: string | null
    licenseType: string | null
    paymentDueDate: Date | null
    paymentFrequency: $Enums.PaymentFrequency
    paymentMethod: $Enums.PaymentMethod
    pricePerUser: number | null
    updatedById: string | null
    website: string | null
    _count: SoftwareCountAggregateOutputType | null
    _avg: SoftwareAvgAggregateOutputType | null
    _sum: SoftwareSumAggregateOutputType | null
    _min: SoftwareMinAggregateOutputType | null
    _max: SoftwareMaxAggregateOutputType | null
  }

  type GetSoftwareGroupByPayload<T extends SoftwareGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SoftwareGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SoftwareGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SoftwareGroupByOutputType[P]>
            : GetScalarType<T[P], SoftwareGroupByOutputType[P]>
        }
      >
    >


  export type SoftwareSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    category?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userCount?: boolean
    notes?: boolean
    notesLastUpdatedById?: boolean
    accountRep?: boolean
    amount?: boolean
    currency?: boolean
    licenseType?: boolean
    paymentDueDate?: boolean
    paymentFrequency?: boolean
    paymentMethod?: boolean
    pricePerUser?: boolean
    updatedById?: boolean
    website?: boolean
    accountReps?: boolean | Software$accountRepsArgs<ExtArgs>
    notesLastUpdatedBy?: boolean | UserDefaultArgs<ExtArgs>
    updatedBy?: boolean | Software$updatedByArgs<ExtArgs>
    SoftwareAccess?: boolean | Software$SoftwareAccessArgs<ExtArgs>
    histories?: boolean | Software$historiesArgs<ExtArgs>
    UserSoftware?: boolean | Software$UserSoftwareArgs<ExtArgs>
    Assigned?: boolean | Software$AssignedArgs<ExtArgs>
    _count?: boolean | SoftwareCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["software"]>

  export type SoftwareSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    category?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userCount?: boolean
    notes?: boolean
    notesLastUpdatedById?: boolean
    accountRep?: boolean
    amount?: boolean
    currency?: boolean
    licenseType?: boolean
    paymentDueDate?: boolean
    paymentFrequency?: boolean
    paymentMethod?: boolean
    pricePerUser?: boolean
    updatedById?: boolean
    website?: boolean
    notesLastUpdatedBy?: boolean | UserDefaultArgs<ExtArgs>
    updatedBy?: boolean | Software$updatedByArgs<ExtArgs>
  }, ExtArgs["result"]["software"]>

  export type SoftwareSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    category?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userCount?: boolean
    notes?: boolean
    notesLastUpdatedById?: boolean
    accountRep?: boolean
    amount?: boolean
    currency?: boolean
    licenseType?: boolean
    paymentDueDate?: boolean
    paymentFrequency?: boolean
    paymentMethod?: boolean
    pricePerUser?: boolean
    updatedById?: boolean
    website?: boolean
    notesLastUpdatedBy?: boolean | UserDefaultArgs<ExtArgs>
    updatedBy?: boolean | Software$updatedByArgs<ExtArgs>
  }, ExtArgs["result"]["software"]>

  export type SoftwareSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    category?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userCount?: boolean
    notes?: boolean
    notesLastUpdatedById?: boolean
    accountRep?: boolean
    amount?: boolean
    currency?: boolean
    licenseType?: boolean
    paymentDueDate?: boolean
    paymentFrequency?: boolean
    paymentMethod?: boolean
    pricePerUser?: boolean
    updatedById?: boolean
    website?: boolean
  }

  export type SoftwareOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "category" | "status" | "createdAt" | "updatedAt" | "userCount" | "notes" | "notesLastUpdatedById" | "accountRep" | "amount" | "currency" | "licenseType" | "paymentDueDate" | "paymentFrequency" | "paymentMethod" | "pricePerUser" | "updatedById" | "website", ExtArgs["result"]["software"]>
  export type SoftwareInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accountReps?: boolean | Software$accountRepsArgs<ExtArgs>
    notesLastUpdatedBy?: boolean | UserDefaultArgs<ExtArgs>
    updatedBy?: boolean | Software$updatedByArgs<ExtArgs>
    SoftwareAccess?: boolean | Software$SoftwareAccessArgs<ExtArgs>
    histories?: boolean | Software$historiesArgs<ExtArgs>
    UserSoftware?: boolean | Software$UserSoftwareArgs<ExtArgs>
    Assigned?: boolean | Software$AssignedArgs<ExtArgs>
    _count?: boolean | SoftwareCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SoftwareIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notesLastUpdatedBy?: boolean | UserDefaultArgs<ExtArgs>
    updatedBy?: boolean | Software$updatedByArgs<ExtArgs>
  }
  export type SoftwareIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notesLastUpdatedBy?: boolean | UserDefaultArgs<ExtArgs>
    updatedBy?: boolean | Software$updatedByArgs<ExtArgs>
  }

  export type $SoftwarePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Software"
    objects: {
      accountReps: Prisma.$AccountRepPayload<ExtArgs>[]
      notesLastUpdatedBy: Prisma.$UserPayload<ExtArgs>
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      SoftwareAccess: Prisma.$SoftwareAccessPayload<ExtArgs>[]
      histories: Prisma.$SoftwareHistoryPayload<ExtArgs>[]
      UserSoftware: Prisma.$UserSoftwarePayload<ExtArgs>[]
      Assigned: Prisma.$UserProfilesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      category: string | null
      status: string | null
      createdAt: Date
      updatedAt: Date
      userCount: number | null
      notes: string | null
      notesLastUpdatedById: string
      accountRep: string | null
      amount: number | null
      currency: string | null
      licenseType: string | null
      paymentDueDate: Date | null
      paymentFrequency: $Enums.PaymentFrequency
      paymentMethod: $Enums.PaymentMethod
      pricePerUser: number | null
      updatedById: string | null
      website: string | null
    }, ExtArgs["result"]["software"]>
    composites: {}
  }

  type SoftwareGetPayload<S extends boolean | null | undefined | SoftwareDefaultArgs> = $Result.GetResult<Prisma.$SoftwarePayload, S>

  type SoftwareCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SoftwareFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SoftwareCountAggregateInputType | true
    }

  export interface SoftwareDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Software'], meta: { name: 'Software' } }
    /**
     * Find zero or one Software that matches the filter.
     * @param {SoftwareFindUniqueArgs} args - Arguments to find a Software
     * @example
     * // Get one Software
     * const software = await prisma.software.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SoftwareFindUniqueArgs>(args: SelectSubset<T, SoftwareFindUniqueArgs<ExtArgs>>): Prisma__SoftwareClient<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Software that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SoftwareFindUniqueOrThrowArgs} args - Arguments to find a Software
     * @example
     * // Get one Software
     * const software = await prisma.software.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SoftwareFindUniqueOrThrowArgs>(args: SelectSubset<T, SoftwareFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SoftwareClient<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Software that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareFindFirstArgs} args - Arguments to find a Software
     * @example
     * // Get one Software
     * const software = await prisma.software.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SoftwareFindFirstArgs>(args?: SelectSubset<T, SoftwareFindFirstArgs<ExtArgs>>): Prisma__SoftwareClient<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Software that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareFindFirstOrThrowArgs} args - Arguments to find a Software
     * @example
     * // Get one Software
     * const software = await prisma.software.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SoftwareFindFirstOrThrowArgs>(args?: SelectSubset<T, SoftwareFindFirstOrThrowArgs<ExtArgs>>): Prisma__SoftwareClient<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Software that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Software
     * const software = await prisma.software.findMany()
     * 
     * // Get first 10 Software
     * const software = await prisma.software.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const softwareWithIdOnly = await prisma.software.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SoftwareFindManyArgs>(args?: SelectSubset<T, SoftwareFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Software.
     * @param {SoftwareCreateArgs} args - Arguments to create a Software.
     * @example
     * // Create one Software
     * const Software = await prisma.software.create({
     *   data: {
     *     // ... data to create a Software
     *   }
     * })
     * 
     */
    create<T extends SoftwareCreateArgs>(args: SelectSubset<T, SoftwareCreateArgs<ExtArgs>>): Prisma__SoftwareClient<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Software.
     * @param {SoftwareCreateManyArgs} args - Arguments to create many Software.
     * @example
     * // Create many Software
     * const software = await prisma.software.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SoftwareCreateManyArgs>(args?: SelectSubset<T, SoftwareCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Software and returns the data saved in the database.
     * @param {SoftwareCreateManyAndReturnArgs} args - Arguments to create many Software.
     * @example
     * // Create many Software
     * const software = await prisma.software.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Software and only return the `id`
     * const softwareWithIdOnly = await prisma.software.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SoftwareCreateManyAndReturnArgs>(args?: SelectSubset<T, SoftwareCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Software.
     * @param {SoftwareDeleteArgs} args - Arguments to delete one Software.
     * @example
     * // Delete one Software
     * const Software = await prisma.software.delete({
     *   where: {
     *     // ... filter to delete one Software
     *   }
     * })
     * 
     */
    delete<T extends SoftwareDeleteArgs>(args: SelectSubset<T, SoftwareDeleteArgs<ExtArgs>>): Prisma__SoftwareClient<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Software.
     * @param {SoftwareUpdateArgs} args - Arguments to update one Software.
     * @example
     * // Update one Software
     * const software = await prisma.software.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SoftwareUpdateArgs>(args: SelectSubset<T, SoftwareUpdateArgs<ExtArgs>>): Prisma__SoftwareClient<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Software.
     * @param {SoftwareDeleteManyArgs} args - Arguments to filter Software to delete.
     * @example
     * // Delete a few Software
     * const { count } = await prisma.software.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SoftwareDeleteManyArgs>(args?: SelectSubset<T, SoftwareDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Software.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Software
     * const software = await prisma.software.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SoftwareUpdateManyArgs>(args: SelectSubset<T, SoftwareUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Software and returns the data updated in the database.
     * @param {SoftwareUpdateManyAndReturnArgs} args - Arguments to update many Software.
     * @example
     * // Update many Software
     * const software = await prisma.software.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Software and only return the `id`
     * const softwareWithIdOnly = await prisma.software.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SoftwareUpdateManyAndReturnArgs>(args: SelectSubset<T, SoftwareUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Software.
     * @param {SoftwareUpsertArgs} args - Arguments to update or create a Software.
     * @example
     * // Update or create a Software
     * const software = await prisma.software.upsert({
     *   create: {
     *     // ... data to create a Software
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Software we want to update
     *   }
     * })
     */
    upsert<T extends SoftwareUpsertArgs>(args: SelectSubset<T, SoftwareUpsertArgs<ExtArgs>>): Prisma__SoftwareClient<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Software.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareCountArgs} args - Arguments to filter Software to count.
     * @example
     * // Count the number of Software
     * const count = await prisma.software.count({
     *   where: {
     *     // ... the filter for the Software we want to count
     *   }
     * })
    **/
    count<T extends SoftwareCountArgs>(
      args?: Subset<T, SoftwareCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SoftwareCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Software.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SoftwareAggregateArgs>(args: Subset<T, SoftwareAggregateArgs>): Prisma.PrismaPromise<GetSoftwareAggregateType<T>>

    /**
     * Group by Software.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SoftwareGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SoftwareGroupByArgs['orderBy'] }
        : { orderBy?: SoftwareGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SoftwareGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSoftwareGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Software model
   */
  readonly fields: SoftwareFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Software.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SoftwareClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    accountReps<T extends Software$accountRepsArgs<ExtArgs> = {}>(args?: Subset<T, Software$accountRepsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountRepPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notesLastUpdatedBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends Software$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, Software$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    SoftwareAccess<T extends Software$SoftwareAccessArgs<ExtArgs> = {}>(args?: Subset<T, Software$SoftwareAccessArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwareAccessPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    histories<T extends Software$historiesArgs<ExtArgs> = {}>(args?: Subset<T, Software$historiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwareHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UserSoftware<T extends Software$UserSoftwareArgs<ExtArgs> = {}>(args?: Subset<T, Software$UserSoftwareArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSoftwarePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Assigned<T extends Software$AssignedArgs<ExtArgs> = {}>(args?: Subset<T, Software$AssignedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserProfilesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Software model
   */
  interface SoftwareFieldRefs {
    readonly id: FieldRef<"Software", 'String'>
    readonly name: FieldRef<"Software", 'String'>
    readonly description: FieldRef<"Software", 'String'>
    readonly category: FieldRef<"Software", 'String'>
    readonly status: FieldRef<"Software", 'String'>
    readonly createdAt: FieldRef<"Software", 'DateTime'>
    readonly updatedAt: FieldRef<"Software", 'DateTime'>
    readonly userCount: FieldRef<"Software", 'Int'>
    readonly notes: FieldRef<"Software", 'String'>
    readonly notesLastUpdatedById: FieldRef<"Software", 'String'>
    readonly accountRep: FieldRef<"Software", 'String'>
    readonly amount: FieldRef<"Software", 'Float'>
    readonly currency: FieldRef<"Software", 'String'>
    readonly licenseType: FieldRef<"Software", 'String'>
    readonly paymentDueDate: FieldRef<"Software", 'DateTime'>
    readonly paymentFrequency: FieldRef<"Software", 'PaymentFrequency'>
    readonly paymentMethod: FieldRef<"Software", 'PaymentMethod'>
    readonly pricePerUser: FieldRef<"Software", 'Float'>
    readonly updatedById: FieldRef<"Software", 'String'>
    readonly website: FieldRef<"Software", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Software findUnique
   */
  export type SoftwareFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareInclude<ExtArgs> | null
    /**
     * Filter, which Software to fetch.
     */
    where: SoftwareWhereUniqueInput
  }

  /**
   * Software findUniqueOrThrow
   */
  export type SoftwareFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareInclude<ExtArgs> | null
    /**
     * Filter, which Software to fetch.
     */
    where: SoftwareWhereUniqueInput
  }

  /**
   * Software findFirst
   */
  export type SoftwareFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareInclude<ExtArgs> | null
    /**
     * Filter, which Software to fetch.
     */
    where?: SoftwareWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Software to fetch.
     */
    orderBy?: SoftwareOrderByWithRelationInput | SoftwareOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Software.
     */
    cursor?: SoftwareWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Software from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Software.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Software.
     */
    distinct?: SoftwareScalarFieldEnum | SoftwareScalarFieldEnum[]
  }

  /**
   * Software findFirstOrThrow
   */
  export type SoftwareFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareInclude<ExtArgs> | null
    /**
     * Filter, which Software to fetch.
     */
    where?: SoftwareWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Software to fetch.
     */
    orderBy?: SoftwareOrderByWithRelationInput | SoftwareOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Software.
     */
    cursor?: SoftwareWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Software from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Software.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Software.
     */
    distinct?: SoftwareScalarFieldEnum | SoftwareScalarFieldEnum[]
  }

  /**
   * Software findMany
   */
  export type SoftwareFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareInclude<ExtArgs> | null
    /**
     * Filter, which Software to fetch.
     */
    where?: SoftwareWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Software to fetch.
     */
    orderBy?: SoftwareOrderByWithRelationInput | SoftwareOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Software.
     */
    cursor?: SoftwareWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Software from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Software.
     */
    skip?: number
    distinct?: SoftwareScalarFieldEnum | SoftwareScalarFieldEnum[]
  }

  /**
   * Software create
   */
  export type SoftwareCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareInclude<ExtArgs> | null
    /**
     * The data needed to create a Software.
     */
    data: XOR<SoftwareCreateInput, SoftwareUncheckedCreateInput>
  }

  /**
   * Software createMany
   */
  export type SoftwareCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Software.
     */
    data: SoftwareCreateManyInput | SoftwareCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Software createManyAndReturn
   */
  export type SoftwareCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * The data used to create many Software.
     */
    data: SoftwareCreateManyInput | SoftwareCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Software update
   */
  export type SoftwareUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareInclude<ExtArgs> | null
    /**
     * The data needed to update a Software.
     */
    data: XOR<SoftwareUpdateInput, SoftwareUncheckedUpdateInput>
    /**
     * Choose, which Software to update.
     */
    where: SoftwareWhereUniqueInput
  }

  /**
   * Software updateMany
   */
  export type SoftwareUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Software.
     */
    data: XOR<SoftwareUpdateManyMutationInput, SoftwareUncheckedUpdateManyInput>
    /**
     * Filter which Software to update
     */
    where?: SoftwareWhereInput
    /**
     * Limit how many Software to update.
     */
    limit?: number
  }

  /**
   * Software updateManyAndReturn
   */
  export type SoftwareUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * The data used to update Software.
     */
    data: XOR<SoftwareUpdateManyMutationInput, SoftwareUncheckedUpdateManyInput>
    /**
     * Filter which Software to update
     */
    where?: SoftwareWhereInput
    /**
     * Limit how many Software to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Software upsert
   */
  export type SoftwareUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareInclude<ExtArgs> | null
    /**
     * The filter to search for the Software to update in case it exists.
     */
    where: SoftwareWhereUniqueInput
    /**
     * In case the Software found by the `where` argument doesn't exist, create a new Software with this data.
     */
    create: XOR<SoftwareCreateInput, SoftwareUncheckedCreateInput>
    /**
     * In case the Software was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SoftwareUpdateInput, SoftwareUncheckedUpdateInput>
  }

  /**
   * Software delete
   */
  export type SoftwareDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareInclude<ExtArgs> | null
    /**
     * Filter which Software to delete.
     */
    where: SoftwareWhereUniqueInput
  }

  /**
   * Software deleteMany
   */
  export type SoftwareDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Software to delete
     */
    where?: SoftwareWhereInput
    /**
     * Limit how many Software to delete.
     */
    limit?: number
  }

  /**
   * Software.accountReps
   */
  export type Software$accountRepsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountRep
     */
    select?: AccountRepSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AccountRep
     */
    omit?: AccountRepOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountRepInclude<ExtArgs> | null
    where?: AccountRepWhereInput
    orderBy?: AccountRepOrderByWithRelationInput | AccountRepOrderByWithRelationInput[]
    cursor?: AccountRepWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AccountRepScalarFieldEnum | AccountRepScalarFieldEnum[]
  }

  /**
   * Software.updatedBy
   */
  export type Software$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Software.SoftwareAccess
   */
  export type Software$SoftwareAccessArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareAccess
     */
    select?: SoftwareAccessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareAccess
     */
    omit?: SoftwareAccessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareAccessInclude<ExtArgs> | null
    where?: SoftwareAccessWhereInput
    orderBy?: SoftwareAccessOrderByWithRelationInput | SoftwareAccessOrderByWithRelationInput[]
    cursor?: SoftwareAccessWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SoftwareAccessScalarFieldEnum | SoftwareAccessScalarFieldEnum[]
  }

  /**
   * Software.histories
   */
  export type Software$historiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareHistory
     */
    select?: SoftwareHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareHistory
     */
    omit?: SoftwareHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareHistoryInclude<ExtArgs> | null
    where?: SoftwareHistoryWhereInput
    orderBy?: SoftwareHistoryOrderByWithRelationInput | SoftwareHistoryOrderByWithRelationInput[]
    cursor?: SoftwareHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SoftwareHistoryScalarFieldEnum | SoftwareHistoryScalarFieldEnum[]
  }

  /**
   * Software.UserSoftware
   */
  export type Software$UserSoftwareArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSoftware
     */
    select?: UserSoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSoftware
     */
    omit?: UserSoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSoftwareInclude<ExtArgs> | null
    where?: UserSoftwareWhereInput
    orderBy?: UserSoftwareOrderByWithRelationInput | UserSoftwareOrderByWithRelationInput[]
    cursor?: UserSoftwareWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserSoftwareScalarFieldEnum | UserSoftwareScalarFieldEnum[]
  }

  /**
   * Software.Assigned
   */
  export type Software$AssignedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfiles
     */
    select?: UserProfilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfiles
     */
    omit?: UserProfilesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfilesInclude<ExtArgs> | null
    where?: UserProfilesWhereInput
    orderBy?: UserProfilesOrderByWithRelationInput | UserProfilesOrderByWithRelationInput[]
    cursor?: UserProfilesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserProfilesScalarFieldEnum | UserProfilesScalarFieldEnum[]
  }

  /**
   * Software without action
   */
  export type SoftwareDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareInclude<ExtArgs> | null
  }


  /**
   * Model SoftwareHistory
   */

  export type AggregateSoftwareHistory = {
    _count: SoftwareHistoryCountAggregateOutputType | null
    _min: SoftwareHistoryMinAggregateOutputType | null
    _max: SoftwareHistoryMaxAggregateOutputType | null
  }

  export type SoftwareHistoryMinAggregateOutputType = {
    id: string | null
    softwareId: string | null
    action: string | null
    field: string | null
    newValue: string | null
    oldValue: string | null
    updatedBy: string | null
    updatedOn: Date | null
  }

  export type SoftwareHistoryMaxAggregateOutputType = {
    id: string | null
    softwareId: string | null
    action: string | null
    field: string | null
    newValue: string | null
    oldValue: string | null
    updatedBy: string | null
    updatedOn: Date | null
  }

  export type SoftwareHistoryCountAggregateOutputType = {
    id: number
    softwareId: number
    action: number
    field: number
    newValue: number
    oldValue: number
    updatedBy: number
    updatedOn: number
    _all: number
  }


  export type SoftwareHistoryMinAggregateInputType = {
    id?: true
    softwareId?: true
    action?: true
    field?: true
    newValue?: true
    oldValue?: true
    updatedBy?: true
    updatedOn?: true
  }

  export type SoftwareHistoryMaxAggregateInputType = {
    id?: true
    softwareId?: true
    action?: true
    field?: true
    newValue?: true
    oldValue?: true
    updatedBy?: true
    updatedOn?: true
  }

  export type SoftwareHistoryCountAggregateInputType = {
    id?: true
    softwareId?: true
    action?: true
    field?: true
    newValue?: true
    oldValue?: true
    updatedBy?: true
    updatedOn?: true
    _all?: true
  }

  export type SoftwareHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SoftwareHistory to aggregate.
     */
    where?: SoftwareHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SoftwareHistories to fetch.
     */
    orderBy?: SoftwareHistoryOrderByWithRelationInput | SoftwareHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SoftwareHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SoftwareHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SoftwareHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SoftwareHistories
    **/
    _count?: true | SoftwareHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SoftwareHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SoftwareHistoryMaxAggregateInputType
  }

  export type GetSoftwareHistoryAggregateType<T extends SoftwareHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateSoftwareHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSoftwareHistory[P]>
      : GetScalarType<T[P], AggregateSoftwareHistory[P]>
  }




  export type SoftwareHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SoftwareHistoryWhereInput
    orderBy?: SoftwareHistoryOrderByWithAggregationInput | SoftwareHistoryOrderByWithAggregationInput[]
    by: SoftwareHistoryScalarFieldEnum[] | SoftwareHistoryScalarFieldEnum
    having?: SoftwareHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SoftwareHistoryCountAggregateInputType | true
    _min?: SoftwareHistoryMinAggregateInputType
    _max?: SoftwareHistoryMaxAggregateInputType
  }

  export type SoftwareHistoryGroupByOutputType = {
    id: string
    softwareId: string
    action: string
    field: string
    newValue: string | null
    oldValue: string | null
    updatedBy: string
    updatedOn: Date
    _count: SoftwareHistoryCountAggregateOutputType | null
    _min: SoftwareHistoryMinAggregateOutputType | null
    _max: SoftwareHistoryMaxAggregateOutputType | null
  }

  type GetSoftwareHistoryGroupByPayload<T extends SoftwareHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SoftwareHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SoftwareHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SoftwareHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], SoftwareHistoryGroupByOutputType[P]>
        }
      >
    >


  export type SoftwareHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    softwareId?: boolean
    action?: boolean
    field?: boolean
    newValue?: boolean
    oldValue?: boolean
    updatedBy?: boolean
    updatedOn?: boolean
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["softwareHistory"]>

  export type SoftwareHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    softwareId?: boolean
    action?: boolean
    field?: boolean
    newValue?: boolean
    oldValue?: boolean
    updatedBy?: boolean
    updatedOn?: boolean
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["softwareHistory"]>

  export type SoftwareHistorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    softwareId?: boolean
    action?: boolean
    field?: boolean
    newValue?: boolean
    oldValue?: boolean
    updatedBy?: boolean
    updatedOn?: boolean
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["softwareHistory"]>

  export type SoftwareHistorySelectScalar = {
    id?: boolean
    softwareId?: boolean
    action?: boolean
    field?: boolean
    newValue?: boolean
    oldValue?: boolean
    updatedBy?: boolean
    updatedOn?: boolean
  }

  export type SoftwareHistoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "softwareId" | "action" | "field" | "newValue" | "oldValue" | "updatedBy" | "updatedOn", ExtArgs["result"]["softwareHistory"]>
  export type SoftwareHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
  }
  export type SoftwareHistoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
  }
  export type SoftwareHistoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
  }

  export type $SoftwareHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SoftwareHistory"
    objects: {
      software: Prisma.$SoftwarePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      softwareId: string
      action: string
      field: string
      newValue: string | null
      oldValue: string | null
      updatedBy: string
      updatedOn: Date
    }, ExtArgs["result"]["softwareHistory"]>
    composites: {}
  }

  type SoftwareHistoryGetPayload<S extends boolean | null | undefined | SoftwareHistoryDefaultArgs> = $Result.GetResult<Prisma.$SoftwareHistoryPayload, S>

  type SoftwareHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SoftwareHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SoftwareHistoryCountAggregateInputType | true
    }

  export interface SoftwareHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SoftwareHistory'], meta: { name: 'SoftwareHistory' } }
    /**
     * Find zero or one SoftwareHistory that matches the filter.
     * @param {SoftwareHistoryFindUniqueArgs} args - Arguments to find a SoftwareHistory
     * @example
     * // Get one SoftwareHistory
     * const softwareHistory = await prisma.softwareHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SoftwareHistoryFindUniqueArgs>(args: SelectSubset<T, SoftwareHistoryFindUniqueArgs<ExtArgs>>): Prisma__SoftwareHistoryClient<$Result.GetResult<Prisma.$SoftwareHistoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SoftwareHistory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SoftwareHistoryFindUniqueOrThrowArgs} args - Arguments to find a SoftwareHistory
     * @example
     * // Get one SoftwareHistory
     * const softwareHistory = await prisma.softwareHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SoftwareHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, SoftwareHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SoftwareHistoryClient<$Result.GetResult<Prisma.$SoftwareHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SoftwareHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareHistoryFindFirstArgs} args - Arguments to find a SoftwareHistory
     * @example
     * // Get one SoftwareHistory
     * const softwareHistory = await prisma.softwareHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SoftwareHistoryFindFirstArgs>(args?: SelectSubset<T, SoftwareHistoryFindFirstArgs<ExtArgs>>): Prisma__SoftwareHistoryClient<$Result.GetResult<Prisma.$SoftwareHistoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SoftwareHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareHistoryFindFirstOrThrowArgs} args - Arguments to find a SoftwareHistory
     * @example
     * // Get one SoftwareHistory
     * const softwareHistory = await prisma.softwareHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SoftwareHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, SoftwareHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__SoftwareHistoryClient<$Result.GetResult<Prisma.$SoftwareHistoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SoftwareHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SoftwareHistories
     * const softwareHistories = await prisma.softwareHistory.findMany()
     * 
     * // Get first 10 SoftwareHistories
     * const softwareHistories = await prisma.softwareHistory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const softwareHistoryWithIdOnly = await prisma.softwareHistory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SoftwareHistoryFindManyArgs>(args?: SelectSubset<T, SoftwareHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwareHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SoftwareHistory.
     * @param {SoftwareHistoryCreateArgs} args - Arguments to create a SoftwareHistory.
     * @example
     * // Create one SoftwareHistory
     * const SoftwareHistory = await prisma.softwareHistory.create({
     *   data: {
     *     // ... data to create a SoftwareHistory
     *   }
     * })
     * 
     */
    create<T extends SoftwareHistoryCreateArgs>(args: SelectSubset<T, SoftwareHistoryCreateArgs<ExtArgs>>): Prisma__SoftwareHistoryClient<$Result.GetResult<Prisma.$SoftwareHistoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SoftwareHistories.
     * @param {SoftwareHistoryCreateManyArgs} args - Arguments to create many SoftwareHistories.
     * @example
     * // Create many SoftwareHistories
     * const softwareHistory = await prisma.softwareHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SoftwareHistoryCreateManyArgs>(args?: SelectSubset<T, SoftwareHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SoftwareHistories and returns the data saved in the database.
     * @param {SoftwareHistoryCreateManyAndReturnArgs} args - Arguments to create many SoftwareHistories.
     * @example
     * // Create many SoftwareHistories
     * const softwareHistory = await prisma.softwareHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SoftwareHistories and only return the `id`
     * const softwareHistoryWithIdOnly = await prisma.softwareHistory.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SoftwareHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, SoftwareHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwareHistoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SoftwareHistory.
     * @param {SoftwareHistoryDeleteArgs} args - Arguments to delete one SoftwareHistory.
     * @example
     * // Delete one SoftwareHistory
     * const SoftwareHistory = await prisma.softwareHistory.delete({
     *   where: {
     *     // ... filter to delete one SoftwareHistory
     *   }
     * })
     * 
     */
    delete<T extends SoftwareHistoryDeleteArgs>(args: SelectSubset<T, SoftwareHistoryDeleteArgs<ExtArgs>>): Prisma__SoftwareHistoryClient<$Result.GetResult<Prisma.$SoftwareHistoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SoftwareHistory.
     * @param {SoftwareHistoryUpdateArgs} args - Arguments to update one SoftwareHistory.
     * @example
     * // Update one SoftwareHistory
     * const softwareHistory = await prisma.softwareHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SoftwareHistoryUpdateArgs>(args: SelectSubset<T, SoftwareHistoryUpdateArgs<ExtArgs>>): Prisma__SoftwareHistoryClient<$Result.GetResult<Prisma.$SoftwareHistoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SoftwareHistories.
     * @param {SoftwareHistoryDeleteManyArgs} args - Arguments to filter SoftwareHistories to delete.
     * @example
     * // Delete a few SoftwareHistories
     * const { count } = await prisma.softwareHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SoftwareHistoryDeleteManyArgs>(args?: SelectSubset<T, SoftwareHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SoftwareHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SoftwareHistories
     * const softwareHistory = await prisma.softwareHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SoftwareHistoryUpdateManyArgs>(args: SelectSubset<T, SoftwareHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SoftwareHistories and returns the data updated in the database.
     * @param {SoftwareHistoryUpdateManyAndReturnArgs} args - Arguments to update many SoftwareHistories.
     * @example
     * // Update many SoftwareHistories
     * const softwareHistory = await prisma.softwareHistory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SoftwareHistories and only return the `id`
     * const softwareHistoryWithIdOnly = await prisma.softwareHistory.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SoftwareHistoryUpdateManyAndReturnArgs>(args: SelectSubset<T, SoftwareHistoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwareHistoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SoftwareHistory.
     * @param {SoftwareHistoryUpsertArgs} args - Arguments to update or create a SoftwareHistory.
     * @example
     * // Update or create a SoftwareHistory
     * const softwareHistory = await prisma.softwareHistory.upsert({
     *   create: {
     *     // ... data to create a SoftwareHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SoftwareHistory we want to update
     *   }
     * })
     */
    upsert<T extends SoftwareHistoryUpsertArgs>(args: SelectSubset<T, SoftwareHistoryUpsertArgs<ExtArgs>>): Prisma__SoftwareHistoryClient<$Result.GetResult<Prisma.$SoftwareHistoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SoftwareHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareHistoryCountArgs} args - Arguments to filter SoftwareHistories to count.
     * @example
     * // Count the number of SoftwareHistories
     * const count = await prisma.softwareHistory.count({
     *   where: {
     *     // ... the filter for the SoftwareHistories we want to count
     *   }
     * })
    **/
    count<T extends SoftwareHistoryCountArgs>(
      args?: Subset<T, SoftwareHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SoftwareHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SoftwareHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SoftwareHistoryAggregateArgs>(args: Subset<T, SoftwareHistoryAggregateArgs>): Prisma.PrismaPromise<GetSoftwareHistoryAggregateType<T>>

    /**
     * Group by SoftwareHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SoftwareHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SoftwareHistoryGroupByArgs['orderBy'] }
        : { orderBy?: SoftwareHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SoftwareHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSoftwareHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SoftwareHistory model
   */
  readonly fields: SoftwareHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SoftwareHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SoftwareHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    software<T extends SoftwareDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SoftwareDefaultArgs<ExtArgs>>): Prisma__SoftwareClient<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SoftwareHistory model
   */
  interface SoftwareHistoryFieldRefs {
    readonly id: FieldRef<"SoftwareHistory", 'String'>
    readonly softwareId: FieldRef<"SoftwareHistory", 'String'>
    readonly action: FieldRef<"SoftwareHistory", 'String'>
    readonly field: FieldRef<"SoftwareHistory", 'String'>
    readonly newValue: FieldRef<"SoftwareHistory", 'String'>
    readonly oldValue: FieldRef<"SoftwareHistory", 'String'>
    readonly updatedBy: FieldRef<"SoftwareHistory", 'String'>
    readonly updatedOn: FieldRef<"SoftwareHistory", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SoftwareHistory findUnique
   */
  export type SoftwareHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareHistory
     */
    select?: SoftwareHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareHistory
     */
    omit?: SoftwareHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareHistoryInclude<ExtArgs> | null
    /**
     * Filter, which SoftwareHistory to fetch.
     */
    where: SoftwareHistoryWhereUniqueInput
  }

  /**
   * SoftwareHistory findUniqueOrThrow
   */
  export type SoftwareHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareHistory
     */
    select?: SoftwareHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareHistory
     */
    omit?: SoftwareHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareHistoryInclude<ExtArgs> | null
    /**
     * Filter, which SoftwareHistory to fetch.
     */
    where: SoftwareHistoryWhereUniqueInput
  }

  /**
   * SoftwareHistory findFirst
   */
  export type SoftwareHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareHistory
     */
    select?: SoftwareHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareHistory
     */
    omit?: SoftwareHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareHistoryInclude<ExtArgs> | null
    /**
     * Filter, which SoftwareHistory to fetch.
     */
    where?: SoftwareHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SoftwareHistories to fetch.
     */
    orderBy?: SoftwareHistoryOrderByWithRelationInput | SoftwareHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SoftwareHistories.
     */
    cursor?: SoftwareHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SoftwareHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SoftwareHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SoftwareHistories.
     */
    distinct?: SoftwareHistoryScalarFieldEnum | SoftwareHistoryScalarFieldEnum[]
  }

  /**
   * SoftwareHistory findFirstOrThrow
   */
  export type SoftwareHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareHistory
     */
    select?: SoftwareHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareHistory
     */
    omit?: SoftwareHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareHistoryInclude<ExtArgs> | null
    /**
     * Filter, which SoftwareHistory to fetch.
     */
    where?: SoftwareHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SoftwareHistories to fetch.
     */
    orderBy?: SoftwareHistoryOrderByWithRelationInput | SoftwareHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SoftwareHistories.
     */
    cursor?: SoftwareHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SoftwareHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SoftwareHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SoftwareHistories.
     */
    distinct?: SoftwareHistoryScalarFieldEnum | SoftwareHistoryScalarFieldEnum[]
  }

  /**
   * SoftwareHistory findMany
   */
  export type SoftwareHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareHistory
     */
    select?: SoftwareHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareHistory
     */
    omit?: SoftwareHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareHistoryInclude<ExtArgs> | null
    /**
     * Filter, which SoftwareHistories to fetch.
     */
    where?: SoftwareHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SoftwareHistories to fetch.
     */
    orderBy?: SoftwareHistoryOrderByWithRelationInput | SoftwareHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SoftwareHistories.
     */
    cursor?: SoftwareHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SoftwareHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SoftwareHistories.
     */
    skip?: number
    distinct?: SoftwareHistoryScalarFieldEnum | SoftwareHistoryScalarFieldEnum[]
  }

  /**
   * SoftwareHistory create
   */
  export type SoftwareHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareHistory
     */
    select?: SoftwareHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareHistory
     */
    omit?: SoftwareHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a SoftwareHistory.
     */
    data: XOR<SoftwareHistoryCreateInput, SoftwareHistoryUncheckedCreateInput>
  }

  /**
   * SoftwareHistory createMany
   */
  export type SoftwareHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SoftwareHistories.
     */
    data: SoftwareHistoryCreateManyInput | SoftwareHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SoftwareHistory createManyAndReturn
   */
  export type SoftwareHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareHistory
     */
    select?: SoftwareHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareHistory
     */
    omit?: SoftwareHistoryOmit<ExtArgs> | null
    /**
     * The data used to create many SoftwareHistories.
     */
    data: SoftwareHistoryCreateManyInput | SoftwareHistoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareHistoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SoftwareHistory update
   */
  export type SoftwareHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareHistory
     */
    select?: SoftwareHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareHistory
     */
    omit?: SoftwareHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a SoftwareHistory.
     */
    data: XOR<SoftwareHistoryUpdateInput, SoftwareHistoryUncheckedUpdateInput>
    /**
     * Choose, which SoftwareHistory to update.
     */
    where: SoftwareHistoryWhereUniqueInput
  }

  /**
   * SoftwareHistory updateMany
   */
  export type SoftwareHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SoftwareHistories.
     */
    data: XOR<SoftwareHistoryUpdateManyMutationInput, SoftwareHistoryUncheckedUpdateManyInput>
    /**
     * Filter which SoftwareHistories to update
     */
    where?: SoftwareHistoryWhereInput
    /**
     * Limit how many SoftwareHistories to update.
     */
    limit?: number
  }

  /**
   * SoftwareHistory updateManyAndReturn
   */
  export type SoftwareHistoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareHistory
     */
    select?: SoftwareHistorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareHistory
     */
    omit?: SoftwareHistoryOmit<ExtArgs> | null
    /**
     * The data used to update SoftwareHistories.
     */
    data: XOR<SoftwareHistoryUpdateManyMutationInput, SoftwareHistoryUncheckedUpdateManyInput>
    /**
     * Filter which SoftwareHistories to update
     */
    where?: SoftwareHistoryWhereInput
    /**
     * Limit how many SoftwareHistories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareHistoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SoftwareHistory upsert
   */
  export type SoftwareHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareHistory
     */
    select?: SoftwareHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareHistory
     */
    omit?: SoftwareHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the SoftwareHistory to update in case it exists.
     */
    where: SoftwareHistoryWhereUniqueInput
    /**
     * In case the SoftwareHistory found by the `where` argument doesn't exist, create a new SoftwareHistory with this data.
     */
    create: XOR<SoftwareHistoryCreateInput, SoftwareHistoryUncheckedCreateInput>
    /**
     * In case the SoftwareHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SoftwareHistoryUpdateInput, SoftwareHistoryUncheckedUpdateInput>
  }

  /**
   * SoftwareHistory delete
   */
  export type SoftwareHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareHistory
     */
    select?: SoftwareHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareHistory
     */
    omit?: SoftwareHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareHistoryInclude<ExtArgs> | null
    /**
     * Filter which SoftwareHistory to delete.
     */
    where: SoftwareHistoryWhereUniqueInput
  }

  /**
   * SoftwareHistory deleteMany
   */
  export type SoftwareHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SoftwareHistories to delete
     */
    where?: SoftwareHistoryWhereInput
    /**
     * Limit how many SoftwareHistories to delete.
     */
    limit?: number
  }

  /**
   * SoftwareHistory without action
   */
  export type SoftwareHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareHistory
     */
    select?: SoftwareHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareHistory
     */
    omit?: SoftwareHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareHistoryInclude<ExtArgs> | null
  }


  /**
   * Model UserSoftware
   */

  export type AggregateUserSoftware = {
    _count: UserSoftwareCountAggregateOutputType | null
    _min: UserSoftwareMinAggregateOutputType | null
    _max: UserSoftwareMaxAggregateOutputType | null
  }

  export type UserSoftwareMinAggregateOutputType = {
    id: string | null
    userId: string | null
    softwareId: string | null
    grantedById: string | null
    accessLevel: string | null
    role: string | null
    assignedAt: Date | null
  }

  export type UserSoftwareMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    softwareId: string | null
    grantedById: string | null
    accessLevel: string | null
    role: string | null
    assignedAt: Date | null
  }

  export type UserSoftwareCountAggregateOutputType = {
    id: number
    userId: number
    softwareId: number
    grantedById: number
    accessLevel: number
    role: number
    assignedAt: number
    _all: number
  }


  export type UserSoftwareMinAggregateInputType = {
    id?: true
    userId?: true
    softwareId?: true
    grantedById?: true
    accessLevel?: true
    role?: true
    assignedAt?: true
  }

  export type UserSoftwareMaxAggregateInputType = {
    id?: true
    userId?: true
    softwareId?: true
    grantedById?: true
    accessLevel?: true
    role?: true
    assignedAt?: true
  }

  export type UserSoftwareCountAggregateInputType = {
    id?: true
    userId?: true
    softwareId?: true
    grantedById?: true
    accessLevel?: true
    role?: true
    assignedAt?: true
    _all?: true
  }

  export type UserSoftwareAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserSoftware to aggregate.
     */
    where?: UserSoftwareWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSoftwares to fetch.
     */
    orderBy?: UserSoftwareOrderByWithRelationInput | UserSoftwareOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserSoftwareWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSoftwares from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSoftwares.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserSoftwares
    **/
    _count?: true | UserSoftwareCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserSoftwareMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserSoftwareMaxAggregateInputType
  }

  export type GetUserSoftwareAggregateType<T extends UserSoftwareAggregateArgs> = {
        [P in keyof T & keyof AggregateUserSoftware]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserSoftware[P]>
      : GetScalarType<T[P], AggregateUserSoftware[P]>
  }




  export type UserSoftwareGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserSoftwareWhereInput
    orderBy?: UserSoftwareOrderByWithAggregationInput | UserSoftwareOrderByWithAggregationInput[]
    by: UserSoftwareScalarFieldEnum[] | UserSoftwareScalarFieldEnum
    having?: UserSoftwareScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserSoftwareCountAggregateInputType | true
    _min?: UserSoftwareMinAggregateInputType
    _max?: UserSoftwareMaxAggregateInputType
  }

  export type UserSoftwareGroupByOutputType = {
    id: string
    userId: string
    softwareId: string
    grantedById: string
    accessLevel: string
    role: string
    assignedAt: Date
    _count: UserSoftwareCountAggregateOutputType | null
    _min: UserSoftwareMinAggregateOutputType | null
    _max: UserSoftwareMaxAggregateOutputType | null
  }

  type GetUserSoftwareGroupByPayload<T extends UserSoftwareGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserSoftwareGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserSoftwareGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserSoftwareGroupByOutputType[P]>
            : GetScalarType<T[P], UserSoftwareGroupByOutputType[P]>
        }
      >
    >


  export type UserSoftwareSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    softwareId?: boolean
    grantedById?: boolean
    accessLevel?: boolean
    role?: boolean
    assignedAt?: boolean
    grantedBy?: boolean | UserProfilesDefaultArgs<ExtArgs>
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userSoftware"]>

  export type UserSoftwareSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    softwareId?: boolean
    grantedById?: boolean
    accessLevel?: boolean
    role?: boolean
    assignedAt?: boolean
    grantedBy?: boolean | UserProfilesDefaultArgs<ExtArgs>
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userSoftware"]>

  export type UserSoftwareSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    softwareId?: boolean
    grantedById?: boolean
    accessLevel?: boolean
    role?: boolean
    assignedAt?: boolean
    grantedBy?: boolean | UserProfilesDefaultArgs<ExtArgs>
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userSoftware"]>

  export type UserSoftwareSelectScalar = {
    id?: boolean
    userId?: boolean
    softwareId?: boolean
    grantedById?: boolean
    accessLevel?: boolean
    role?: boolean
    assignedAt?: boolean
  }

  export type UserSoftwareOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "softwareId" | "grantedById" | "accessLevel" | "role" | "assignedAt", ExtArgs["result"]["userSoftware"]>
  export type UserSoftwareInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    grantedBy?: boolean | UserProfilesDefaultArgs<ExtArgs>
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserSoftwareIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    grantedBy?: boolean | UserProfilesDefaultArgs<ExtArgs>
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserSoftwareIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    grantedBy?: boolean | UserProfilesDefaultArgs<ExtArgs>
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserSoftwarePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserSoftware"
    objects: {
      grantedBy: Prisma.$UserProfilesPayload<ExtArgs>
      software: Prisma.$SoftwarePayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      softwareId: string
      grantedById: string
      accessLevel: string
      role: string
      assignedAt: Date
    }, ExtArgs["result"]["userSoftware"]>
    composites: {}
  }

  type UserSoftwareGetPayload<S extends boolean | null | undefined | UserSoftwareDefaultArgs> = $Result.GetResult<Prisma.$UserSoftwarePayload, S>

  type UserSoftwareCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserSoftwareFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserSoftwareCountAggregateInputType | true
    }

  export interface UserSoftwareDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserSoftware'], meta: { name: 'UserSoftware' } }
    /**
     * Find zero or one UserSoftware that matches the filter.
     * @param {UserSoftwareFindUniqueArgs} args - Arguments to find a UserSoftware
     * @example
     * // Get one UserSoftware
     * const userSoftware = await prisma.userSoftware.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserSoftwareFindUniqueArgs>(args: SelectSubset<T, UserSoftwareFindUniqueArgs<ExtArgs>>): Prisma__UserSoftwareClient<$Result.GetResult<Prisma.$UserSoftwarePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UserSoftware that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserSoftwareFindUniqueOrThrowArgs} args - Arguments to find a UserSoftware
     * @example
     * // Get one UserSoftware
     * const userSoftware = await prisma.userSoftware.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserSoftwareFindUniqueOrThrowArgs>(args: SelectSubset<T, UserSoftwareFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserSoftwareClient<$Result.GetResult<Prisma.$UserSoftwarePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserSoftware that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSoftwareFindFirstArgs} args - Arguments to find a UserSoftware
     * @example
     * // Get one UserSoftware
     * const userSoftware = await prisma.userSoftware.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserSoftwareFindFirstArgs>(args?: SelectSubset<T, UserSoftwareFindFirstArgs<ExtArgs>>): Prisma__UserSoftwareClient<$Result.GetResult<Prisma.$UserSoftwarePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserSoftware that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSoftwareFindFirstOrThrowArgs} args - Arguments to find a UserSoftware
     * @example
     * // Get one UserSoftware
     * const userSoftware = await prisma.userSoftware.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserSoftwareFindFirstOrThrowArgs>(args?: SelectSubset<T, UserSoftwareFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserSoftwareClient<$Result.GetResult<Prisma.$UserSoftwarePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UserSoftwares that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSoftwareFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserSoftwares
     * const userSoftwares = await prisma.userSoftware.findMany()
     * 
     * // Get first 10 UserSoftwares
     * const userSoftwares = await prisma.userSoftware.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userSoftwareWithIdOnly = await prisma.userSoftware.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserSoftwareFindManyArgs>(args?: SelectSubset<T, UserSoftwareFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSoftwarePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UserSoftware.
     * @param {UserSoftwareCreateArgs} args - Arguments to create a UserSoftware.
     * @example
     * // Create one UserSoftware
     * const UserSoftware = await prisma.userSoftware.create({
     *   data: {
     *     // ... data to create a UserSoftware
     *   }
     * })
     * 
     */
    create<T extends UserSoftwareCreateArgs>(args: SelectSubset<T, UserSoftwareCreateArgs<ExtArgs>>): Prisma__UserSoftwareClient<$Result.GetResult<Prisma.$UserSoftwarePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UserSoftwares.
     * @param {UserSoftwareCreateManyArgs} args - Arguments to create many UserSoftwares.
     * @example
     * // Create many UserSoftwares
     * const userSoftware = await prisma.userSoftware.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserSoftwareCreateManyArgs>(args?: SelectSubset<T, UserSoftwareCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserSoftwares and returns the data saved in the database.
     * @param {UserSoftwareCreateManyAndReturnArgs} args - Arguments to create many UserSoftwares.
     * @example
     * // Create many UserSoftwares
     * const userSoftware = await prisma.userSoftware.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserSoftwares and only return the `id`
     * const userSoftwareWithIdOnly = await prisma.userSoftware.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserSoftwareCreateManyAndReturnArgs>(args?: SelectSubset<T, UserSoftwareCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSoftwarePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UserSoftware.
     * @param {UserSoftwareDeleteArgs} args - Arguments to delete one UserSoftware.
     * @example
     * // Delete one UserSoftware
     * const UserSoftware = await prisma.userSoftware.delete({
     *   where: {
     *     // ... filter to delete one UserSoftware
     *   }
     * })
     * 
     */
    delete<T extends UserSoftwareDeleteArgs>(args: SelectSubset<T, UserSoftwareDeleteArgs<ExtArgs>>): Prisma__UserSoftwareClient<$Result.GetResult<Prisma.$UserSoftwarePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UserSoftware.
     * @param {UserSoftwareUpdateArgs} args - Arguments to update one UserSoftware.
     * @example
     * // Update one UserSoftware
     * const userSoftware = await prisma.userSoftware.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserSoftwareUpdateArgs>(args: SelectSubset<T, UserSoftwareUpdateArgs<ExtArgs>>): Prisma__UserSoftwareClient<$Result.GetResult<Prisma.$UserSoftwarePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UserSoftwares.
     * @param {UserSoftwareDeleteManyArgs} args - Arguments to filter UserSoftwares to delete.
     * @example
     * // Delete a few UserSoftwares
     * const { count } = await prisma.userSoftware.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserSoftwareDeleteManyArgs>(args?: SelectSubset<T, UserSoftwareDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserSoftwares.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSoftwareUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserSoftwares
     * const userSoftware = await prisma.userSoftware.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserSoftwareUpdateManyArgs>(args: SelectSubset<T, UserSoftwareUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserSoftwares and returns the data updated in the database.
     * @param {UserSoftwareUpdateManyAndReturnArgs} args - Arguments to update many UserSoftwares.
     * @example
     * // Update many UserSoftwares
     * const userSoftware = await prisma.userSoftware.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UserSoftwares and only return the `id`
     * const userSoftwareWithIdOnly = await prisma.userSoftware.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserSoftwareUpdateManyAndReturnArgs>(args: SelectSubset<T, UserSoftwareUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSoftwarePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UserSoftware.
     * @param {UserSoftwareUpsertArgs} args - Arguments to update or create a UserSoftware.
     * @example
     * // Update or create a UserSoftware
     * const userSoftware = await prisma.userSoftware.upsert({
     *   create: {
     *     // ... data to create a UserSoftware
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserSoftware we want to update
     *   }
     * })
     */
    upsert<T extends UserSoftwareUpsertArgs>(args: SelectSubset<T, UserSoftwareUpsertArgs<ExtArgs>>): Prisma__UserSoftwareClient<$Result.GetResult<Prisma.$UserSoftwarePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UserSoftwares.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSoftwareCountArgs} args - Arguments to filter UserSoftwares to count.
     * @example
     * // Count the number of UserSoftwares
     * const count = await prisma.userSoftware.count({
     *   where: {
     *     // ... the filter for the UserSoftwares we want to count
     *   }
     * })
    **/
    count<T extends UserSoftwareCountArgs>(
      args?: Subset<T, UserSoftwareCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserSoftwareCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserSoftware.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSoftwareAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserSoftwareAggregateArgs>(args: Subset<T, UserSoftwareAggregateArgs>): Prisma.PrismaPromise<GetUserSoftwareAggregateType<T>>

    /**
     * Group by UserSoftware.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSoftwareGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserSoftwareGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserSoftwareGroupByArgs['orderBy'] }
        : { orderBy?: UserSoftwareGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserSoftwareGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserSoftwareGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserSoftware model
   */
  readonly fields: UserSoftwareFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserSoftware.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserSoftwareClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    grantedBy<T extends UserProfilesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserProfilesDefaultArgs<ExtArgs>>): Prisma__UserProfilesClient<$Result.GetResult<Prisma.$UserProfilesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    software<T extends SoftwareDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SoftwareDefaultArgs<ExtArgs>>): Prisma__SoftwareClient<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserSoftware model
   */
  interface UserSoftwareFieldRefs {
    readonly id: FieldRef<"UserSoftware", 'String'>
    readonly userId: FieldRef<"UserSoftware", 'String'>
    readonly softwareId: FieldRef<"UserSoftware", 'String'>
    readonly grantedById: FieldRef<"UserSoftware", 'String'>
    readonly accessLevel: FieldRef<"UserSoftware", 'String'>
    readonly role: FieldRef<"UserSoftware", 'String'>
    readonly assignedAt: FieldRef<"UserSoftware", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserSoftware findUnique
   */
  export type UserSoftwareFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSoftware
     */
    select?: UserSoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSoftware
     */
    omit?: UserSoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSoftwareInclude<ExtArgs> | null
    /**
     * Filter, which UserSoftware to fetch.
     */
    where: UserSoftwareWhereUniqueInput
  }

  /**
   * UserSoftware findUniqueOrThrow
   */
  export type UserSoftwareFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSoftware
     */
    select?: UserSoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSoftware
     */
    omit?: UserSoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSoftwareInclude<ExtArgs> | null
    /**
     * Filter, which UserSoftware to fetch.
     */
    where: UserSoftwareWhereUniqueInput
  }

  /**
   * UserSoftware findFirst
   */
  export type UserSoftwareFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSoftware
     */
    select?: UserSoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSoftware
     */
    omit?: UserSoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSoftwareInclude<ExtArgs> | null
    /**
     * Filter, which UserSoftware to fetch.
     */
    where?: UserSoftwareWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSoftwares to fetch.
     */
    orderBy?: UserSoftwareOrderByWithRelationInput | UserSoftwareOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserSoftwares.
     */
    cursor?: UserSoftwareWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSoftwares from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSoftwares.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserSoftwares.
     */
    distinct?: UserSoftwareScalarFieldEnum | UserSoftwareScalarFieldEnum[]
  }

  /**
   * UserSoftware findFirstOrThrow
   */
  export type UserSoftwareFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSoftware
     */
    select?: UserSoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSoftware
     */
    omit?: UserSoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSoftwareInclude<ExtArgs> | null
    /**
     * Filter, which UserSoftware to fetch.
     */
    where?: UserSoftwareWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSoftwares to fetch.
     */
    orderBy?: UserSoftwareOrderByWithRelationInput | UserSoftwareOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserSoftwares.
     */
    cursor?: UserSoftwareWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSoftwares from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSoftwares.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserSoftwares.
     */
    distinct?: UserSoftwareScalarFieldEnum | UserSoftwareScalarFieldEnum[]
  }

  /**
   * UserSoftware findMany
   */
  export type UserSoftwareFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSoftware
     */
    select?: UserSoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSoftware
     */
    omit?: UserSoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSoftwareInclude<ExtArgs> | null
    /**
     * Filter, which UserSoftwares to fetch.
     */
    where?: UserSoftwareWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSoftwares to fetch.
     */
    orderBy?: UserSoftwareOrderByWithRelationInput | UserSoftwareOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserSoftwares.
     */
    cursor?: UserSoftwareWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSoftwares from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSoftwares.
     */
    skip?: number
    distinct?: UserSoftwareScalarFieldEnum | UserSoftwareScalarFieldEnum[]
  }

  /**
   * UserSoftware create
   */
  export type UserSoftwareCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSoftware
     */
    select?: UserSoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSoftware
     */
    omit?: UserSoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSoftwareInclude<ExtArgs> | null
    /**
     * The data needed to create a UserSoftware.
     */
    data: XOR<UserSoftwareCreateInput, UserSoftwareUncheckedCreateInput>
  }

  /**
   * UserSoftware createMany
   */
  export type UserSoftwareCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserSoftwares.
     */
    data: UserSoftwareCreateManyInput | UserSoftwareCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserSoftware createManyAndReturn
   */
  export type UserSoftwareCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSoftware
     */
    select?: UserSoftwareSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserSoftware
     */
    omit?: UserSoftwareOmit<ExtArgs> | null
    /**
     * The data used to create many UserSoftwares.
     */
    data: UserSoftwareCreateManyInput | UserSoftwareCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSoftwareIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserSoftware update
   */
  export type UserSoftwareUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSoftware
     */
    select?: UserSoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSoftware
     */
    omit?: UserSoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSoftwareInclude<ExtArgs> | null
    /**
     * The data needed to update a UserSoftware.
     */
    data: XOR<UserSoftwareUpdateInput, UserSoftwareUncheckedUpdateInput>
    /**
     * Choose, which UserSoftware to update.
     */
    where: UserSoftwareWhereUniqueInput
  }

  /**
   * UserSoftware updateMany
   */
  export type UserSoftwareUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserSoftwares.
     */
    data: XOR<UserSoftwareUpdateManyMutationInput, UserSoftwareUncheckedUpdateManyInput>
    /**
     * Filter which UserSoftwares to update
     */
    where?: UserSoftwareWhereInput
    /**
     * Limit how many UserSoftwares to update.
     */
    limit?: number
  }

  /**
   * UserSoftware updateManyAndReturn
   */
  export type UserSoftwareUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSoftware
     */
    select?: UserSoftwareSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserSoftware
     */
    omit?: UserSoftwareOmit<ExtArgs> | null
    /**
     * The data used to update UserSoftwares.
     */
    data: XOR<UserSoftwareUpdateManyMutationInput, UserSoftwareUncheckedUpdateManyInput>
    /**
     * Filter which UserSoftwares to update
     */
    where?: UserSoftwareWhereInput
    /**
     * Limit how many UserSoftwares to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSoftwareIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserSoftware upsert
   */
  export type UserSoftwareUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSoftware
     */
    select?: UserSoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSoftware
     */
    omit?: UserSoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSoftwareInclude<ExtArgs> | null
    /**
     * The filter to search for the UserSoftware to update in case it exists.
     */
    where: UserSoftwareWhereUniqueInput
    /**
     * In case the UserSoftware found by the `where` argument doesn't exist, create a new UserSoftware with this data.
     */
    create: XOR<UserSoftwareCreateInput, UserSoftwareUncheckedCreateInput>
    /**
     * In case the UserSoftware was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserSoftwareUpdateInput, UserSoftwareUncheckedUpdateInput>
  }

  /**
   * UserSoftware delete
   */
  export type UserSoftwareDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSoftware
     */
    select?: UserSoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSoftware
     */
    omit?: UserSoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSoftwareInclude<ExtArgs> | null
    /**
     * Filter which UserSoftware to delete.
     */
    where: UserSoftwareWhereUniqueInput
  }

  /**
   * UserSoftware deleteMany
   */
  export type UserSoftwareDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserSoftwares to delete
     */
    where?: UserSoftwareWhereInput
    /**
     * Limit how many UserSoftwares to delete.
     */
    limit?: number
  }

  /**
   * UserSoftware without action
   */
  export type UserSoftwareDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSoftware
     */
    select?: UserSoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSoftware
     */
    omit?: UserSoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSoftwareInclude<ExtArgs> | null
  }


  /**
   * Model SharedAccount
   */

  export type AggregateSharedAccount = {
    _count: SharedAccountCountAggregateOutputType | null
    _avg: SharedAccountAvgAggregateOutputType | null
    _sum: SharedAccountSumAggregateOutputType | null
    _min: SharedAccountMinAggregateOutputType | null
    _max: SharedAccountMaxAggregateOutputType | null
  }

  export type SharedAccountAvgAggregateOutputType = {
    userCount: number | null
  }

  export type SharedAccountSumAggregateOutputType = {
    userCount: number | null
  }

  export type SharedAccountMinAggregateOutputType = {
    id: string | null
    email: string | null
    name: string | null
    normalizedName: string | null
    location: string | null
    type: string | null
    active: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    updatedById: string | null
    userCount: number | null
  }

  export type SharedAccountMaxAggregateOutputType = {
    id: string | null
    email: string | null
    name: string | null
    normalizedName: string | null
    location: string | null
    type: string | null
    active: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    updatedById: string | null
    userCount: number | null
  }

  export type SharedAccountCountAggregateOutputType = {
    id: number
    email: number
    name: number
    normalizedName: number
    location: number
    type: number
    active: number
    createdAt: number
    updatedAt: number
    updatedById: number
    userCount: number
    _all: number
  }


  export type SharedAccountAvgAggregateInputType = {
    userCount?: true
  }

  export type SharedAccountSumAggregateInputType = {
    userCount?: true
  }

  export type SharedAccountMinAggregateInputType = {
    id?: true
    email?: true
    name?: true
    normalizedName?: true
    location?: true
    type?: true
    active?: true
    createdAt?: true
    updatedAt?: true
    updatedById?: true
    userCount?: true
  }

  export type SharedAccountMaxAggregateInputType = {
    id?: true
    email?: true
    name?: true
    normalizedName?: true
    location?: true
    type?: true
    active?: true
    createdAt?: true
    updatedAt?: true
    updatedById?: true
    userCount?: true
  }

  export type SharedAccountCountAggregateInputType = {
    id?: true
    email?: true
    name?: true
    normalizedName?: true
    location?: true
    type?: true
    active?: true
    createdAt?: true
    updatedAt?: true
    updatedById?: true
    userCount?: true
    _all?: true
  }

  export type SharedAccountAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SharedAccount to aggregate.
     */
    where?: SharedAccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SharedAccounts to fetch.
     */
    orderBy?: SharedAccountOrderByWithRelationInput | SharedAccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SharedAccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SharedAccounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SharedAccounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SharedAccounts
    **/
    _count?: true | SharedAccountCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SharedAccountAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SharedAccountSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SharedAccountMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SharedAccountMaxAggregateInputType
  }

  export type GetSharedAccountAggregateType<T extends SharedAccountAggregateArgs> = {
        [P in keyof T & keyof AggregateSharedAccount]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSharedAccount[P]>
      : GetScalarType<T[P], AggregateSharedAccount[P]>
  }




  export type SharedAccountGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SharedAccountWhereInput
    orderBy?: SharedAccountOrderByWithAggregationInput | SharedAccountOrderByWithAggregationInput[]
    by: SharedAccountScalarFieldEnum[] | SharedAccountScalarFieldEnum
    having?: SharedAccountScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SharedAccountCountAggregateInputType | true
    _avg?: SharedAccountAvgAggregateInputType
    _sum?: SharedAccountSumAggregateInputType
    _min?: SharedAccountMinAggregateInputType
    _max?: SharedAccountMaxAggregateInputType
  }

  export type SharedAccountGroupByOutputType = {
    id: string
    email: string
    name: string
    normalizedName: string
    location: string | null
    type: string | null
    active: boolean
    createdAt: Date
    updatedAt: Date
    updatedById: string
    userCount: number
    _count: SharedAccountCountAggregateOutputType | null
    _avg: SharedAccountAvgAggregateOutputType | null
    _sum: SharedAccountSumAggregateOutputType | null
    _min: SharedAccountMinAggregateOutputType | null
    _max: SharedAccountMaxAggregateOutputType | null
  }

  type GetSharedAccountGroupByPayload<T extends SharedAccountGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SharedAccountGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SharedAccountGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SharedAccountGroupByOutputType[P]>
            : GetScalarType<T[P], SharedAccountGroupByOutputType[P]>
        }
      >
    >


  export type SharedAccountSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    name?: boolean
    normalizedName?: boolean
    location?: boolean
    type?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    updatedById?: boolean
    userCount?: boolean
    updatedBy?: boolean | UserDefaultArgs<ExtArgs>
    histories?: boolean | SharedAccount$historiesArgs<ExtArgs>
    softwareAccesses?: boolean | SharedAccount$softwareAccessesArgs<ExtArgs>
    _count?: boolean | SharedAccountCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sharedAccount"]>

  export type SharedAccountSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    name?: boolean
    normalizedName?: boolean
    location?: boolean
    type?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    updatedById?: boolean
    userCount?: boolean
    updatedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sharedAccount"]>

  export type SharedAccountSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    name?: boolean
    normalizedName?: boolean
    location?: boolean
    type?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    updatedById?: boolean
    userCount?: boolean
    updatedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sharedAccount"]>

  export type SharedAccountSelectScalar = {
    id?: boolean
    email?: boolean
    name?: boolean
    normalizedName?: boolean
    location?: boolean
    type?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    updatedById?: boolean
    userCount?: boolean
  }

  export type SharedAccountOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "name" | "normalizedName" | "location" | "type" | "active" | "createdAt" | "updatedAt" | "updatedById" | "userCount", ExtArgs["result"]["sharedAccount"]>
  export type SharedAccountInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    updatedBy?: boolean | UserDefaultArgs<ExtArgs>
    histories?: boolean | SharedAccount$historiesArgs<ExtArgs>
    softwareAccesses?: boolean | SharedAccount$softwareAccessesArgs<ExtArgs>
    _count?: boolean | SharedAccountCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SharedAccountIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    updatedBy?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SharedAccountIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    updatedBy?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SharedAccountPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SharedAccount"
    objects: {
      updatedBy: Prisma.$UserPayload<ExtArgs>
      histories: Prisma.$SharedAccountHistoryPayload<ExtArgs>[]
      softwareAccesses: Prisma.$SoftwareAccessPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      name: string
      normalizedName: string
      location: string | null
      type: string | null
      active: boolean
      createdAt: Date
      updatedAt: Date
      updatedById: string
      userCount: number
    }, ExtArgs["result"]["sharedAccount"]>
    composites: {}
  }

  type SharedAccountGetPayload<S extends boolean | null | undefined | SharedAccountDefaultArgs> = $Result.GetResult<Prisma.$SharedAccountPayload, S>

  type SharedAccountCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SharedAccountFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SharedAccountCountAggregateInputType | true
    }

  export interface SharedAccountDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SharedAccount'], meta: { name: 'SharedAccount' } }
    /**
     * Find zero or one SharedAccount that matches the filter.
     * @param {SharedAccountFindUniqueArgs} args - Arguments to find a SharedAccount
     * @example
     * // Get one SharedAccount
     * const sharedAccount = await prisma.sharedAccount.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SharedAccountFindUniqueArgs>(args: SelectSubset<T, SharedAccountFindUniqueArgs<ExtArgs>>): Prisma__SharedAccountClient<$Result.GetResult<Prisma.$SharedAccountPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SharedAccount that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SharedAccountFindUniqueOrThrowArgs} args - Arguments to find a SharedAccount
     * @example
     * // Get one SharedAccount
     * const sharedAccount = await prisma.sharedAccount.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SharedAccountFindUniqueOrThrowArgs>(args: SelectSubset<T, SharedAccountFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SharedAccountClient<$Result.GetResult<Prisma.$SharedAccountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SharedAccount that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SharedAccountFindFirstArgs} args - Arguments to find a SharedAccount
     * @example
     * // Get one SharedAccount
     * const sharedAccount = await prisma.sharedAccount.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SharedAccountFindFirstArgs>(args?: SelectSubset<T, SharedAccountFindFirstArgs<ExtArgs>>): Prisma__SharedAccountClient<$Result.GetResult<Prisma.$SharedAccountPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SharedAccount that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SharedAccountFindFirstOrThrowArgs} args - Arguments to find a SharedAccount
     * @example
     * // Get one SharedAccount
     * const sharedAccount = await prisma.sharedAccount.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SharedAccountFindFirstOrThrowArgs>(args?: SelectSubset<T, SharedAccountFindFirstOrThrowArgs<ExtArgs>>): Prisma__SharedAccountClient<$Result.GetResult<Prisma.$SharedAccountPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SharedAccounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SharedAccountFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SharedAccounts
     * const sharedAccounts = await prisma.sharedAccount.findMany()
     * 
     * // Get first 10 SharedAccounts
     * const sharedAccounts = await prisma.sharedAccount.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sharedAccountWithIdOnly = await prisma.sharedAccount.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SharedAccountFindManyArgs>(args?: SelectSubset<T, SharedAccountFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SharedAccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SharedAccount.
     * @param {SharedAccountCreateArgs} args - Arguments to create a SharedAccount.
     * @example
     * // Create one SharedAccount
     * const SharedAccount = await prisma.sharedAccount.create({
     *   data: {
     *     // ... data to create a SharedAccount
     *   }
     * })
     * 
     */
    create<T extends SharedAccountCreateArgs>(args: SelectSubset<T, SharedAccountCreateArgs<ExtArgs>>): Prisma__SharedAccountClient<$Result.GetResult<Prisma.$SharedAccountPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SharedAccounts.
     * @param {SharedAccountCreateManyArgs} args - Arguments to create many SharedAccounts.
     * @example
     * // Create many SharedAccounts
     * const sharedAccount = await prisma.sharedAccount.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SharedAccountCreateManyArgs>(args?: SelectSubset<T, SharedAccountCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SharedAccounts and returns the data saved in the database.
     * @param {SharedAccountCreateManyAndReturnArgs} args - Arguments to create many SharedAccounts.
     * @example
     * // Create many SharedAccounts
     * const sharedAccount = await prisma.sharedAccount.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SharedAccounts and only return the `id`
     * const sharedAccountWithIdOnly = await prisma.sharedAccount.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SharedAccountCreateManyAndReturnArgs>(args?: SelectSubset<T, SharedAccountCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SharedAccountPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SharedAccount.
     * @param {SharedAccountDeleteArgs} args - Arguments to delete one SharedAccount.
     * @example
     * // Delete one SharedAccount
     * const SharedAccount = await prisma.sharedAccount.delete({
     *   where: {
     *     // ... filter to delete one SharedAccount
     *   }
     * })
     * 
     */
    delete<T extends SharedAccountDeleteArgs>(args: SelectSubset<T, SharedAccountDeleteArgs<ExtArgs>>): Prisma__SharedAccountClient<$Result.GetResult<Prisma.$SharedAccountPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SharedAccount.
     * @param {SharedAccountUpdateArgs} args - Arguments to update one SharedAccount.
     * @example
     * // Update one SharedAccount
     * const sharedAccount = await prisma.sharedAccount.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SharedAccountUpdateArgs>(args: SelectSubset<T, SharedAccountUpdateArgs<ExtArgs>>): Prisma__SharedAccountClient<$Result.GetResult<Prisma.$SharedAccountPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SharedAccounts.
     * @param {SharedAccountDeleteManyArgs} args - Arguments to filter SharedAccounts to delete.
     * @example
     * // Delete a few SharedAccounts
     * const { count } = await prisma.sharedAccount.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SharedAccountDeleteManyArgs>(args?: SelectSubset<T, SharedAccountDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SharedAccounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SharedAccountUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SharedAccounts
     * const sharedAccount = await prisma.sharedAccount.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SharedAccountUpdateManyArgs>(args: SelectSubset<T, SharedAccountUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SharedAccounts and returns the data updated in the database.
     * @param {SharedAccountUpdateManyAndReturnArgs} args - Arguments to update many SharedAccounts.
     * @example
     * // Update many SharedAccounts
     * const sharedAccount = await prisma.sharedAccount.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SharedAccounts and only return the `id`
     * const sharedAccountWithIdOnly = await prisma.sharedAccount.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SharedAccountUpdateManyAndReturnArgs>(args: SelectSubset<T, SharedAccountUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SharedAccountPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SharedAccount.
     * @param {SharedAccountUpsertArgs} args - Arguments to update or create a SharedAccount.
     * @example
     * // Update or create a SharedAccount
     * const sharedAccount = await prisma.sharedAccount.upsert({
     *   create: {
     *     // ... data to create a SharedAccount
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SharedAccount we want to update
     *   }
     * })
     */
    upsert<T extends SharedAccountUpsertArgs>(args: SelectSubset<T, SharedAccountUpsertArgs<ExtArgs>>): Prisma__SharedAccountClient<$Result.GetResult<Prisma.$SharedAccountPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SharedAccounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SharedAccountCountArgs} args - Arguments to filter SharedAccounts to count.
     * @example
     * // Count the number of SharedAccounts
     * const count = await prisma.sharedAccount.count({
     *   where: {
     *     // ... the filter for the SharedAccounts we want to count
     *   }
     * })
    **/
    count<T extends SharedAccountCountArgs>(
      args?: Subset<T, SharedAccountCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SharedAccountCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SharedAccount.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SharedAccountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SharedAccountAggregateArgs>(args: Subset<T, SharedAccountAggregateArgs>): Prisma.PrismaPromise<GetSharedAccountAggregateType<T>>

    /**
     * Group by SharedAccount.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SharedAccountGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SharedAccountGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SharedAccountGroupByArgs['orderBy'] }
        : { orderBy?: SharedAccountGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SharedAccountGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSharedAccountGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SharedAccount model
   */
  readonly fields: SharedAccountFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SharedAccount.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SharedAccountClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    updatedBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    histories<T extends SharedAccount$historiesArgs<ExtArgs> = {}>(args?: Subset<T, SharedAccount$historiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SharedAccountHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    softwareAccesses<T extends SharedAccount$softwareAccessesArgs<ExtArgs> = {}>(args?: Subset<T, SharedAccount$softwareAccessesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwareAccessPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SharedAccount model
   */
  interface SharedAccountFieldRefs {
    readonly id: FieldRef<"SharedAccount", 'String'>
    readonly email: FieldRef<"SharedAccount", 'String'>
    readonly name: FieldRef<"SharedAccount", 'String'>
    readonly normalizedName: FieldRef<"SharedAccount", 'String'>
    readonly location: FieldRef<"SharedAccount", 'String'>
    readonly type: FieldRef<"SharedAccount", 'String'>
    readonly active: FieldRef<"SharedAccount", 'Boolean'>
    readonly createdAt: FieldRef<"SharedAccount", 'DateTime'>
    readonly updatedAt: FieldRef<"SharedAccount", 'DateTime'>
    readonly updatedById: FieldRef<"SharedAccount", 'String'>
    readonly userCount: FieldRef<"SharedAccount", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * SharedAccount findUnique
   */
  export type SharedAccountFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccount
     */
    select?: SharedAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccount
     */
    omit?: SharedAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountInclude<ExtArgs> | null
    /**
     * Filter, which SharedAccount to fetch.
     */
    where: SharedAccountWhereUniqueInput
  }

  /**
   * SharedAccount findUniqueOrThrow
   */
  export type SharedAccountFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccount
     */
    select?: SharedAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccount
     */
    omit?: SharedAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountInclude<ExtArgs> | null
    /**
     * Filter, which SharedAccount to fetch.
     */
    where: SharedAccountWhereUniqueInput
  }

  /**
   * SharedAccount findFirst
   */
  export type SharedAccountFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccount
     */
    select?: SharedAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccount
     */
    omit?: SharedAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountInclude<ExtArgs> | null
    /**
     * Filter, which SharedAccount to fetch.
     */
    where?: SharedAccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SharedAccounts to fetch.
     */
    orderBy?: SharedAccountOrderByWithRelationInput | SharedAccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SharedAccounts.
     */
    cursor?: SharedAccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SharedAccounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SharedAccounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SharedAccounts.
     */
    distinct?: SharedAccountScalarFieldEnum | SharedAccountScalarFieldEnum[]
  }

  /**
   * SharedAccount findFirstOrThrow
   */
  export type SharedAccountFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccount
     */
    select?: SharedAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccount
     */
    omit?: SharedAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountInclude<ExtArgs> | null
    /**
     * Filter, which SharedAccount to fetch.
     */
    where?: SharedAccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SharedAccounts to fetch.
     */
    orderBy?: SharedAccountOrderByWithRelationInput | SharedAccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SharedAccounts.
     */
    cursor?: SharedAccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SharedAccounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SharedAccounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SharedAccounts.
     */
    distinct?: SharedAccountScalarFieldEnum | SharedAccountScalarFieldEnum[]
  }

  /**
   * SharedAccount findMany
   */
  export type SharedAccountFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccount
     */
    select?: SharedAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccount
     */
    omit?: SharedAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountInclude<ExtArgs> | null
    /**
     * Filter, which SharedAccounts to fetch.
     */
    where?: SharedAccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SharedAccounts to fetch.
     */
    orderBy?: SharedAccountOrderByWithRelationInput | SharedAccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SharedAccounts.
     */
    cursor?: SharedAccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SharedAccounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SharedAccounts.
     */
    skip?: number
    distinct?: SharedAccountScalarFieldEnum | SharedAccountScalarFieldEnum[]
  }

  /**
   * SharedAccount create
   */
  export type SharedAccountCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccount
     */
    select?: SharedAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccount
     */
    omit?: SharedAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountInclude<ExtArgs> | null
    /**
     * The data needed to create a SharedAccount.
     */
    data: XOR<SharedAccountCreateInput, SharedAccountUncheckedCreateInput>
  }

  /**
   * SharedAccount createMany
   */
  export type SharedAccountCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SharedAccounts.
     */
    data: SharedAccountCreateManyInput | SharedAccountCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SharedAccount createManyAndReturn
   */
  export type SharedAccountCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccount
     */
    select?: SharedAccountSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccount
     */
    omit?: SharedAccountOmit<ExtArgs> | null
    /**
     * The data used to create many SharedAccounts.
     */
    data: SharedAccountCreateManyInput | SharedAccountCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SharedAccount update
   */
  export type SharedAccountUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccount
     */
    select?: SharedAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccount
     */
    omit?: SharedAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountInclude<ExtArgs> | null
    /**
     * The data needed to update a SharedAccount.
     */
    data: XOR<SharedAccountUpdateInput, SharedAccountUncheckedUpdateInput>
    /**
     * Choose, which SharedAccount to update.
     */
    where: SharedAccountWhereUniqueInput
  }

  /**
   * SharedAccount updateMany
   */
  export type SharedAccountUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SharedAccounts.
     */
    data: XOR<SharedAccountUpdateManyMutationInput, SharedAccountUncheckedUpdateManyInput>
    /**
     * Filter which SharedAccounts to update
     */
    where?: SharedAccountWhereInput
    /**
     * Limit how many SharedAccounts to update.
     */
    limit?: number
  }

  /**
   * SharedAccount updateManyAndReturn
   */
  export type SharedAccountUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccount
     */
    select?: SharedAccountSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccount
     */
    omit?: SharedAccountOmit<ExtArgs> | null
    /**
     * The data used to update SharedAccounts.
     */
    data: XOR<SharedAccountUpdateManyMutationInput, SharedAccountUncheckedUpdateManyInput>
    /**
     * Filter which SharedAccounts to update
     */
    where?: SharedAccountWhereInput
    /**
     * Limit how many SharedAccounts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SharedAccount upsert
   */
  export type SharedAccountUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccount
     */
    select?: SharedAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccount
     */
    omit?: SharedAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountInclude<ExtArgs> | null
    /**
     * The filter to search for the SharedAccount to update in case it exists.
     */
    where: SharedAccountWhereUniqueInput
    /**
     * In case the SharedAccount found by the `where` argument doesn't exist, create a new SharedAccount with this data.
     */
    create: XOR<SharedAccountCreateInput, SharedAccountUncheckedCreateInput>
    /**
     * In case the SharedAccount was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SharedAccountUpdateInput, SharedAccountUncheckedUpdateInput>
  }

  /**
   * SharedAccount delete
   */
  export type SharedAccountDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccount
     */
    select?: SharedAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccount
     */
    omit?: SharedAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountInclude<ExtArgs> | null
    /**
     * Filter which SharedAccount to delete.
     */
    where: SharedAccountWhereUniqueInput
  }

  /**
   * SharedAccount deleteMany
   */
  export type SharedAccountDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SharedAccounts to delete
     */
    where?: SharedAccountWhereInput
    /**
     * Limit how many SharedAccounts to delete.
     */
    limit?: number
  }

  /**
   * SharedAccount.histories
   */
  export type SharedAccount$historiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccountHistory
     */
    select?: SharedAccountHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccountHistory
     */
    omit?: SharedAccountHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountHistoryInclude<ExtArgs> | null
    where?: SharedAccountHistoryWhereInput
    orderBy?: SharedAccountHistoryOrderByWithRelationInput | SharedAccountHistoryOrderByWithRelationInput[]
    cursor?: SharedAccountHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SharedAccountHistoryScalarFieldEnum | SharedAccountHistoryScalarFieldEnum[]
  }

  /**
   * SharedAccount.softwareAccesses
   */
  export type SharedAccount$softwareAccessesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareAccess
     */
    select?: SoftwareAccessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareAccess
     */
    omit?: SoftwareAccessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareAccessInclude<ExtArgs> | null
    where?: SoftwareAccessWhereInput
    orderBy?: SoftwareAccessOrderByWithRelationInput | SoftwareAccessOrderByWithRelationInput[]
    cursor?: SoftwareAccessWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SoftwareAccessScalarFieldEnum | SoftwareAccessScalarFieldEnum[]
  }

  /**
   * SharedAccount without action
   */
  export type SharedAccountDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccount
     */
    select?: SharedAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccount
     */
    omit?: SharedAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountInclude<ExtArgs> | null
  }


  /**
   * Model SharedAccountHistory
   */

  export type AggregateSharedAccountHistory = {
    _count: SharedAccountHistoryCountAggregateOutputType | null
    _min: SharedAccountHistoryMinAggregateOutputType | null
    _max: SharedAccountHistoryMaxAggregateOutputType | null
  }

  export type SharedAccountHistoryMinAggregateOutputType = {
    id: string | null
    sharedAccountId: string | null
    action: string | null
    field: string | null
    newValue: string | null
    oldValue: string | null
    updatedBy: string | null
    updatedOn: Date | null
  }

  export type SharedAccountHistoryMaxAggregateOutputType = {
    id: string | null
    sharedAccountId: string | null
    action: string | null
    field: string | null
    newValue: string | null
    oldValue: string | null
    updatedBy: string | null
    updatedOn: Date | null
  }

  export type SharedAccountHistoryCountAggregateOutputType = {
    id: number
    sharedAccountId: number
    action: number
    field: number
    newValue: number
    oldValue: number
    updatedBy: number
    updatedOn: number
    _all: number
  }


  export type SharedAccountHistoryMinAggregateInputType = {
    id?: true
    sharedAccountId?: true
    action?: true
    field?: true
    newValue?: true
    oldValue?: true
    updatedBy?: true
    updatedOn?: true
  }

  export type SharedAccountHistoryMaxAggregateInputType = {
    id?: true
    sharedAccountId?: true
    action?: true
    field?: true
    newValue?: true
    oldValue?: true
    updatedBy?: true
    updatedOn?: true
  }

  export type SharedAccountHistoryCountAggregateInputType = {
    id?: true
    sharedAccountId?: true
    action?: true
    field?: true
    newValue?: true
    oldValue?: true
    updatedBy?: true
    updatedOn?: true
    _all?: true
  }

  export type SharedAccountHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SharedAccountHistory to aggregate.
     */
    where?: SharedAccountHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SharedAccountHistories to fetch.
     */
    orderBy?: SharedAccountHistoryOrderByWithRelationInput | SharedAccountHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SharedAccountHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SharedAccountHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SharedAccountHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SharedAccountHistories
    **/
    _count?: true | SharedAccountHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SharedAccountHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SharedAccountHistoryMaxAggregateInputType
  }

  export type GetSharedAccountHistoryAggregateType<T extends SharedAccountHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateSharedAccountHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSharedAccountHistory[P]>
      : GetScalarType<T[P], AggregateSharedAccountHistory[P]>
  }




  export type SharedAccountHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SharedAccountHistoryWhereInput
    orderBy?: SharedAccountHistoryOrderByWithAggregationInput | SharedAccountHistoryOrderByWithAggregationInput[]
    by: SharedAccountHistoryScalarFieldEnum[] | SharedAccountHistoryScalarFieldEnum
    having?: SharedAccountHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SharedAccountHistoryCountAggregateInputType | true
    _min?: SharedAccountHistoryMinAggregateInputType
    _max?: SharedAccountHistoryMaxAggregateInputType
  }

  export type SharedAccountHistoryGroupByOutputType = {
    id: string
    sharedAccountId: string
    action: string
    field: string
    newValue: string | null
    oldValue: string | null
    updatedBy: string
    updatedOn: Date
    _count: SharedAccountHistoryCountAggregateOutputType | null
    _min: SharedAccountHistoryMinAggregateOutputType | null
    _max: SharedAccountHistoryMaxAggregateOutputType | null
  }

  type GetSharedAccountHistoryGroupByPayload<T extends SharedAccountHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SharedAccountHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SharedAccountHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SharedAccountHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], SharedAccountHistoryGroupByOutputType[P]>
        }
      >
    >


  export type SharedAccountHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sharedAccountId?: boolean
    action?: boolean
    field?: boolean
    newValue?: boolean
    oldValue?: boolean
    updatedBy?: boolean
    updatedOn?: boolean
    sharedAccount?: boolean | SharedAccountDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sharedAccountHistory"]>

  export type SharedAccountHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sharedAccountId?: boolean
    action?: boolean
    field?: boolean
    newValue?: boolean
    oldValue?: boolean
    updatedBy?: boolean
    updatedOn?: boolean
    sharedAccount?: boolean | SharedAccountDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sharedAccountHistory"]>

  export type SharedAccountHistorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sharedAccountId?: boolean
    action?: boolean
    field?: boolean
    newValue?: boolean
    oldValue?: boolean
    updatedBy?: boolean
    updatedOn?: boolean
    sharedAccount?: boolean | SharedAccountDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sharedAccountHistory"]>

  export type SharedAccountHistorySelectScalar = {
    id?: boolean
    sharedAccountId?: boolean
    action?: boolean
    field?: boolean
    newValue?: boolean
    oldValue?: boolean
    updatedBy?: boolean
    updatedOn?: boolean
  }

  export type SharedAccountHistoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sharedAccountId" | "action" | "field" | "newValue" | "oldValue" | "updatedBy" | "updatedOn", ExtArgs["result"]["sharedAccountHistory"]>
  export type SharedAccountHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sharedAccount?: boolean | SharedAccountDefaultArgs<ExtArgs>
  }
  export type SharedAccountHistoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sharedAccount?: boolean | SharedAccountDefaultArgs<ExtArgs>
  }
  export type SharedAccountHistoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sharedAccount?: boolean | SharedAccountDefaultArgs<ExtArgs>
  }

  export type $SharedAccountHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SharedAccountHistory"
    objects: {
      sharedAccount: Prisma.$SharedAccountPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sharedAccountId: string
      action: string
      field: string
      newValue: string | null
      oldValue: string | null
      updatedBy: string
      updatedOn: Date
    }, ExtArgs["result"]["sharedAccountHistory"]>
    composites: {}
  }

  type SharedAccountHistoryGetPayload<S extends boolean | null | undefined | SharedAccountHistoryDefaultArgs> = $Result.GetResult<Prisma.$SharedAccountHistoryPayload, S>

  type SharedAccountHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SharedAccountHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SharedAccountHistoryCountAggregateInputType | true
    }

  export interface SharedAccountHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SharedAccountHistory'], meta: { name: 'SharedAccountHistory' } }
    /**
     * Find zero or one SharedAccountHistory that matches the filter.
     * @param {SharedAccountHistoryFindUniqueArgs} args - Arguments to find a SharedAccountHistory
     * @example
     * // Get one SharedAccountHistory
     * const sharedAccountHistory = await prisma.sharedAccountHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SharedAccountHistoryFindUniqueArgs>(args: SelectSubset<T, SharedAccountHistoryFindUniqueArgs<ExtArgs>>): Prisma__SharedAccountHistoryClient<$Result.GetResult<Prisma.$SharedAccountHistoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SharedAccountHistory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SharedAccountHistoryFindUniqueOrThrowArgs} args - Arguments to find a SharedAccountHistory
     * @example
     * // Get one SharedAccountHistory
     * const sharedAccountHistory = await prisma.sharedAccountHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SharedAccountHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, SharedAccountHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SharedAccountHistoryClient<$Result.GetResult<Prisma.$SharedAccountHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SharedAccountHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SharedAccountHistoryFindFirstArgs} args - Arguments to find a SharedAccountHistory
     * @example
     * // Get one SharedAccountHistory
     * const sharedAccountHistory = await prisma.sharedAccountHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SharedAccountHistoryFindFirstArgs>(args?: SelectSubset<T, SharedAccountHistoryFindFirstArgs<ExtArgs>>): Prisma__SharedAccountHistoryClient<$Result.GetResult<Prisma.$SharedAccountHistoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SharedAccountHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SharedAccountHistoryFindFirstOrThrowArgs} args - Arguments to find a SharedAccountHistory
     * @example
     * // Get one SharedAccountHistory
     * const sharedAccountHistory = await prisma.sharedAccountHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SharedAccountHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, SharedAccountHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__SharedAccountHistoryClient<$Result.GetResult<Prisma.$SharedAccountHistoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SharedAccountHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SharedAccountHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SharedAccountHistories
     * const sharedAccountHistories = await prisma.sharedAccountHistory.findMany()
     * 
     * // Get first 10 SharedAccountHistories
     * const sharedAccountHistories = await prisma.sharedAccountHistory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sharedAccountHistoryWithIdOnly = await prisma.sharedAccountHistory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SharedAccountHistoryFindManyArgs>(args?: SelectSubset<T, SharedAccountHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SharedAccountHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SharedAccountHistory.
     * @param {SharedAccountHistoryCreateArgs} args - Arguments to create a SharedAccountHistory.
     * @example
     * // Create one SharedAccountHistory
     * const SharedAccountHistory = await prisma.sharedAccountHistory.create({
     *   data: {
     *     // ... data to create a SharedAccountHistory
     *   }
     * })
     * 
     */
    create<T extends SharedAccountHistoryCreateArgs>(args: SelectSubset<T, SharedAccountHistoryCreateArgs<ExtArgs>>): Prisma__SharedAccountHistoryClient<$Result.GetResult<Prisma.$SharedAccountHistoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SharedAccountHistories.
     * @param {SharedAccountHistoryCreateManyArgs} args - Arguments to create many SharedAccountHistories.
     * @example
     * // Create many SharedAccountHistories
     * const sharedAccountHistory = await prisma.sharedAccountHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SharedAccountHistoryCreateManyArgs>(args?: SelectSubset<T, SharedAccountHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SharedAccountHistories and returns the data saved in the database.
     * @param {SharedAccountHistoryCreateManyAndReturnArgs} args - Arguments to create many SharedAccountHistories.
     * @example
     * // Create many SharedAccountHistories
     * const sharedAccountHistory = await prisma.sharedAccountHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SharedAccountHistories and only return the `id`
     * const sharedAccountHistoryWithIdOnly = await prisma.sharedAccountHistory.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SharedAccountHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, SharedAccountHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SharedAccountHistoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SharedAccountHistory.
     * @param {SharedAccountHistoryDeleteArgs} args - Arguments to delete one SharedAccountHistory.
     * @example
     * // Delete one SharedAccountHistory
     * const SharedAccountHistory = await prisma.sharedAccountHistory.delete({
     *   where: {
     *     // ... filter to delete one SharedAccountHistory
     *   }
     * })
     * 
     */
    delete<T extends SharedAccountHistoryDeleteArgs>(args: SelectSubset<T, SharedAccountHistoryDeleteArgs<ExtArgs>>): Prisma__SharedAccountHistoryClient<$Result.GetResult<Prisma.$SharedAccountHistoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SharedAccountHistory.
     * @param {SharedAccountHistoryUpdateArgs} args - Arguments to update one SharedAccountHistory.
     * @example
     * // Update one SharedAccountHistory
     * const sharedAccountHistory = await prisma.sharedAccountHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SharedAccountHistoryUpdateArgs>(args: SelectSubset<T, SharedAccountHistoryUpdateArgs<ExtArgs>>): Prisma__SharedAccountHistoryClient<$Result.GetResult<Prisma.$SharedAccountHistoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SharedAccountHistories.
     * @param {SharedAccountHistoryDeleteManyArgs} args - Arguments to filter SharedAccountHistories to delete.
     * @example
     * // Delete a few SharedAccountHistories
     * const { count } = await prisma.sharedAccountHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SharedAccountHistoryDeleteManyArgs>(args?: SelectSubset<T, SharedAccountHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SharedAccountHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SharedAccountHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SharedAccountHistories
     * const sharedAccountHistory = await prisma.sharedAccountHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SharedAccountHistoryUpdateManyArgs>(args: SelectSubset<T, SharedAccountHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SharedAccountHistories and returns the data updated in the database.
     * @param {SharedAccountHistoryUpdateManyAndReturnArgs} args - Arguments to update many SharedAccountHistories.
     * @example
     * // Update many SharedAccountHistories
     * const sharedAccountHistory = await prisma.sharedAccountHistory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SharedAccountHistories and only return the `id`
     * const sharedAccountHistoryWithIdOnly = await prisma.sharedAccountHistory.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SharedAccountHistoryUpdateManyAndReturnArgs>(args: SelectSubset<T, SharedAccountHistoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SharedAccountHistoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SharedAccountHistory.
     * @param {SharedAccountHistoryUpsertArgs} args - Arguments to update or create a SharedAccountHistory.
     * @example
     * // Update or create a SharedAccountHistory
     * const sharedAccountHistory = await prisma.sharedAccountHistory.upsert({
     *   create: {
     *     // ... data to create a SharedAccountHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SharedAccountHistory we want to update
     *   }
     * })
     */
    upsert<T extends SharedAccountHistoryUpsertArgs>(args: SelectSubset<T, SharedAccountHistoryUpsertArgs<ExtArgs>>): Prisma__SharedAccountHistoryClient<$Result.GetResult<Prisma.$SharedAccountHistoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SharedAccountHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SharedAccountHistoryCountArgs} args - Arguments to filter SharedAccountHistories to count.
     * @example
     * // Count the number of SharedAccountHistories
     * const count = await prisma.sharedAccountHistory.count({
     *   where: {
     *     // ... the filter for the SharedAccountHistories we want to count
     *   }
     * })
    **/
    count<T extends SharedAccountHistoryCountArgs>(
      args?: Subset<T, SharedAccountHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SharedAccountHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SharedAccountHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SharedAccountHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SharedAccountHistoryAggregateArgs>(args: Subset<T, SharedAccountHistoryAggregateArgs>): Prisma.PrismaPromise<GetSharedAccountHistoryAggregateType<T>>

    /**
     * Group by SharedAccountHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SharedAccountHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SharedAccountHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SharedAccountHistoryGroupByArgs['orderBy'] }
        : { orderBy?: SharedAccountHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SharedAccountHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSharedAccountHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SharedAccountHistory model
   */
  readonly fields: SharedAccountHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SharedAccountHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SharedAccountHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sharedAccount<T extends SharedAccountDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SharedAccountDefaultArgs<ExtArgs>>): Prisma__SharedAccountClient<$Result.GetResult<Prisma.$SharedAccountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SharedAccountHistory model
   */
  interface SharedAccountHistoryFieldRefs {
    readonly id: FieldRef<"SharedAccountHistory", 'String'>
    readonly sharedAccountId: FieldRef<"SharedAccountHistory", 'String'>
    readonly action: FieldRef<"SharedAccountHistory", 'String'>
    readonly field: FieldRef<"SharedAccountHistory", 'String'>
    readonly newValue: FieldRef<"SharedAccountHistory", 'String'>
    readonly oldValue: FieldRef<"SharedAccountHistory", 'String'>
    readonly updatedBy: FieldRef<"SharedAccountHistory", 'String'>
    readonly updatedOn: FieldRef<"SharedAccountHistory", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SharedAccountHistory findUnique
   */
  export type SharedAccountHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccountHistory
     */
    select?: SharedAccountHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccountHistory
     */
    omit?: SharedAccountHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountHistoryInclude<ExtArgs> | null
    /**
     * Filter, which SharedAccountHistory to fetch.
     */
    where: SharedAccountHistoryWhereUniqueInput
  }

  /**
   * SharedAccountHistory findUniqueOrThrow
   */
  export type SharedAccountHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccountHistory
     */
    select?: SharedAccountHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccountHistory
     */
    omit?: SharedAccountHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountHistoryInclude<ExtArgs> | null
    /**
     * Filter, which SharedAccountHistory to fetch.
     */
    where: SharedAccountHistoryWhereUniqueInput
  }

  /**
   * SharedAccountHistory findFirst
   */
  export type SharedAccountHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccountHistory
     */
    select?: SharedAccountHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccountHistory
     */
    omit?: SharedAccountHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountHistoryInclude<ExtArgs> | null
    /**
     * Filter, which SharedAccountHistory to fetch.
     */
    where?: SharedAccountHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SharedAccountHistories to fetch.
     */
    orderBy?: SharedAccountHistoryOrderByWithRelationInput | SharedAccountHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SharedAccountHistories.
     */
    cursor?: SharedAccountHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SharedAccountHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SharedAccountHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SharedAccountHistories.
     */
    distinct?: SharedAccountHistoryScalarFieldEnum | SharedAccountHistoryScalarFieldEnum[]
  }

  /**
   * SharedAccountHistory findFirstOrThrow
   */
  export type SharedAccountHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccountHistory
     */
    select?: SharedAccountHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccountHistory
     */
    omit?: SharedAccountHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountHistoryInclude<ExtArgs> | null
    /**
     * Filter, which SharedAccountHistory to fetch.
     */
    where?: SharedAccountHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SharedAccountHistories to fetch.
     */
    orderBy?: SharedAccountHistoryOrderByWithRelationInput | SharedAccountHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SharedAccountHistories.
     */
    cursor?: SharedAccountHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SharedAccountHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SharedAccountHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SharedAccountHistories.
     */
    distinct?: SharedAccountHistoryScalarFieldEnum | SharedAccountHistoryScalarFieldEnum[]
  }

  /**
   * SharedAccountHistory findMany
   */
  export type SharedAccountHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccountHistory
     */
    select?: SharedAccountHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccountHistory
     */
    omit?: SharedAccountHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountHistoryInclude<ExtArgs> | null
    /**
     * Filter, which SharedAccountHistories to fetch.
     */
    where?: SharedAccountHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SharedAccountHistories to fetch.
     */
    orderBy?: SharedAccountHistoryOrderByWithRelationInput | SharedAccountHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SharedAccountHistories.
     */
    cursor?: SharedAccountHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SharedAccountHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SharedAccountHistories.
     */
    skip?: number
    distinct?: SharedAccountHistoryScalarFieldEnum | SharedAccountHistoryScalarFieldEnum[]
  }

  /**
   * SharedAccountHistory create
   */
  export type SharedAccountHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccountHistory
     */
    select?: SharedAccountHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccountHistory
     */
    omit?: SharedAccountHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a SharedAccountHistory.
     */
    data: XOR<SharedAccountHistoryCreateInput, SharedAccountHistoryUncheckedCreateInput>
  }

  /**
   * SharedAccountHistory createMany
   */
  export type SharedAccountHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SharedAccountHistories.
     */
    data: SharedAccountHistoryCreateManyInput | SharedAccountHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SharedAccountHistory createManyAndReturn
   */
  export type SharedAccountHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccountHistory
     */
    select?: SharedAccountHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccountHistory
     */
    omit?: SharedAccountHistoryOmit<ExtArgs> | null
    /**
     * The data used to create many SharedAccountHistories.
     */
    data: SharedAccountHistoryCreateManyInput | SharedAccountHistoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountHistoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SharedAccountHistory update
   */
  export type SharedAccountHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccountHistory
     */
    select?: SharedAccountHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccountHistory
     */
    omit?: SharedAccountHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a SharedAccountHistory.
     */
    data: XOR<SharedAccountHistoryUpdateInput, SharedAccountHistoryUncheckedUpdateInput>
    /**
     * Choose, which SharedAccountHistory to update.
     */
    where: SharedAccountHistoryWhereUniqueInput
  }

  /**
   * SharedAccountHistory updateMany
   */
  export type SharedAccountHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SharedAccountHistories.
     */
    data: XOR<SharedAccountHistoryUpdateManyMutationInput, SharedAccountHistoryUncheckedUpdateManyInput>
    /**
     * Filter which SharedAccountHistories to update
     */
    where?: SharedAccountHistoryWhereInput
    /**
     * Limit how many SharedAccountHistories to update.
     */
    limit?: number
  }

  /**
   * SharedAccountHistory updateManyAndReturn
   */
  export type SharedAccountHistoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccountHistory
     */
    select?: SharedAccountHistorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccountHistory
     */
    omit?: SharedAccountHistoryOmit<ExtArgs> | null
    /**
     * The data used to update SharedAccountHistories.
     */
    data: XOR<SharedAccountHistoryUpdateManyMutationInput, SharedAccountHistoryUncheckedUpdateManyInput>
    /**
     * Filter which SharedAccountHistories to update
     */
    where?: SharedAccountHistoryWhereInput
    /**
     * Limit how many SharedAccountHistories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountHistoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SharedAccountHistory upsert
   */
  export type SharedAccountHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccountHistory
     */
    select?: SharedAccountHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccountHistory
     */
    omit?: SharedAccountHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the SharedAccountHistory to update in case it exists.
     */
    where: SharedAccountHistoryWhereUniqueInput
    /**
     * In case the SharedAccountHistory found by the `where` argument doesn't exist, create a new SharedAccountHistory with this data.
     */
    create: XOR<SharedAccountHistoryCreateInput, SharedAccountHistoryUncheckedCreateInput>
    /**
     * In case the SharedAccountHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SharedAccountHistoryUpdateInput, SharedAccountHistoryUncheckedUpdateInput>
  }

  /**
   * SharedAccountHistory delete
   */
  export type SharedAccountHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccountHistory
     */
    select?: SharedAccountHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccountHistory
     */
    omit?: SharedAccountHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountHistoryInclude<ExtArgs> | null
    /**
     * Filter which SharedAccountHistory to delete.
     */
    where: SharedAccountHistoryWhereUniqueInput
  }

  /**
   * SharedAccountHistory deleteMany
   */
  export type SharedAccountHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SharedAccountHistories to delete
     */
    where?: SharedAccountHistoryWhereInput
    /**
     * Limit how many SharedAccountHistories to delete.
     */
    limit?: number
  }

  /**
   * SharedAccountHistory without action
   */
  export type SharedAccountHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SharedAccountHistory
     */
    select?: SharedAccountHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SharedAccountHistory
     */
    omit?: SharedAccountHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SharedAccountHistoryInclude<ExtArgs> | null
  }


  /**
   * Model SoftwareAccess
   */

  export type AggregateSoftwareAccess = {
    _count: SoftwareAccessCountAggregateOutputType | null
    _min: SoftwareAccessMinAggregateOutputType | null
    _max: SoftwareAccessMaxAggregateOutputType | null
  }

  export type SoftwareAccessMinAggregateOutputType = {
    id: string | null
    sharedAccountId: string | null
    softwareId: string | null
    access: boolean | null
    lastEdited: Date | null
    lastEditedBy: string | null
    uid: string | null
  }

  export type SoftwareAccessMaxAggregateOutputType = {
    id: string | null
    sharedAccountId: string | null
    softwareId: string | null
    access: boolean | null
    lastEdited: Date | null
    lastEditedBy: string | null
    uid: string | null
  }

  export type SoftwareAccessCountAggregateOutputType = {
    id: number
    sharedAccountId: number
    softwareId: number
    access: number
    lastEdited: number
    lastEditedBy: number
    permissions: number
    uid: number
    _all: number
  }


  export type SoftwareAccessMinAggregateInputType = {
    id?: true
    sharedAccountId?: true
    softwareId?: true
    access?: true
    lastEdited?: true
    lastEditedBy?: true
    uid?: true
  }

  export type SoftwareAccessMaxAggregateInputType = {
    id?: true
    sharedAccountId?: true
    softwareId?: true
    access?: true
    lastEdited?: true
    lastEditedBy?: true
    uid?: true
  }

  export type SoftwareAccessCountAggregateInputType = {
    id?: true
    sharedAccountId?: true
    softwareId?: true
    access?: true
    lastEdited?: true
    lastEditedBy?: true
    permissions?: true
    uid?: true
    _all?: true
  }

  export type SoftwareAccessAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SoftwareAccess to aggregate.
     */
    where?: SoftwareAccessWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SoftwareAccesses to fetch.
     */
    orderBy?: SoftwareAccessOrderByWithRelationInput | SoftwareAccessOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SoftwareAccessWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SoftwareAccesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SoftwareAccesses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SoftwareAccesses
    **/
    _count?: true | SoftwareAccessCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SoftwareAccessMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SoftwareAccessMaxAggregateInputType
  }

  export type GetSoftwareAccessAggregateType<T extends SoftwareAccessAggregateArgs> = {
        [P in keyof T & keyof AggregateSoftwareAccess]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSoftwareAccess[P]>
      : GetScalarType<T[P], AggregateSoftwareAccess[P]>
  }




  export type SoftwareAccessGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SoftwareAccessWhereInput
    orderBy?: SoftwareAccessOrderByWithAggregationInput | SoftwareAccessOrderByWithAggregationInput[]
    by: SoftwareAccessScalarFieldEnum[] | SoftwareAccessScalarFieldEnum
    having?: SoftwareAccessScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SoftwareAccessCountAggregateInputType | true
    _min?: SoftwareAccessMinAggregateInputType
    _max?: SoftwareAccessMaxAggregateInputType
  }

  export type SoftwareAccessGroupByOutputType = {
    id: string
    sharedAccountId: string
    softwareId: string
    access: boolean
    lastEdited: Date
    lastEditedBy: string
    permissions: string[]
    uid: string
    _count: SoftwareAccessCountAggregateOutputType | null
    _min: SoftwareAccessMinAggregateOutputType | null
    _max: SoftwareAccessMaxAggregateOutputType | null
  }

  type GetSoftwareAccessGroupByPayload<T extends SoftwareAccessGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SoftwareAccessGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SoftwareAccessGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SoftwareAccessGroupByOutputType[P]>
            : GetScalarType<T[P], SoftwareAccessGroupByOutputType[P]>
        }
      >
    >


  export type SoftwareAccessSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sharedAccountId?: boolean
    softwareId?: boolean
    access?: boolean
    lastEdited?: boolean
    lastEditedBy?: boolean
    permissions?: boolean
    uid?: boolean
    sharedAccount?: boolean | SharedAccountDefaultArgs<ExtArgs>
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["softwareAccess"]>

  export type SoftwareAccessSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sharedAccountId?: boolean
    softwareId?: boolean
    access?: boolean
    lastEdited?: boolean
    lastEditedBy?: boolean
    permissions?: boolean
    uid?: boolean
    sharedAccount?: boolean | SharedAccountDefaultArgs<ExtArgs>
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["softwareAccess"]>

  export type SoftwareAccessSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sharedAccountId?: boolean
    softwareId?: boolean
    access?: boolean
    lastEdited?: boolean
    lastEditedBy?: boolean
    permissions?: boolean
    uid?: boolean
    sharedAccount?: boolean | SharedAccountDefaultArgs<ExtArgs>
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["softwareAccess"]>

  export type SoftwareAccessSelectScalar = {
    id?: boolean
    sharedAccountId?: boolean
    softwareId?: boolean
    access?: boolean
    lastEdited?: boolean
    lastEditedBy?: boolean
    permissions?: boolean
    uid?: boolean
  }

  export type SoftwareAccessOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sharedAccountId" | "softwareId" | "access" | "lastEdited" | "lastEditedBy" | "permissions" | "uid", ExtArgs["result"]["softwareAccess"]>
  export type SoftwareAccessInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sharedAccount?: boolean | SharedAccountDefaultArgs<ExtArgs>
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
  }
  export type SoftwareAccessIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sharedAccount?: boolean | SharedAccountDefaultArgs<ExtArgs>
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
  }
  export type SoftwareAccessIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sharedAccount?: boolean | SharedAccountDefaultArgs<ExtArgs>
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
  }

  export type $SoftwareAccessPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SoftwareAccess"
    objects: {
      sharedAccount: Prisma.$SharedAccountPayload<ExtArgs>
      software: Prisma.$SoftwarePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sharedAccountId: string
      softwareId: string
      access: boolean
      lastEdited: Date
      lastEditedBy: string
      permissions: string[]
      uid: string
    }, ExtArgs["result"]["softwareAccess"]>
    composites: {}
  }

  type SoftwareAccessGetPayload<S extends boolean | null | undefined | SoftwareAccessDefaultArgs> = $Result.GetResult<Prisma.$SoftwareAccessPayload, S>

  type SoftwareAccessCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SoftwareAccessFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SoftwareAccessCountAggregateInputType | true
    }

  export interface SoftwareAccessDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SoftwareAccess'], meta: { name: 'SoftwareAccess' } }
    /**
     * Find zero or one SoftwareAccess that matches the filter.
     * @param {SoftwareAccessFindUniqueArgs} args - Arguments to find a SoftwareAccess
     * @example
     * // Get one SoftwareAccess
     * const softwareAccess = await prisma.softwareAccess.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SoftwareAccessFindUniqueArgs>(args: SelectSubset<T, SoftwareAccessFindUniqueArgs<ExtArgs>>): Prisma__SoftwareAccessClient<$Result.GetResult<Prisma.$SoftwareAccessPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SoftwareAccess that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SoftwareAccessFindUniqueOrThrowArgs} args - Arguments to find a SoftwareAccess
     * @example
     * // Get one SoftwareAccess
     * const softwareAccess = await prisma.softwareAccess.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SoftwareAccessFindUniqueOrThrowArgs>(args: SelectSubset<T, SoftwareAccessFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SoftwareAccessClient<$Result.GetResult<Prisma.$SoftwareAccessPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SoftwareAccess that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareAccessFindFirstArgs} args - Arguments to find a SoftwareAccess
     * @example
     * // Get one SoftwareAccess
     * const softwareAccess = await prisma.softwareAccess.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SoftwareAccessFindFirstArgs>(args?: SelectSubset<T, SoftwareAccessFindFirstArgs<ExtArgs>>): Prisma__SoftwareAccessClient<$Result.GetResult<Prisma.$SoftwareAccessPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SoftwareAccess that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareAccessFindFirstOrThrowArgs} args - Arguments to find a SoftwareAccess
     * @example
     * // Get one SoftwareAccess
     * const softwareAccess = await prisma.softwareAccess.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SoftwareAccessFindFirstOrThrowArgs>(args?: SelectSubset<T, SoftwareAccessFindFirstOrThrowArgs<ExtArgs>>): Prisma__SoftwareAccessClient<$Result.GetResult<Prisma.$SoftwareAccessPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SoftwareAccesses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareAccessFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SoftwareAccesses
     * const softwareAccesses = await prisma.softwareAccess.findMany()
     * 
     * // Get first 10 SoftwareAccesses
     * const softwareAccesses = await prisma.softwareAccess.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const softwareAccessWithIdOnly = await prisma.softwareAccess.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SoftwareAccessFindManyArgs>(args?: SelectSubset<T, SoftwareAccessFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwareAccessPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SoftwareAccess.
     * @param {SoftwareAccessCreateArgs} args - Arguments to create a SoftwareAccess.
     * @example
     * // Create one SoftwareAccess
     * const SoftwareAccess = await prisma.softwareAccess.create({
     *   data: {
     *     // ... data to create a SoftwareAccess
     *   }
     * })
     * 
     */
    create<T extends SoftwareAccessCreateArgs>(args: SelectSubset<T, SoftwareAccessCreateArgs<ExtArgs>>): Prisma__SoftwareAccessClient<$Result.GetResult<Prisma.$SoftwareAccessPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SoftwareAccesses.
     * @param {SoftwareAccessCreateManyArgs} args - Arguments to create many SoftwareAccesses.
     * @example
     * // Create many SoftwareAccesses
     * const softwareAccess = await prisma.softwareAccess.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SoftwareAccessCreateManyArgs>(args?: SelectSubset<T, SoftwareAccessCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SoftwareAccesses and returns the data saved in the database.
     * @param {SoftwareAccessCreateManyAndReturnArgs} args - Arguments to create many SoftwareAccesses.
     * @example
     * // Create many SoftwareAccesses
     * const softwareAccess = await prisma.softwareAccess.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SoftwareAccesses and only return the `id`
     * const softwareAccessWithIdOnly = await prisma.softwareAccess.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SoftwareAccessCreateManyAndReturnArgs>(args?: SelectSubset<T, SoftwareAccessCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwareAccessPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SoftwareAccess.
     * @param {SoftwareAccessDeleteArgs} args - Arguments to delete one SoftwareAccess.
     * @example
     * // Delete one SoftwareAccess
     * const SoftwareAccess = await prisma.softwareAccess.delete({
     *   where: {
     *     // ... filter to delete one SoftwareAccess
     *   }
     * })
     * 
     */
    delete<T extends SoftwareAccessDeleteArgs>(args: SelectSubset<T, SoftwareAccessDeleteArgs<ExtArgs>>): Prisma__SoftwareAccessClient<$Result.GetResult<Prisma.$SoftwareAccessPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SoftwareAccess.
     * @param {SoftwareAccessUpdateArgs} args - Arguments to update one SoftwareAccess.
     * @example
     * // Update one SoftwareAccess
     * const softwareAccess = await prisma.softwareAccess.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SoftwareAccessUpdateArgs>(args: SelectSubset<T, SoftwareAccessUpdateArgs<ExtArgs>>): Prisma__SoftwareAccessClient<$Result.GetResult<Prisma.$SoftwareAccessPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SoftwareAccesses.
     * @param {SoftwareAccessDeleteManyArgs} args - Arguments to filter SoftwareAccesses to delete.
     * @example
     * // Delete a few SoftwareAccesses
     * const { count } = await prisma.softwareAccess.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SoftwareAccessDeleteManyArgs>(args?: SelectSubset<T, SoftwareAccessDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SoftwareAccesses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareAccessUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SoftwareAccesses
     * const softwareAccess = await prisma.softwareAccess.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SoftwareAccessUpdateManyArgs>(args: SelectSubset<T, SoftwareAccessUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SoftwareAccesses and returns the data updated in the database.
     * @param {SoftwareAccessUpdateManyAndReturnArgs} args - Arguments to update many SoftwareAccesses.
     * @example
     * // Update many SoftwareAccesses
     * const softwareAccess = await prisma.softwareAccess.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SoftwareAccesses and only return the `id`
     * const softwareAccessWithIdOnly = await prisma.softwareAccess.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SoftwareAccessUpdateManyAndReturnArgs>(args: SelectSubset<T, SoftwareAccessUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwareAccessPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SoftwareAccess.
     * @param {SoftwareAccessUpsertArgs} args - Arguments to update or create a SoftwareAccess.
     * @example
     * // Update or create a SoftwareAccess
     * const softwareAccess = await prisma.softwareAccess.upsert({
     *   create: {
     *     // ... data to create a SoftwareAccess
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SoftwareAccess we want to update
     *   }
     * })
     */
    upsert<T extends SoftwareAccessUpsertArgs>(args: SelectSubset<T, SoftwareAccessUpsertArgs<ExtArgs>>): Prisma__SoftwareAccessClient<$Result.GetResult<Prisma.$SoftwareAccessPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SoftwareAccesses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareAccessCountArgs} args - Arguments to filter SoftwareAccesses to count.
     * @example
     * // Count the number of SoftwareAccesses
     * const count = await prisma.softwareAccess.count({
     *   where: {
     *     // ... the filter for the SoftwareAccesses we want to count
     *   }
     * })
    **/
    count<T extends SoftwareAccessCountArgs>(
      args?: Subset<T, SoftwareAccessCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SoftwareAccessCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SoftwareAccess.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareAccessAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SoftwareAccessAggregateArgs>(args: Subset<T, SoftwareAccessAggregateArgs>): Prisma.PrismaPromise<GetSoftwareAccessAggregateType<T>>

    /**
     * Group by SoftwareAccess.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareAccessGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SoftwareAccessGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SoftwareAccessGroupByArgs['orderBy'] }
        : { orderBy?: SoftwareAccessGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SoftwareAccessGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSoftwareAccessGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SoftwareAccess model
   */
  readonly fields: SoftwareAccessFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SoftwareAccess.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SoftwareAccessClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sharedAccount<T extends SharedAccountDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SharedAccountDefaultArgs<ExtArgs>>): Prisma__SharedAccountClient<$Result.GetResult<Prisma.$SharedAccountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    software<T extends SoftwareDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SoftwareDefaultArgs<ExtArgs>>): Prisma__SoftwareClient<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SoftwareAccess model
   */
  interface SoftwareAccessFieldRefs {
    readonly id: FieldRef<"SoftwareAccess", 'String'>
    readonly sharedAccountId: FieldRef<"SoftwareAccess", 'String'>
    readonly softwareId: FieldRef<"SoftwareAccess", 'String'>
    readonly access: FieldRef<"SoftwareAccess", 'Boolean'>
    readonly lastEdited: FieldRef<"SoftwareAccess", 'DateTime'>
    readonly lastEditedBy: FieldRef<"SoftwareAccess", 'String'>
    readonly permissions: FieldRef<"SoftwareAccess", 'String[]'>
    readonly uid: FieldRef<"SoftwareAccess", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SoftwareAccess findUnique
   */
  export type SoftwareAccessFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareAccess
     */
    select?: SoftwareAccessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareAccess
     */
    omit?: SoftwareAccessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareAccessInclude<ExtArgs> | null
    /**
     * Filter, which SoftwareAccess to fetch.
     */
    where: SoftwareAccessWhereUniqueInput
  }

  /**
   * SoftwareAccess findUniqueOrThrow
   */
  export type SoftwareAccessFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareAccess
     */
    select?: SoftwareAccessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareAccess
     */
    omit?: SoftwareAccessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareAccessInclude<ExtArgs> | null
    /**
     * Filter, which SoftwareAccess to fetch.
     */
    where: SoftwareAccessWhereUniqueInput
  }

  /**
   * SoftwareAccess findFirst
   */
  export type SoftwareAccessFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareAccess
     */
    select?: SoftwareAccessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareAccess
     */
    omit?: SoftwareAccessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareAccessInclude<ExtArgs> | null
    /**
     * Filter, which SoftwareAccess to fetch.
     */
    where?: SoftwareAccessWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SoftwareAccesses to fetch.
     */
    orderBy?: SoftwareAccessOrderByWithRelationInput | SoftwareAccessOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SoftwareAccesses.
     */
    cursor?: SoftwareAccessWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SoftwareAccesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SoftwareAccesses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SoftwareAccesses.
     */
    distinct?: SoftwareAccessScalarFieldEnum | SoftwareAccessScalarFieldEnum[]
  }

  /**
   * SoftwareAccess findFirstOrThrow
   */
  export type SoftwareAccessFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareAccess
     */
    select?: SoftwareAccessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareAccess
     */
    omit?: SoftwareAccessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareAccessInclude<ExtArgs> | null
    /**
     * Filter, which SoftwareAccess to fetch.
     */
    where?: SoftwareAccessWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SoftwareAccesses to fetch.
     */
    orderBy?: SoftwareAccessOrderByWithRelationInput | SoftwareAccessOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SoftwareAccesses.
     */
    cursor?: SoftwareAccessWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SoftwareAccesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SoftwareAccesses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SoftwareAccesses.
     */
    distinct?: SoftwareAccessScalarFieldEnum | SoftwareAccessScalarFieldEnum[]
  }

  /**
   * SoftwareAccess findMany
   */
  export type SoftwareAccessFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareAccess
     */
    select?: SoftwareAccessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareAccess
     */
    omit?: SoftwareAccessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareAccessInclude<ExtArgs> | null
    /**
     * Filter, which SoftwareAccesses to fetch.
     */
    where?: SoftwareAccessWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SoftwareAccesses to fetch.
     */
    orderBy?: SoftwareAccessOrderByWithRelationInput | SoftwareAccessOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SoftwareAccesses.
     */
    cursor?: SoftwareAccessWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SoftwareAccesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SoftwareAccesses.
     */
    skip?: number
    distinct?: SoftwareAccessScalarFieldEnum | SoftwareAccessScalarFieldEnum[]
  }

  /**
   * SoftwareAccess create
   */
  export type SoftwareAccessCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareAccess
     */
    select?: SoftwareAccessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareAccess
     */
    omit?: SoftwareAccessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareAccessInclude<ExtArgs> | null
    /**
     * The data needed to create a SoftwareAccess.
     */
    data: XOR<SoftwareAccessCreateInput, SoftwareAccessUncheckedCreateInput>
  }

  /**
   * SoftwareAccess createMany
   */
  export type SoftwareAccessCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SoftwareAccesses.
     */
    data: SoftwareAccessCreateManyInput | SoftwareAccessCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SoftwareAccess createManyAndReturn
   */
  export type SoftwareAccessCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareAccess
     */
    select?: SoftwareAccessSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareAccess
     */
    omit?: SoftwareAccessOmit<ExtArgs> | null
    /**
     * The data used to create many SoftwareAccesses.
     */
    data: SoftwareAccessCreateManyInput | SoftwareAccessCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareAccessIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SoftwareAccess update
   */
  export type SoftwareAccessUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareAccess
     */
    select?: SoftwareAccessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareAccess
     */
    omit?: SoftwareAccessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareAccessInclude<ExtArgs> | null
    /**
     * The data needed to update a SoftwareAccess.
     */
    data: XOR<SoftwareAccessUpdateInput, SoftwareAccessUncheckedUpdateInput>
    /**
     * Choose, which SoftwareAccess to update.
     */
    where: SoftwareAccessWhereUniqueInput
  }

  /**
   * SoftwareAccess updateMany
   */
  export type SoftwareAccessUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SoftwareAccesses.
     */
    data: XOR<SoftwareAccessUpdateManyMutationInput, SoftwareAccessUncheckedUpdateManyInput>
    /**
     * Filter which SoftwareAccesses to update
     */
    where?: SoftwareAccessWhereInput
    /**
     * Limit how many SoftwareAccesses to update.
     */
    limit?: number
  }

  /**
   * SoftwareAccess updateManyAndReturn
   */
  export type SoftwareAccessUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareAccess
     */
    select?: SoftwareAccessSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareAccess
     */
    omit?: SoftwareAccessOmit<ExtArgs> | null
    /**
     * The data used to update SoftwareAccesses.
     */
    data: XOR<SoftwareAccessUpdateManyMutationInput, SoftwareAccessUncheckedUpdateManyInput>
    /**
     * Filter which SoftwareAccesses to update
     */
    where?: SoftwareAccessWhereInput
    /**
     * Limit how many SoftwareAccesses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareAccessIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SoftwareAccess upsert
   */
  export type SoftwareAccessUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareAccess
     */
    select?: SoftwareAccessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareAccess
     */
    omit?: SoftwareAccessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareAccessInclude<ExtArgs> | null
    /**
     * The filter to search for the SoftwareAccess to update in case it exists.
     */
    where: SoftwareAccessWhereUniqueInput
    /**
     * In case the SoftwareAccess found by the `where` argument doesn't exist, create a new SoftwareAccess with this data.
     */
    create: XOR<SoftwareAccessCreateInput, SoftwareAccessUncheckedCreateInput>
    /**
     * In case the SoftwareAccess was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SoftwareAccessUpdateInput, SoftwareAccessUncheckedUpdateInput>
  }

  /**
   * SoftwareAccess delete
   */
  export type SoftwareAccessDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareAccess
     */
    select?: SoftwareAccessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareAccess
     */
    omit?: SoftwareAccessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareAccessInclude<ExtArgs> | null
    /**
     * Filter which SoftwareAccess to delete.
     */
    where: SoftwareAccessWhereUniqueInput
  }

  /**
   * SoftwareAccess deleteMany
   */
  export type SoftwareAccessDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SoftwareAccesses to delete
     */
    where?: SoftwareAccessWhereInput
    /**
     * Limit how many SoftwareAccesses to delete.
     */
    limit?: number
  }

  /**
   * SoftwareAccess without action
   */
  export type SoftwareAccessDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareAccess
     */
    select?: SoftwareAccessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareAccess
     */
    omit?: SoftwareAccessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareAccessInclude<ExtArgs> | null
  }


  /**
   * Model audit_log_entries
   */

  export type AggregateAudit_log_entries = {
    _count: Audit_log_entriesCountAggregateOutputType | null
    _min: Audit_log_entriesMinAggregateOutputType | null
    _max: Audit_log_entriesMaxAggregateOutputType | null
  }

  export type Audit_log_entriesMinAggregateOutputType = {
    instance_id: string | null
    id: string | null
    created_at: Date | null
    ip_address: string | null
  }

  export type Audit_log_entriesMaxAggregateOutputType = {
    instance_id: string | null
    id: string | null
    created_at: Date | null
    ip_address: string | null
  }

  export type Audit_log_entriesCountAggregateOutputType = {
    instance_id: number
    id: number
    payload: number
    created_at: number
    ip_address: number
    _all: number
  }


  export type Audit_log_entriesMinAggregateInputType = {
    instance_id?: true
    id?: true
    created_at?: true
    ip_address?: true
  }

  export type Audit_log_entriesMaxAggregateInputType = {
    instance_id?: true
    id?: true
    created_at?: true
    ip_address?: true
  }

  export type Audit_log_entriesCountAggregateInputType = {
    instance_id?: true
    id?: true
    payload?: true
    created_at?: true
    ip_address?: true
    _all?: true
  }

  export type Audit_log_entriesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which audit_log_entries to aggregate.
     */
    where?: audit_log_entriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of audit_log_entries to fetch.
     */
    orderBy?: audit_log_entriesOrderByWithRelationInput | audit_log_entriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: audit_log_entriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` audit_log_entries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` audit_log_entries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned audit_log_entries
    **/
    _count?: true | Audit_log_entriesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Audit_log_entriesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Audit_log_entriesMaxAggregateInputType
  }

  export type GetAudit_log_entriesAggregateType<T extends Audit_log_entriesAggregateArgs> = {
        [P in keyof T & keyof AggregateAudit_log_entries]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAudit_log_entries[P]>
      : GetScalarType<T[P], AggregateAudit_log_entries[P]>
  }




  export type audit_log_entriesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: audit_log_entriesWhereInput
    orderBy?: audit_log_entriesOrderByWithAggregationInput | audit_log_entriesOrderByWithAggregationInput[]
    by: Audit_log_entriesScalarFieldEnum[] | Audit_log_entriesScalarFieldEnum
    having?: audit_log_entriesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Audit_log_entriesCountAggregateInputType | true
    _min?: Audit_log_entriesMinAggregateInputType
    _max?: Audit_log_entriesMaxAggregateInputType
  }

  export type Audit_log_entriesGroupByOutputType = {
    instance_id: string | null
    id: string
    payload: JsonValue | null
    created_at: Date | null
    ip_address: string
    _count: Audit_log_entriesCountAggregateOutputType | null
    _min: Audit_log_entriesMinAggregateOutputType | null
    _max: Audit_log_entriesMaxAggregateOutputType | null
  }

  type GetAudit_log_entriesGroupByPayload<T extends audit_log_entriesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Audit_log_entriesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Audit_log_entriesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Audit_log_entriesGroupByOutputType[P]>
            : GetScalarType<T[P], Audit_log_entriesGroupByOutputType[P]>
        }
      >
    >


  export type audit_log_entriesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    instance_id?: boolean
    id?: boolean
    payload?: boolean
    created_at?: boolean
    ip_address?: boolean
  }, ExtArgs["result"]["audit_log_entries"]>

  export type audit_log_entriesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    instance_id?: boolean
    id?: boolean
    payload?: boolean
    created_at?: boolean
    ip_address?: boolean
  }, ExtArgs["result"]["audit_log_entries"]>

  export type audit_log_entriesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    instance_id?: boolean
    id?: boolean
    payload?: boolean
    created_at?: boolean
    ip_address?: boolean
  }, ExtArgs["result"]["audit_log_entries"]>

  export type audit_log_entriesSelectScalar = {
    instance_id?: boolean
    id?: boolean
    payload?: boolean
    created_at?: boolean
    ip_address?: boolean
  }

  export type audit_log_entriesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"instance_id" | "id" | "payload" | "created_at" | "ip_address", ExtArgs["result"]["audit_log_entries"]>

  export type $audit_log_entriesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "audit_log_entries"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      instance_id: string | null
      id: string
      payload: Prisma.JsonValue | null
      created_at: Date | null
      ip_address: string
    }, ExtArgs["result"]["audit_log_entries"]>
    composites: {}
  }

  type audit_log_entriesGetPayload<S extends boolean | null | undefined | audit_log_entriesDefaultArgs> = $Result.GetResult<Prisma.$audit_log_entriesPayload, S>

  type audit_log_entriesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<audit_log_entriesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Audit_log_entriesCountAggregateInputType | true
    }

  export interface audit_log_entriesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['audit_log_entries'], meta: { name: 'audit_log_entries' } }
    /**
     * Find zero or one Audit_log_entries that matches the filter.
     * @param {audit_log_entriesFindUniqueArgs} args - Arguments to find a Audit_log_entries
     * @example
     * // Get one Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends audit_log_entriesFindUniqueArgs>(args: SelectSubset<T, audit_log_entriesFindUniqueArgs<ExtArgs>>): Prisma__audit_log_entriesClient<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Audit_log_entries that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {audit_log_entriesFindUniqueOrThrowArgs} args - Arguments to find a Audit_log_entries
     * @example
     * // Get one Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends audit_log_entriesFindUniqueOrThrowArgs>(args: SelectSubset<T, audit_log_entriesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__audit_log_entriesClient<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Audit_log_entries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_log_entriesFindFirstArgs} args - Arguments to find a Audit_log_entries
     * @example
     * // Get one Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends audit_log_entriesFindFirstArgs>(args?: SelectSubset<T, audit_log_entriesFindFirstArgs<ExtArgs>>): Prisma__audit_log_entriesClient<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Audit_log_entries that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_log_entriesFindFirstOrThrowArgs} args - Arguments to find a Audit_log_entries
     * @example
     * // Get one Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends audit_log_entriesFindFirstOrThrowArgs>(args?: SelectSubset<T, audit_log_entriesFindFirstOrThrowArgs<ExtArgs>>): Prisma__audit_log_entriesClient<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Audit_log_entries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_log_entriesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.findMany()
     * 
     * // Get first 10 Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.findMany({ take: 10 })
     * 
     * // Only select the `instance_id`
     * const audit_log_entriesWithInstance_idOnly = await prisma.audit_log_entries.findMany({ select: { instance_id: true } })
     * 
     */
    findMany<T extends audit_log_entriesFindManyArgs>(args?: SelectSubset<T, audit_log_entriesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Audit_log_entries.
     * @param {audit_log_entriesCreateArgs} args - Arguments to create a Audit_log_entries.
     * @example
     * // Create one Audit_log_entries
     * const Audit_log_entries = await prisma.audit_log_entries.create({
     *   data: {
     *     // ... data to create a Audit_log_entries
     *   }
     * })
     * 
     */
    create<T extends audit_log_entriesCreateArgs>(args: SelectSubset<T, audit_log_entriesCreateArgs<ExtArgs>>): Prisma__audit_log_entriesClient<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Audit_log_entries.
     * @param {audit_log_entriesCreateManyArgs} args - Arguments to create many Audit_log_entries.
     * @example
     * // Create many Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends audit_log_entriesCreateManyArgs>(args?: SelectSubset<T, audit_log_entriesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Audit_log_entries and returns the data saved in the database.
     * @param {audit_log_entriesCreateManyAndReturnArgs} args - Arguments to create many Audit_log_entries.
     * @example
     * // Create many Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Audit_log_entries and only return the `instance_id`
     * const audit_log_entriesWithInstance_idOnly = await prisma.audit_log_entries.createManyAndReturn({
     *   select: { instance_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends audit_log_entriesCreateManyAndReturnArgs>(args?: SelectSubset<T, audit_log_entriesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Audit_log_entries.
     * @param {audit_log_entriesDeleteArgs} args - Arguments to delete one Audit_log_entries.
     * @example
     * // Delete one Audit_log_entries
     * const Audit_log_entries = await prisma.audit_log_entries.delete({
     *   where: {
     *     // ... filter to delete one Audit_log_entries
     *   }
     * })
     * 
     */
    delete<T extends audit_log_entriesDeleteArgs>(args: SelectSubset<T, audit_log_entriesDeleteArgs<ExtArgs>>): Prisma__audit_log_entriesClient<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Audit_log_entries.
     * @param {audit_log_entriesUpdateArgs} args - Arguments to update one Audit_log_entries.
     * @example
     * // Update one Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends audit_log_entriesUpdateArgs>(args: SelectSubset<T, audit_log_entriesUpdateArgs<ExtArgs>>): Prisma__audit_log_entriesClient<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Audit_log_entries.
     * @param {audit_log_entriesDeleteManyArgs} args - Arguments to filter Audit_log_entries to delete.
     * @example
     * // Delete a few Audit_log_entries
     * const { count } = await prisma.audit_log_entries.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends audit_log_entriesDeleteManyArgs>(args?: SelectSubset<T, audit_log_entriesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Audit_log_entries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_log_entriesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends audit_log_entriesUpdateManyArgs>(args: SelectSubset<T, audit_log_entriesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Audit_log_entries and returns the data updated in the database.
     * @param {audit_log_entriesUpdateManyAndReturnArgs} args - Arguments to update many Audit_log_entries.
     * @example
     * // Update many Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Audit_log_entries and only return the `instance_id`
     * const audit_log_entriesWithInstance_idOnly = await prisma.audit_log_entries.updateManyAndReturn({
     *   select: { instance_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends audit_log_entriesUpdateManyAndReturnArgs>(args: SelectSubset<T, audit_log_entriesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Audit_log_entries.
     * @param {audit_log_entriesUpsertArgs} args - Arguments to update or create a Audit_log_entries.
     * @example
     * // Update or create a Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.upsert({
     *   create: {
     *     // ... data to create a Audit_log_entries
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Audit_log_entries we want to update
     *   }
     * })
     */
    upsert<T extends audit_log_entriesUpsertArgs>(args: SelectSubset<T, audit_log_entriesUpsertArgs<ExtArgs>>): Prisma__audit_log_entriesClient<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Audit_log_entries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_log_entriesCountArgs} args - Arguments to filter Audit_log_entries to count.
     * @example
     * // Count the number of Audit_log_entries
     * const count = await prisma.audit_log_entries.count({
     *   where: {
     *     // ... the filter for the Audit_log_entries we want to count
     *   }
     * })
    **/
    count<T extends audit_log_entriesCountArgs>(
      args?: Subset<T, audit_log_entriesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Audit_log_entriesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Audit_log_entries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Audit_log_entriesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Audit_log_entriesAggregateArgs>(args: Subset<T, Audit_log_entriesAggregateArgs>): Prisma.PrismaPromise<GetAudit_log_entriesAggregateType<T>>

    /**
     * Group by Audit_log_entries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_log_entriesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends audit_log_entriesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: audit_log_entriesGroupByArgs['orderBy'] }
        : { orderBy?: audit_log_entriesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, audit_log_entriesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAudit_log_entriesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the audit_log_entries model
   */
  readonly fields: audit_log_entriesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for audit_log_entries.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__audit_log_entriesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the audit_log_entries model
   */
  interface audit_log_entriesFieldRefs {
    readonly instance_id: FieldRef<"audit_log_entries", 'String'>
    readonly id: FieldRef<"audit_log_entries", 'String'>
    readonly payload: FieldRef<"audit_log_entries", 'Json'>
    readonly created_at: FieldRef<"audit_log_entries", 'DateTime'>
    readonly ip_address: FieldRef<"audit_log_entries", 'String'>
  }
    

  // Custom InputTypes
  /**
   * audit_log_entries findUnique
   */
  export type audit_log_entriesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_log_entries
     */
    omit?: audit_log_entriesOmit<ExtArgs> | null
    /**
     * Filter, which audit_log_entries to fetch.
     */
    where: audit_log_entriesWhereUniqueInput
  }

  /**
   * audit_log_entries findUniqueOrThrow
   */
  export type audit_log_entriesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_log_entries
     */
    omit?: audit_log_entriesOmit<ExtArgs> | null
    /**
     * Filter, which audit_log_entries to fetch.
     */
    where: audit_log_entriesWhereUniqueInput
  }

  /**
   * audit_log_entries findFirst
   */
  export type audit_log_entriesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_log_entries
     */
    omit?: audit_log_entriesOmit<ExtArgs> | null
    /**
     * Filter, which audit_log_entries to fetch.
     */
    where?: audit_log_entriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of audit_log_entries to fetch.
     */
    orderBy?: audit_log_entriesOrderByWithRelationInput | audit_log_entriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for audit_log_entries.
     */
    cursor?: audit_log_entriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` audit_log_entries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` audit_log_entries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of audit_log_entries.
     */
    distinct?: Audit_log_entriesScalarFieldEnum | Audit_log_entriesScalarFieldEnum[]
  }

  /**
   * audit_log_entries findFirstOrThrow
   */
  export type audit_log_entriesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_log_entries
     */
    omit?: audit_log_entriesOmit<ExtArgs> | null
    /**
     * Filter, which audit_log_entries to fetch.
     */
    where?: audit_log_entriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of audit_log_entries to fetch.
     */
    orderBy?: audit_log_entriesOrderByWithRelationInput | audit_log_entriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for audit_log_entries.
     */
    cursor?: audit_log_entriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` audit_log_entries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` audit_log_entries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of audit_log_entries.
     */
    distinct?: Audit_log_entriesScalarFieldEnum | Audit_log_entriesScalarFieldEnum[]
  }

  /**
   * audit_log_entries findMany
   */
  export type audit_log_entriesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_log_entries
     */
    omit?: audit_log_entriesOmit<ExtArgs> | null
    /**
     * Filter, which audit_log_entries to fetch.
     */
    where?: audit_log_entriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of audit_log_entries to fetch.
     */
    orderBy?: audit_log_entriesOrderByWithRelationInput | audit_log_entriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing audit_log_entries.
     */
    cursor?: audit_log_entriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` audit_log_entries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` audit_log_entries.
     */
    skip?: number
    distinct?: Audit_log_entriesScalarFieldEnum | Audit_log_entriesScalarFieldEnum[]
  }

  /**
   * audit_log_entries create
   */
  export type audit_log_entriesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_log_entries
     */
    omit?: audit_log_entriesOmit<ExtArgs> | null
    /**
     * The data needed to create a audit_log_entries.
     */
    data: XOR<audit_log_entriesCreateInput, audit_log_entriesUncheckedCreateInput>
  }

  /**
   * audit_log_entries createMany
   */
  export type audit_log_entriesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many audit_log_entries.
     */
    data: audit_log_entriesCreateManyInput | audit_log_entriesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * audit_log_entries createManyAndReturn
   */
  export type audit_log_entriesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the audit_log_entries
     */
    omit?: audit_log_entriesOmit<ExtArgs> | null
    /**
     * The data used to create many audit_log_entries.
     */
    data: audit_log_entriesCreateManyInput | audit_log_entriesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * audit_log_entries update
   */
  export type audit_log_entriesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_log_entries
     */
    omit?: audit_log_entriesOmit<ExtArgs> | null
    /**
     * The data needed to update a audit_log_entries.
     */
    data: XOR<audit_log_entriesUpdateInput, audit_log_entriesUncheckedUpdateInput>
    /**
     * Choose, which audit_log_entries to update.
     */
    where: audit_log_entriesWhereUniqueInput
  }

  /**
   * audit_log_entries updateMany
   */
  export type audit_log_entriesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update audit_log_entries.
     */
    data: XOR<audit_log_entriesUpdateManyMutationInput, audit_log_entriesUncheckedUpdateManyInput>
    /**
     * Filter which audit_log_entries to update
     */
    where?: audit_log_entriesWhereInput
    /**
     * Limit how many audit_log_entries to update.
     */
    limit?: number
  }

  /**
   * audit_log_entries updateManyAndReturn
   */
  export type audit_log_entriesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the audit_log_entries
     */
    omit?: audit_log_entriesOmit<ExtArgs> | null
    /**
     * The data used to update audit_log_entries.
     */
    data: XOR<audit_log_entriesUpdateManyMutationInput, audit_log_entriesUncheckedUpdateManyInput>
    /**
     * Filter which audit_log_entries to update
     */
    where?: audit_log_entriesWhereInput
    /**
     * Limit how many audit_log_entries to update.
     */
    limit?: number
  }

  /**
   * audit_log_entries upsert
   */
  export type audit_log_entriesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_log_entries
     */
    omit?: audit_log_entriesOmit<ExtArgs> | null
    /**
     * The filter to search for the audit_log_entries to update in case it exists.
     */
    where: audit_log_entriesWhereUniqueInput
    /**
     * In case the audit_log_entries found by the `where` argument doesn't exist, create a new audit_log_entries with this data.
     */
    create: XOR<audit_log_entriesCreateInput, audit_log_entriesUncheckedCreateInput>
    /**
     * In case the audit_log_entries was found with the provided `where` argument, update it with this data.
     */
    update: XOR<audit_log_entriesUpdateInput, audit_log_entriesUncheckedUpdateInput>
  }

  /**
   * audit_log_entries delete
   */
  export type audit_log_entriesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_log_entries
     */
    omit?: audit_log_entriesOmit<ExtArgs> | null
    /**
     * Filter which audit_log_entries to delete.
     */
    where: audit_log_entriesWhereUniqueInput
  }

  /**
   * audit_log_entries deleteMany
   */
  export type audit_log_entriesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which audit_log_entries to delete
     */
    where?: audit_log_entriesWhereInput
    /**
     * Limit how many audit_log_entries to delete.
     */
    limit?: number
  }

  /**
   * audit_log_entries without action
   */
  export type audit_log_entriesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_log_entries
     */
    omit?: audit_log_entriesOmit<ExtArgs> | null
  }


  /**
   * Model flow_state
   */

  export type AggregateFlow_state = {
    _count: Flow_stateCountAggregateOutputType | null
    _min: Flow_stateMinAggregateOutputType | null
    _max: Flow_stateMaxAggregateOutputType | null
  }

  export type Flow_stateMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    auth_code: string | null
    code_challenge_method: $Enums.code_challenge_method | null
    code_challenge: string | null
    provider_type: string | null
    provider_access_token: string | null
    provider_refresh_token: string | null
    created_at: Date | null
    updated_at: Date | null
    authentication_method: string | null
    auth_code_issued_at: Date | null
  }

  export type Flow_stateMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    auth_code: string | null
    code_challenge_method: $Enums.code_challenge_method | null
    code_challenge: string | null
    provider_type: string | null
    provider_access_token: string | null
    provider_refresh_token: string | null
    created_at: Date | null
    updated_at: Date | null
    authentication_method: string | null
    auth_code_issued_at: Date | null
  }

  export type Flow_stateCountAggregateOutputType = {
    id: number
    user_id: number
    auth_code: number
    code_challenge_method: number
    code_challenge: number
    provider_type: number
    provider_access_token: number
    provider_refresh_token: number
    created_at: number
    updated_at: number
    authentication_method: number
    auth_code_issued_at: number
    _all: number
  }


  export type Flow_stateMinAggregateInputType = {
    id?: true
    user_id?: true
    auth_code?: true
    code_challenge_method?: true
    code_challenge?: true
    provider_type?: true
    provider_access_token?: true
    provider_refresh_token?: true
    created_at?: true
    updated_at?: true
    authentication_method?: true
    auth_code_issued_at?: true
  }

  export type Flow_stateMaxAggregateInputType = {
    id?: true
    user_id?: true
    auth_code?: true
    code_challenge_method?: true
    code_challenge?: true
    provider_type?: true
    provider_access_token?: true
    provider_refresh_token?: true
    created_at?: true
    updated_at?: true
    authentication_method?: true
    auth_code_issued_at?: true
  }

  export type Flow_stateCountAggregateInputType = {
    id?: true
    user_id?: true
    auth_code?: true
    code_challenge_method?: true
    code_challenge?: true
    provider_type?: true
    provider_access_token?: true
    provider_refresh_token?: true
    created_at?: true
    updated_at?: true
    authentication_method?: true
    auth_code_issued_at?: true
    _all?: true
  }

  export type Flow_stateAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which flow_state to aggregate.
     */
    where?: flow_stateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of flow_states to fetch.
     */
    orderBy?: flow_stateOrderByWithRelationInput | flow_stateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: flow_stateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` flow_states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` flow_states.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned flow_states
    **/
    _count?: true | Flow_stateCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Flow_stateMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Flow_stateMaxAggregateInputType
  }

  export type GetFlow_stateAggregateType<T extends Flow_stateAggregateArgs> = {
        [P in keyof T & keyof AggregateFlow_state]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFlow_state[P]>
      : GetScalarType<T[P], AggregateFlow_state[P]>
  }




  export type flow_stateGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: flow_stateWhereInput
    orderBy?: flow_stateOrderByWithAggregationInput | flow_stateOrderByWithAggregationInput[]
    by: Flow_stateScalarFieldEnum[] | Flow_stateScalarFieldEnum
    having?: flow_stateScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Flow_stateCountAggregateInputType | true
    _min?: Flow_stateMinAggregateInputType
    _max?: Flow_stateMaxAggregateInputType
  }

  export type Flow_stateGroupByOutputType = {
    id: string
    user_id: string | null
    auth_code: string
    code_challenge_method: $Enums.code_challenge_method
    code_challenge: string
    provider_type: string
    provider_access_token: string | null
    provider_refresh_token: string | null
    created_at: Date | null
    updated_at: Date | null
    authentication_method: string
    auth_code_issued_at: Date | null
    _count: Flow_stateCountAggregateOutputType | null
    _min: Flow_stateMinAggregateOutputType | null
    _max: Flow_stateMaxAggregateOutputType | null
  }

  type GetFlow_stateGroupByPayload<T extends flow_stateGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Flow_stateGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Flow_stateGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Flow_stateGroupByOutputType[P]>
            : GetScalarType<T[P], Flow_stateGroupByOutputType[P]>
        }
      >
    >


  export type flow_stateSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    auth_code?: boolean
    code_challenge_method?: boolean
    code_challenge?: boolean
    provider_type?: boolean
    provider_access_token?: boolean
    provider_refresh_token?: boolean
    created_at?: boolean
    updated_at?: boolean
    authentication_method?: boolean
    auth_code_issued_at?: boolean
    saml_relay_states?: boolean | flow_state$saml_relay_statesArgs<ExtArgs>
    _count?: boolean | Flow_stateCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["flow_state"]>

  export type flow_stateSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    auth_code?: boolean
    code_challenge_method?: boolean
    code_challenge?: boolean
    provider_type?: boolean
    provider_access_token?: boolean
    provider_refresh_token?: boolean
    created_at?: boolean
    updated_at?: boolean
    authentication_method?: boolean
    auth_code_issued_at?: boolean
  }, ExtArgs["result"]["flow_state"]>

  export type flow_stateSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    auth_code?: boolean
    code_challenge_method?: boolean
    code_challenge?: boolean
    provider_type?: boolean
    provider_access_token?: boolean
    provider_refresh_token?: boolean
    created_at?: boolean
    updated_at?: boolean
    authentication_method?: boolean
    auth_code_issued_at?: boolean
  }, ExtArgs["result"]["flow_state"]>

  export type flow_stateSelectScalar = {
    id?: boolean
    user_id?: boolean
    auth_code?: boolean
    code_challenge_method?: boolean
    code_challenge?: boolean
    provider_type?: boolean
    provider_access_token?: boolean
    provider_refresh_token?: boolean
    created_at?: boolean
    updated_at?: boolean
    authentication_method?: boolean
    auth_code_issued_at?: boolean
  }

  export type flow_stateOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "auth_code" | "code_challenge_method" | "code_challenge" | "provider_type" | "provider_access_token" | "provider_refresh_token" | "created_at" | "updated_at" | "authentication_method" | "auth_code_issued_at", ExtArgs["result"]["flow_state"]>
  export type flow_stateInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    saml_relay_states?: boolean | flow_state$saml_relay_statesArgs<ExtArgs>
    _count?: boolean | Flow_stateCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type flow_stateIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type flow_stateIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $flow_statePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "flow_state"
    objects: {
      saml_relay_states: Prisma.$saml_relay_statesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string | null
      auth_code: string
      code_challenge_method: $Enums.code_challenge_method
      code_challenge: string
      provider_type: string
      provider_access_token: string | null
      provider_refresh_token: string | null
      created_at: Date | null
      updated_at: Date | null
      authentication_method: string
      auth_code_issued_at: Date | null
    }, ExtArgs["result"]["flow_state"]>
    composites: {}
  }

  type flow_stateGetPayload<S extends boolean | null | undefined | flow_stateDefaultArgs> = $Result.GetResult<Prisma.$flow_statePayload, S>

  type flow_stateCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<flow_stateFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Flow_stateCountAggregateInputType | true
    }

  export interface flow_stateDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['flow_state'], meta: { name: 'flow_state' } }
    /**
     * Find zero or one Flow_state that matches the filter.
     * @param {flow_stateFindUniqueArgs} args - Arguments to find a Flow_state
     * @example
     * // Get one Flow_state
     * const flow_state = await prisma.flow_state.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends flow_stateFindUniqueArgs>(args: SelectSubset<T, flow_stateFindUniqueArgs<ExtArgs>>): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Flow_state that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {flow_stateFindUniqueOrThrowArgs} args - Arguments to find a Flow_state
     * @example
     * // Get one Flow_state
     * const flow_state = await prisma.flow_state.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends flow_stateFindUniqueOrThrowArgs>(args: SelectSubset<T, flow_stateFindUniqueOrThrowArgs<ExtArgs>>): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Flow_state that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {flow_stateFindFirstArgs} args - Arguments to find a Flow_state
     * @example
     * // Get one Flow_state
     * const flow_state = await prisma.flow_state.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends flow_stateFindFirstArgs>(args?: SelectSubset<T, flow_stateFindFirstArgs<ExtArgs>>): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Flow_state that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {flow_stateFindFirstOrThrowArgs} args - Arguments to find a Flow_state
     * @example
     * // Get one Flow_state
     * const flow_state = await prisma.flow_state.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends flow_stateFindFirstOrThrowArgs>(args?: SelectSubset<T, flow_stateFindFirstOrThrowArgs<ExtArgs>>): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Flow_states that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {flow_stateFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Flow_states
     * const flow_states = await prisma.flow_state.findMany()
     * 
     * // Get first 10 Flow_states
     * const flow_states = await prisma.flow_state.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const flow_stateWithIdOnly = await prisma.flow_state.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends flow_stateFindManyArgs>(args?: SelectSubset<T, flow_stateFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Flow_state.
     * @param {flow_stateCreateArgs} args - Arguments to create a Flow_state.
     * @example
     * // Create one Flow_state
     * const Flow_state = await prisma.flow_state.create({
     *   data: {
     *     // ... data to create a Flow_state
     *   }
     * })
     * 
     */
    create<T extends flow_stateCreateArgs>(args: SelectSubset<T, flow_stateCreateArgs<ExtArgs>>): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Flow_states.
     * @param {flow_stateCreateManyArgs} args - Arguments to create many Flow_states.
     * @example
     * // Create many Flow_states
     * const flow_state = await prisma.flow_state.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends flow_stateCreateManyArgs>(args?: SelectSubset<T, flow_stateCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Flow_states and returns the data saved in the database.
     * @param {flow_stateCreateManyAndReturnArgs} args - Arguments to create many Flow_states.
     * @example
     * // Create many Flow_states
     * const flow_state = await prisma.flow_state.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Flow_states and only return the `id`
     * const flow_stateWithIdOnly = await prisma.flow_state.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends flow_stateCreateManyAndReturnArgs>(args?: SelectSubset<T, flow_stateCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Flow_state.
     * @param {flow_stateDeleteArgs} args - Arguments to delete one Flow_state.
     * @example
     * // Delete one Flow_state
     * const Flow_state = await prisma.flow_state.delete({
     *   where: {
     *     // ... filter to delete one Flow_state
     *   }
     * })
     * 
     */
    delete<T extends flow_stateDeleteArgs>(args: SelectSubset<T, flow_stateDeleteArgs<ExtArgs>>): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Flow_state.
     * @param {flow_stateUpdateArgs} args - Arguments to update one Flow_state.
     * @example
     * // Update one Flow_state
     * const flow_state = await prisma.flow_state.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends flow_stateUpdateArgs>(args: SelectSubset<T, flow_stateUpdateArgs<ExtArgs>>): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Flow_states.
     * @param {flow_stateDeleteManyArgs} args - Arguments to filter Flow_states to delete.
     * @example
     * // Delete a few Flow_states
     * const { count } = await prisma.flow_state.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends flow_stateDeleteManyArgs>(args?: SelectSubset<T, flow_stateDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Flow_states.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {flow_stateUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Flow_states
     * const flow_state = await prisma.flow_state.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends flow_stateUpdateManyArgs>(args: SelectSubset<T, flow_stateUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Flow_states and returns the data updated in the database.
     * @param {flow_stateUpdateManyAndReturnArgs} args - Arguments to update many Flow_states.
     * @example
     * // Update many Flow_states
     * const flow_state = await prisma.flow_state.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Flow_states and only return the `id`
     * const flow_stateWithIdOnly = await prisma.flow_state.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends flow_stateUpdateManyAndReturnArgs>(args: SelectSubset<T, flow_stateUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Flow_state.
     * @param {flow_stateUpsertArgs} args - Arguments to update or create a Flow_state.
     * @example
     * // Update or create a Flow_state
     * const flow_state = await prisma.flow_state.upsert({
     *   create: {
     *     // ... data to create a Flow_state
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Flow_state we want to update
     *   }
     * })
     */
    upsert<T extends flow_stateUpsertArgs>(args: SelectSubset<T, flow_stateUpsertArgs<ExtArgs>>): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Flow_states.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {flow_stateCountArgs} args - Arguments to filter Flow_states to count.
     * @example
     * // Count the number of Flow_states
     * const count = await prisma.flow_state.count({
     *   where: {
     *     // ... the filter for the Flow_states we want to count
     *   }
     * })
    **/
    count<T extends flow_stateCountArgs>(
      args?: Subset<T, flow_stateCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Flow_stateCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Flow_state.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Flow_stateAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Flow_stateAggregateArgs>(args: Subset<T, Flow_stateAggregateArgs>): Prisma.PrismaPromise<GetFlow_stateAggregateType<T>>

    /**
     * Group by Flow_state.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {flow_stateGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends flow_stateGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: flow_stateGroupByArgs['orderBy'] }
        : { orderBy?: flow_stateGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, flow_stateGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFlow_stateGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the flow_state model
   */
  readonly fields: flow_stateFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for flow_state.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__flow_stateClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    saml_relay_states<T extends flow_state$saml_relay_statesArgs<ExtArgs> = {}>(args?: Subset<T, flow_state$saml_relay_statesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the flow_state model
   */
  interface flow_stateFieldRefs {
    readonly id: FieldRef<"flow_state", 'String'>
    readonly user_id: FieldRef<"flow_state", 'String'>
    readonly auth_code: FieldRef<"flow_state", 'String'>
    readonly code_challenge_method: FieldRef<"flow_state", 'code_challenge_method'>
    readonly code_challenge: FieldRef<"flow_state", 'String'>
    readonly provider_type: FieldRef<"flow_state", 'String'>
    readonly provider_access_token: FieldRef<"flow_state", 'String'>
    readonly provider_refresh_token: FieldRef<"flow_state", 'String'>
    readonly created_at: FieldRef<"flow_state", 'DateTime'>
    readonly updated_at: FieldRef<"flow_state", 'DateTime'>
    readonly authentication_method: FieldRef<"flow_state", 'String'>
    readonly auth_code_issued_at: FieldRef<"flow_state", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * flow_state findUnique
   */
  export type flow_stateFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * Filter, which flow_state to fetch.
     */
    where: flow_stateWhereUniqueInput
  }

  /**
   * flow_state findUniqueOrThrow
   */
  export type flow_stateFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * Filter, which flow_state to fetch.
     */
    where: flow_stateWhereUniqueInput
  }

  /**
   * flow_state findFirst
   */
  export type flow_stateFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * Filter, which flow_state to fetch.
     */
    where?: flow_stateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of flow_states to fetch.
     */
    orderBy?: flow_stateOrderByWithRelationInput | flow_stateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for flow_states.
     */
    cursor?: flow_stateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` flow_states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` flow_states.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of flow_states.
     */
    distinct?: Flow_stateScalarFieldEnum | Flow_stateScalarFieldEnum[]
  }

  /**
   * flow_state findFirstOrThrow
   */
  export type flow_stateFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * Filter, which flow_state to fetch.
     */
    where?: flow_stateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of flow_states to fetch.
     */
    orderBy?: flow_stateOrderByWithRelationInput | flow_stateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for flow_states.
     */
    cursor?: flow_stateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` flow_states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` flow_states.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of flow_states.
     */
    distinct?: Flow_stateScalarFieldEnum | Flow_stateScalarFieldEnum[]
  }

  /**
   * flow_state findMany
   */
  export type flow_stateFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * Filter, which flow_states to fetch.
     */
    where?: flow_stateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of flow_states to fetch.
     */
    orderBy?: flow_stateOrderByWithRelationInput | flow_stateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing flow_states.
     */
    cursor?: flow_stateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` flow_states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` flow_states.
     */
    skip?: number
    distinct?: Flow_stateScalarFieldEnum | Flow_stateScalarFieldEnum[]
  }

  /**
   * flow_state create
   */
  export type flow_stateCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * The data needed to create a flow_state.
     */
    data: XOR<flow_stateCreateInput, flow_stateUncheckedCreateInput>
  }

  /**
   * flow_state createMany
   */
  export type flow_stateCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many flow_states.
     */
    data: flow_stateCreateManyInput | flow_stateCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * flow_state createManyAndReturn
   */
  export type flow_stateCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * The data used to create many flow_states.
     */
    data: flow_stateCreateManyInput | flow_stateCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * flow_state update
   */
  export type flow_stateUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * The data needed to update a flow_state.
     */
    data: XOR<flow_stateUpdateInput, flow_stateUncheckedUpdateInput>
    /**
     * Choose, which flow_state to update.
     */
    where: flow_stateWhereUniqueInput
  }

  /**
   * flow_state updateMany
   */
  export type flow_stateUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update flow_states.
     */
    data: XOR<flow_stateUpdateManyMutationInput, flow_stateUncheckedUpdateManyInput>
    /**
     * Filter which flow_states to update
     */
    where?: flow_stateWhereInput
    /**
     * Limit how many flow_states to update.
     */
    limit?: number
  }

  /**
   * flow_state updateManyAndReturn
   */
  export type flow_stateUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * The data used to update flow_states.
     */
    data: XOR<flow_stateUpdateManyMutationInput, flow_stateUncheckedUpdateManyInput>
    /**
     * Filter which flow_states to update
     */
    where?: flow_stateWhereInput
    /**
     * Limit how many flow_states to update.
     */
    limit?: number
  }

  /**
   * flow_state upsert
   */
  export type flow_stateUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * The filter to search for the flow_state to update in case it exists.
     */
    where: flow_stateWhereUniqueInput
    /**
     * In case the flow_state found by the `where` argument doesn't exist, create a new flow_state with this data.
     */
    create: XOR<flow_stateCreateInput, flow_stateUncheckedCreateInput>
    /**
     * In case the flow_state was found with the provided `where` argument, update it with this data.
     */
    update: XOR<flow_stateUpdateInput, flow_stateUncheckedUpdateInput>
  }

  /**
   * flow_state delete
   */
  export type flow_stateDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * Filter which flow_state to delete.
     */
    where: flow_stateWhereUniqueInput
  }

  /**
   * flow_state deleteMany
   */
  export type flow_stateDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which flow_states to delete
     */
    where?: flow_stateWhereInput
    /**
     * Limit how many flow_states to delete.
     */
    limit?: number
  }

  /**
   * flow_state.saml_relay_states
   */
  export type flow_state$saml_relay_statesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    where?: saml_relay_statesWhereInput
    orderBy?: saml_relay_statesOrderByWithRelationInput | saml_relay_statesOrderByWithRelationInput[]
    cursor?: saml_relay_statesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Saml_relay_statesScalarFieldEnum | Saml_relay_statesScalarFieldEnum[]
  }

  /**
   * flow_state without action
   */
  export type flow_stateDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: flow_stateInclude<ExtArgs> | null
  }


  /**
   * Model identities
   */

  export type AggregateIdentities = {
    _count: IdentitiesCountAggregateOutputType | null
    _min: IdentitiesMinAggregateOutputType | null
    _max: IdentitiesMaxAggregateOutputType | null
  }

  export type IdentitiesMinAggregateOutputType = {
    provider_id: string | null
    user_id: string | null
    provider: string | null
    last_sign_in_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    email: string | null
    id: string | null
  }

  export type IdentitiesMaxAggregateOutputType = {
    provider_id: string | null
    user_id: string | null
    provider: string | null
    last_sign_in_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    email: string | null
    id: string | null
  }

  export type IdentitiesCountAggregateOutputType = {
    provider_id: number
    user_id: number
    identity_data: number
    provider: number
    last_sign_in_at: number
    created_at: number
    updated_at: number
    email: number
    id: number
    _all: number
  }


  export type IdentitiesMinAggregateInputType = {
    provider_id?: true
    user_id?: true
    provider?: true
    last_sign_in_at?: true
    created_at?: true
    updated_at?: true
    email?: true
    id?: true
  }

  export type IdentitiesMaxAggregateInputType = {
    provider_id?: true
    user_id?: true
    provider?: true
    last_sign_in_at?: true
    created_at?: true
    updated_at?: true
    email?: true
    id?: true
  }

  export type IdentitiesCountAggregateInputType = {
    provider_id?: true
    user_id?: true
    identity_data?: true
    provider?: true
    last_sign_in_at?: true
    created_at?: true
    updated_at?: true
    email?: true
    id?: true
    _all?: true
  }

  export type IdentitiesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which identities to aggregate.
     */
    where?: identitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of identities to fetch.
     */
    orderBy?: identitiesOrderByWithRelationInput | identitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: identitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` identities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` identities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned identities
    **/
    _count?: true | IdentitiesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: IdentitiesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: IdentitiesMaxAggregateInputType
  }

  export type GetIdentitiesAggregateType<T extends IdentitiesAggregateArgs> = {
        [P in keyof T & keyof AggregateIdentities]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIdentities[P]>
      : GetScalarType<T[P], AggregateIdentities[P]>
  }




  export type identitiesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: identitiesWhereInput
    orderBy?: identitiesOrderByWithAggregationInput | identitiesOrderByWithAggregationInput[]
    by: IdentitiesScalarFieldEnum[] | IdentitiesScalarFieldEnum
    having?: identitiesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: IdentitiesCountAggregateInputType | true
    _min?: IdentitiesMinAggregateInputType
    _max?: IdentitiesMaxAggregateInputType
  }

  export type IdentitiesGroupByOutputType = {
    provider_id: string
    user_id: string
    identity_data: JsonValue
    provider: string
    last_sign_in_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    email: string | null
    id: string
    _count: IdentitiesCountAggregateOutputType | null
    _min: IdentitiesMinAggregateOutputType | null
    _max: IdentitiesMaxAggregateOutputType | null
  }

  type GetIdentitiesGroupByPayload<T extends identitiesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<IdentitiesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof IdentitiesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], IdentitiesGroupByOutputType[P]>
            : GetScalarType<T[P], IdentitiesGroupByOutputType[P]>
        }
      >
    >


  export type identitiesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    provider_id?: boolean
    user_id?: boolean
    identity_data?: boolean
    provider?: boolean
    last_sign_in_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    email?: boolean
    id?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["identities"]>

  export type identitiesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    provider_id?: boolean
    user_id?: boolean
    identity_data?: boolean
    provider?: boolean
    last_sign_in_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    email?: boolean
    id?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["identities"]>

  export type identitiesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    provider_id?: boolean
    user_id?: boolean
    identity_data?: boolean
    provider?: boolean
    last_sign_in_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    email?: boolean
    id?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["identities"]>

  export type identitiesSelectScalar = {
    provider_id?: boolean
    user_id?: boolean
    identity_data?: boolean
    provider?: boolean
    last_sign_in_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    email?: boolean
    id?: boolean
  }

  export type identitiesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"provider_id" | "user_id" | "identity_data" | "provider" | "last_sign_in_at" | "created_at" | "updated_at" | "email" | "id", ExtArgs["result"]["identities"]>
  export type identitiesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type identitiesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type identitiesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $identitiesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "identities"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      provider_id: string
      user_id: string
      identity_data: Prisma.JsonValue
      provider: string
      last_sign_in_at: Date | null
      created_at: Date | null
      updated_at: Date | null
      email: string | null
      id: string
    }, ExtArgs["result"]["identities"]>
    composites: {}
  }

  type identitiesGetPayload<S extends boolean | null | undefined | identitiesDefaultArgs> = $Result.GetResult<Prisma.$identitiesPayload, S>

  type identitiesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<identitiesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: IdentitiesCountAggregateInputType | true
    }

  export interface identitiesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['identities'], meta: { name: 'identities' } }
    /**
     * Find zero or one Identities that matches the filter.
     * @param {identitiesFindUniqueArgs} args - Arguments to find a Identities
     * @example
     * // Get one Identities
     * const identities = await prisma.identities.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends identitiesFindUniqueArgs>(args: SelectSubset<T, identitiesFindUniqueArgs<ExtArgs>>): Prisma__identitiesClient<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Identities that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {identitiesFindUniqueOrThrowArgs} args - Arguments to find a Identities
     * @example
     * // Get one Identities
     * const identities = await prisma.identities.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends identitiesFindUniqueOrThrowArgs>(args: SelectSubset<T, identitiesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__identitiesClient<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Identities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {identitiesFindFirstArgs} args - Arguments to find a Identities
     * @example
     * // Get one Identities
     * const identities = await prisma.identities.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends identitiesFindFirstArgs>(args?: SelectSubset<T, identitiesFindFirstArgs<ExtArgs>>): Prisma__identitiesClient<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Identities that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {identitiesFindFirstOrThrowArgs} args - Arguments to find a Identities
     * @example
     * // Get one Identities
     * const identities = await prisma.identities.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends identitiesFindFirstOrThrowArgs>(args?: SelectSubset<T, identitiesFindFirstOrThrowArgs<ExtArgs>>): Prisma__identitiesClient<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Identities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {identitiesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Identities
     * const identities = await prisma.identities.findMany()
     * 
     * // Get first 10 Identities
     * const identities = await prisma.identities.findMany({ take: 10 })
     * 
     * // Only select the `provider_id`
     * const identitiesWithProvider_idOnly = await prisma.identities.findMany({ select: { provider_id: true } })
     * 
     */
    findMany<T extends identitiesFindManyArgs>(args?: SelectSubset<T, identitiesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Identities.
     * @param {identitiesCreateArgs} args - Arguments to create a Identities.
     * @example
     * // Create one Identities
     * const Identities = await prisma.identities.create({
     *   data: {
     *     // ... data to create a Identities
     *   }
     * })
     * 
     */
    create<T extends identitiesCreateArgs>(args: SelectSubset<T, identitiesCreateArgs<ExtArgs>>): Prisma__identitiesClient<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Identities.
     * @param {identitiesCreateManyArgs} args - Arguments to create many Identities.
     * @example
     * // Create many Identities
     * const identities = await prisma.identities.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends identitiesCreateManyArgs>(args?: SelectSubset<T, identitiesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Identities and returns the data saved in the database.
     * @param {identitiesCreateManyAndReturnArgs} args - Arguments to create many Identities.
     * @example
     * // Create many Identities
     * const identities = await prisma.identities.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Identities and only return the `provider_id`
     * const identitiesWithProvider_idOnly = await prisma.identities.createManyAndReturn({
     *   select: { provider_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends identitiesCreateManyAndReturnArgs>(args?: SelectSubset<T, identitiesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Identities.
     * @param {identitiesDeleteArgs} args - Arguments to delete one Identities.
     * @example
     * // Delete one Identities
     * const Identities = await prisma.identities.delete({
     *   where: {
     *     // ... filter to delete one Identities
     *   }
     * })
     * 
     */
    delete<T extends identitiesDeleteArgs>(args: SelectSubset<T, identitiesDeleteArgs<ExtArgs>>): Prisma__identitiesClient<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Identities.
     * @param {identitiesUpdateArgs} args - Arguments to update one Identities.
     * @example
     * // Update one Identities
     * const identities = await prisma.identities.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends identitiesUpdateArgs>(args: SelectSubset<T, identitiesUpdateArgs<ExtArgs>>): Prisma__identitiesClient<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Identities.
     * @param {identitiesDeleteManyArgs} args - Arguments to filter Identities to delete.
     * @example
     * // Delete a few Identities
     * const { count } = await prisma.identities.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends identitiesDeleteManyArgs>(args?: SelectSubset<T, identitiesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Identities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {identitiesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Identities
     * const identities = await prisma.identities.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends identitiesUpdateManyArgs>(args: SelectSubset<T, identitiesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Identities and returns the data updated in the database.
     * @param {identitiesUpdateManyAndReturnArgs} args - Arguments to update many Identities.
     * @example
     * // Update many Identities
     * const identities = await prisma.identities.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Identities and only return the `provider_id`
     * const identitiesWithProvider_idOnly = await prisma.identities.updateManyAndReturn({
     *   select: { provider_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends identitiesUpdateManyAndReturnArgs>(args: SelectSubset<T, identitiesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Identities.
     * @param {identitiesUpsertArgs} args - Arguments to update or create a Identities.
     * @example
     * // Update or create a Identities
     * const identities = await prisma.identities.upsert({
     *   create: {
     *     // ... data to create a Identities
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Identities we want to update
     *   }
     * })
     */
    upsert<T extends identitiesUpsertArgs>(args: SelectSubset<T, identitiesUpsertArgs<ExtArgs>>): Prisma__identitiesClient<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Identities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {identitiesCountArgs} args - Arguments to filter Identities to count.
     * @example
     * // Count the number of Identities
     * const count = await prisma.identities.count({
     *   where: {
     *     // ... the filter for the Identities we want to count
     *   }
     * })
    **/
    count<T extends identitiesCountArgs>(
      args?: Subset<T, identitiesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], IdentitiesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Identities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdentitiesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends IdentitiesAggregateArgs>(args: Subset<T, IdentitiesAggregateArgs>): Prisma.PrismaPromise<GetIdentitiesAggregateType<T>>

    /**
     * Group by Identities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {identitiesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends identitiesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: identitiesGroupByArgs['orderBy'] }
        : { orderBy?: identitiesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, identitiesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIdentitiesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the identities model
   */
  readonly fields: identitiesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for identities.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__identitiesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the identities model
   */
  interface identitiesFieldRefs {
    readonly provider_id: FieldRef<"identities", 'String'>
    readonly user_id: FieldRef<"identities", 'String'>
    readonly identity_data: FieldRef<"identities", 'Json'>
    readonly provider: FieldRef<"identities", 'String'>
    readonly last_sign_in_at: FieldRef<"identities", 'DateTime'>
    readonly created_at: FieldRef<"identities", 'DateTime'>
    readonly updated_at: FieldRef<"identities", 'DateTime'>
    readonly email: FieldRef<"identities", 'String'>
    readonly id: FieldRef<"identities", 'String'>
  }
    

  // Custom InputTypes
  /**
   * identities findUnique
   */
  export type identitiesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * Filter, which identities to fetch.
     */
    where: identitiesWhereUniqueInput
  }

  /**
   * identities findUniqueOrThrow
   */
  export type identitiesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * Filter, which identities to fetch.
     */
    where: identitiesWhereUniqueInput
  }

  /**
   * identities findFirst
   */
  export type identitiesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * Filter, which identities to fetch.
     */
    where?: identitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of identities to fetch.
     */
    orderBy?: identitiesOrderByWithRelationInput | identitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for identities.
     */
    cursor?: identitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` identities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` identities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of identities.
     */
    distinct?: IdentitiesScalarFieldEnum | IdentitiesScalarFieldEnum[]
  }

  /**
   * identities findFirstOrThrow
   */
  export type identitiesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * Filter, which identities to fetch.
     */
    where?: identitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of identities to fetch.
     */
    orderBy?: identitiesOrderByWithRelationInput | identitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for identities.
     */
    cursor?: identitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` identities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` identities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of identities.
     */
    distinct?: IdentitiesScalarFieldEnum | IdentitiesScalarFieldEnum[]
  }

  /**
   * identities findMany
   */
  export type identitiesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * Filter, which identities to fetch.
     */
    where?: identitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of identities to fetch.
     */
    orderBy?: identitiesOrderByWithRelationInput | identitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing identities.
     */
    cursor?: identitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` identities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` identities.
     */
    skip?: number
    distinct?: IdentitiesScalarFieldEnum | IdentitiesScalarFieldEnum[]
  }

  /**
   * identities create
   */
  export type identitiesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * The data needed to create a identities.
     */
    data: XOR<identitiesCreateInput, identitiesUncheckedCreateInput>
  }

  /**
   * identities createMany
   */
  export type identitiesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many identities.
     */
    data: identitiesCreateManyInput | identitiesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * identities createManyAndReturn
   */
  export type identitiesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * The data used to create many identities.
     */
    data: identitiesCreateManyInput | identitiesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * identities update
   */
  export type identitiesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * The data needed to update a identities.
     */
    data: XOR<identitiesUpdateInput, identitiesUncheckedUpdateInput>
    /**
     * Choose, which identities to update.
     */
    where: identitiesWhereUniqueInput
  }

  /**
   * identities updateMany
   */
  export type identitiesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update identities.
     */
    data: XOR<identitiesUpdateManyMutationInput, identitiesUncheckedUpdateManyInput>
    /**
     * Filter which identities to update
     */
    where?: identitiesWhereInput
    /**
     * Limit how many identities to update.
     */
    limit?: number
  }

  /**
   * identities updateManyAndReturn
   */
  export type identitiesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * The data used to update identities.
     */
    data: XOR<identitiesUpdateManyMutationInput, identitiesUncheckedUpdateManyInput>
    /**
     * Filter which identities to update
     */
    where?: identitiesWhereInput
    /**
     * Limit how many identities to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * identities upsert
   */
  export type identitiesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * The filter to search for the identities to update in case it exists.
     */
    where: identitiesWhereUniqueInput
    /**
     * In case the identities found by the `where` argument doesn't exist, create a new identities with this data.
     */
    create: XOR<identitiesCreateInput, identitiesUncheckedCreateInput>
    /**
     * In case the identities was found with the provided `where` argument, update it with this data.
     */
    update: XOR<identitiesUpdateInput, identitiesUncheckedUpdateInput>
  }

  /**
   * identities delete
   */
  export type identitiesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * Filter which identities to delete.
     */
    where: identitiesWhereUniqueInput
  }

  /**
   * identities deleteMany
   */
  export type identitiesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which identities to delete
     */
    where?: identitiesWhereInput
    /**
     * Limit how many identities to delete.
     */
    limit?: number
  }

  /**
   * identities without action
   */
  export type identitiesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesInclude<ExtArgs> | null
  }


  /**
   * Model instances
   */

  export type AggregateInstances = {
    _count: InstancesCountAggregateOutputType | null
    _min: InstancesMinAggregateOutputType | null
    _max: InstancesMaxAggregateOutputType | null
  }

  export type InstancesMinAggregateOutputType = {
    id: string | null
    uuid: string | null
    raw_base_config: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type InstancesMaxAggregateOutputType = {
    id: string | null
    uuid: string | null
    raw_base_config: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type InstancesCountAggregateOutputType = {
    id: number
    uuid: number
    raw_base_config: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type InstancesMinAggregateInputType = {
    id?: true
    uuid?: true
    raw_base_config?: true
    created_at?: true
    updated_at?: true
  }

  export type InstancesMaxAggregateInputType = {
    id?: true
    uuid?: true
    raw_base_config?: true
    created_at?: true
    updated_at?: true
  }

  export type InstancesCountAggregateInputType = {
    id?: true
    uuid?: true
    raw_base_config?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type InstancesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which instances to aggregate.
     */
    where?: instancesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of instances to fetch.
     */
    orderBy?: instancesOrderByWithRelationInput | instancesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: instancesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` instances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` instances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned instances
    **/
    _count?: true | InstancesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InstancesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InstancesMaxAggregateInputType
  }

  export type GetInstancesAggregateType<T extends InstancesAggregateArgs> = {
        [P in keyof T & keyof AggregateInstances]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInstances[P]>
      : GetScalarType<T[P], AggregateInstances[P]>
  }




  export type instancesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: instancesWhereInput
    orderBy?: instancesOrderByWithAggregationInput | instancesOrderByWithAggregationInput[]
    by: InstancesScalarFieldEnum[] | InstancesScalarFieldEnum
    having?: instancesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InstancesCountAggregateInputType | true
    _min?: InstancesMinAggregateInputType
    _max?: InstancesMaxAggregateInputType
  }

  export type InstancesGroupByOutputType = {
    id: string
    uuid: string | null
    raw_base_config: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: InstancesCountAggregateOutputType | null
    _min: InstancesMinAggregateOutputType | null
    _max: InstancesMaxAggregateOutputType | null
  }

  type GetInstancesGroupByPayload<T extends instancesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InstancesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InstancesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InstancesGroupByOutputType[P]>
            : GetScalarType<T[P], InstancesGroupByOutputType[P]>
        }
      >
    >


  export type instancesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    uuid?: boolean
    raw_base_config?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["instances"]>

  export type instancesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    uuid?: boolean
    raw_base_config?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["instances"]>

  export type instancesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    uuid?: boolean
    raw_base_config?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["instances"]>

  export type instancesSelectScalar = {
    id?: boolean
    uuid?: boolean
    raw_base_config?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type instancesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "uuid" | "raw_base_config" | "created_at" | "updated_at", ExtArgs["result"]["instances"]>

  export type $instancesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "instances"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      uuid: string | null
      raw_base_config: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["instances"]>
    composites: {}
  }

  type instancesGetPayload<S extends boolean | null | undefined | instancesDefaultArgs> = $Result.GetResult<Prisma.$instancesPayload, S>

  type instancesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<instancesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InstancesCountAggregateInputType | true
    }

  export interface instancesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['instances'], meta: { name: 'instances' } }
    /**
     * Find zero or one Instances that matches the filter.
     * @param {instancesFindUniqueArgs} args - Arguments to find a Instances
     * @example
     * // Get one Instances
     * const instances = await prisma.instances.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends instancesFindUniqueArgs>(args: SelectSubset<T, instancesFindUniqueArgs<ExtArgs>>): Prisma__instancesClient<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Instances that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {instancesFindUniqueOrThrowArgs} args - Arguments to find a Instances
     * @example
     * // Get one Instances
     * const instances = await prisma.instances.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends instancesFindUniqueOrThrowArgs>(args: SelectSubset<T, instancesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__instancesClient<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Instances that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {instancesFindFirstArgs} args - Arguments to find a Instances
     * @example
     * // Get one Instances
     * const instances = await prisma.instances.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends instancesFindFirstArgs>(args?: SelectSubset<T, instancesFindFirstArgs<ExtArgs>>): Prisma__instancesClient<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Instances that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {instancesFindFirstOrThrowArgs} args - Arguments to find a Instances
     * @example
     * // Get one Instances
     * const instances = await prisma.instances.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends instancesFindFirstOrThrowArgs>(args?: SelectSubset<T, instancesFindFirstOrThrowArgs<ExtArgs>>): Prisma__instancesClient<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Instances that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {instancesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Instances
     * const instances = await prisma.instances.findMany()
     * 
     * // Get first 10 Instances
     * const instances = await prisma.instances.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const instancesWithIdOnly = await prisma.instances.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends instancesFindManyArgs>(args?: SelectSubset<T, instancesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Instances.
     * @param {instancesCreateArgs} args - Arguments to create a Instances.
     * @example
     * // Create one Instances
     * const Instances = await prisma.instances.create({
     *   data: {
     *     // ... data to create a Instances
     *   }
     * })
     * 
     */
    create<T extends instancesCreateArgs>(args: SelectSubset<T, instancesCreateArgs<ExtArgs>>): Prisma__instancesClient<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Instances.
     * @param {instancesCreateManyArgs} args - Arguments to create many Instances.
     * @example
     * // Create many Instances
     * const instances = await prisma.instances.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends instancesCreateManyArgs>(args?: SelectSubset<T, instancesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Instances and returns the data saved in the database.
     * @param {instancesCreateManyAndReturnArgs} args - Arguments to create many Instances.
     * @example
     * // Create many Instances
     * const instances = await prisma.instances.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Instances and only return the `id`
     * const instancesWithIdOnly = await prisma.instances.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends instancesCreateManyAndReturnArgs>(args?: SelectSubset<T, instancesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Instances.
     * @param {instancesDeleteArgs} args - Arguments to delete one Instances.
     * @example
     * // Delete one Instances
     * const Instances = await prisma.instances.delete({
     *   where: {
     *     // ... filter to delete one Instances
     *   }
     * })
     * 
     */
    delete<T extends instancesDeleteArgs>(args: SelectSubset<T, instancesDeleteArgs<ExtArgs>>): Prisma__instancesClient<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Instances.
     * @param {instancesUpdateArgs} args - Arguments to update one Instances.
     * @example
     * // Update one Instances
     * const instances = await prisma.instances.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends instancesUpdateArgs>(args: SelectSubset<T, instancesUpdateArgs<ExtArgs>>): Prisma__instancesClient<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Instances.
     * @param {instancesDeleteManyArgs} args - Arguments to filter Instances to delete.
     * @example
     * // Delete a few Instances
     * const { count } = await prisma.instances.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends instancesDeleteManyArgs>(args?: SelectSubset<T, instancesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Instances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {instancesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Instances
     * const instances = await prisma.instances.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends instancesUpdateManyArgs>(args: SelectSubset<T, instancesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Instances and returns the data updated in the database.
     * @param {instancesUpdateManyAndReturnArgs} args - Arguments to update many Instances.
     * @example
     * // Update many Instances
     * const instances = await prisma.instances.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Instances and only return the `id`
     * const instancesWithIdOnly = await prisma.instances.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends instancesUpdateManyAndReturnArgs>(args: SelectSubset<T, instancesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Instances.
     * @param {instancesUpsertArgs} args - Arguments to update or create a Instances.
     * @example
     * // Update or create a Instances
     * const instances = await prisma.instances.upsert({
     *   create: {
     *     // ... data to create a Instances
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Instances we want to update
     *   }
     * })
     */
    upsert<T extends instancesUpsertArgs>(args: SelectSubset<T, instancesUpsertArgs<ExtArgs>>): Prisma__instancesClient<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Instances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {instancesCountArgs} args - Arguments to filter Instances to count.
     * @example
     * // Count the number of Instances
     * const count = await prisma.instances.count({
     *   where: {
     *     // ... the filter for the Instances we want to count
     *   }
     * })
    **/
    count<T extends instancesCountArgs>(
      args?: Subset<T, instancesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InstancesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Instances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InstancesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InstancesAggregateArgs>(args: Subset<T, InstancesAggregateArgs>): Prisma.PrismaPromise<GetInstancesAggregateType<T>>

    /**
     * Group by Instances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {instancesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends instancesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: instancesGroupByArgs['orderBy'] }
        : { orderBy?: instancesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, instancesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInstancesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the instances model
   */
  readonly fields: instancesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for instances.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__instancesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the instances model
   */
  interface instancesFieldRefs {
    readonly id: FieldRef<"instances", 'String'>
    readonly uuid: FieldRef<"instances", 'String'>
    readonly raw_base_config: FieldRef<"instances", 'String'>
    readonly created_at: FieldRef<"instances", 'DateTime'>
    readonly updated_at: FieldRef<"instances", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * instances findUnique
   */
  export type instancesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instances
     */
    omit?: instancesOmit<ExtArgs> | null
    /**
     * Filter, which instances to fetch.
     */
    where: instancesWhereUniqueInput
  }

  /**
   * instances findUniqueOrThrow
   */
  export type instancesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instances
     */
    omit?: instancesOmit<ExtArgs> | null
    /**
     * Filter, which instances to fetch.
     */
    where: instancesWhereUniqueInput
  }

  /**
   * instances findFirst
   */
  export type instancesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instances
     */
    omit?: instancesOmit<ExtArgs> | null
    /**
     * Filter, which instances to fetch.
     */
    where?: instancesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of instances to fetch.
     */
    orderBy?: instancesOrderByWithRelationInput | instancesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for instances.
     */
    cursor?: instancesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` instances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` instances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of instances.
     */
    distinct?: InstancesScalarFieldEnum | InstancesScalarFieldEnum[]
  }

  /**
   * instances findFirstOrThrow
   */
  export type instancesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instances
     */
    omit?: instancesOmit<ExtArgs> | null
    /**
     * Filter, which instances to fetch.
     */
    where?: instancesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of instances to fetch.
     */
    orderBy?: instancesOrderByWithRelationInput | instancesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for instances.
     */
    cursor?: instancesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` instances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` instances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of instances.
     */
    distinct?: InstancesScalarFieldEnum | InstancesScalarFieldEnum[]
  }

  /**
   * instances findMany
   */
  export type instancesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instances
     */
    omit?: instancesOmit<ExtArgs> | null
    /**
     * Filter, which instances to fetch.
     */
    where?: instancesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of instances to fetch.
     */
    orderBy?: instancesOrderByWithRelationInput | instancesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing instances.
     */
    cursor?: instancesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` instances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` instances.
     */
    skip?: number
    distinct?: InstancesScalarFieldEnum | InstancesScalarFieldEnum[]
  }

  /**
   * instances create
   */
  export type instancesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instances
     */
    omit?: instancesOmit<ExtArgs> | null
    /**
     * The data needed to create a instances.
     */
    data: XOR<instancesCreateInput, instancesUncheckedCreateInput>
  }

  /**
   * instances createMany
   */
  export type instancesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many instances.
     */
    data: instancesCreateManyInput | instancesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * instances createManyAndReturn
   */
  export type instancesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the instances
     */
    omit?: instancesOmit<ExtArgs> | null
    /**
     * The data used to create many instances.
     */
    data: instancesCreateManyInput | instancesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * instances update
   */
  export type instancesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instances
     */
    omit?: instancesOmit<ExtArgs> | null
    /**
     * The data needed to update a instances.
     */
    data: XOR<instancesUpdateInput, instancesUncheckedUpdateInput>
    /**
     * Choose, which instances to update.
     */
    where: instancesWhereUniqueInput
  }

  /**
   * instances updateMany
   */
  export type instancesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update instances.
     */
    data: XOR<instancesUpdateManyMutationInput, instancesUncheckedUpdateManyInput>
    /**
     * Filter which instances to update
     */
    where?: instancesWhereInput
    /**
     * Limit how many instances to update.
     */
    limit?: number
  }

  /**
   * instances updateManyAndReturn
   */
  export type instancesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the instances
     */
    omit?: instancesOmit<ExtArgs> | null
    /**
     * The data used to update instances.
     */
    data: XOR<instancesUpdateManyMutationInput, instancesUncheckedUpdateManyInput>
    /**
     * Filter which instances to update
     */
    where?: instancesWhereInput
    /**
     * Limit how many instances to update.
     */
    limit?: number
  }

  /**
   * instances upsert
   */
  export type instancesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instances
     */
    omit?: instancesOmit<ExtArgs> | null
    /**
     * The filter to search for the instances to update in case it exists.
     */
    where: instancesWhereUniqueInput
    /**
     * In case the instances found by the `where` argument doesn't exist, create a new instances with this data.
     */
    create: XOR<instancesCreateInput, instancesUncheckedCreateInput>
    /**
     * In case the instances was found with the provided `where` argument, update it with this data.
     */
    update: XOR<instancesUpdateInput, instancesUncheckedUpdateInput>
  }

  /**
   * instances delete
   */
  export type instancesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instances
     */
    omit?: instancesOmit<ExtArgs> | null
    /**
     * Filter which instances to delete.
     */
    where: instancesWhereUniqueInput
  }

  /**
   * instances deleteMany
   */
  export type instancesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which instances to delete
     */
    where?: instancesWhereInput
    /**
     * Limit how many instances to delete.
     */
    limit?: number
  }

  /**
   * instances without action
   */
  export type instancesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instances
     */
    omit?: instancesOmit<ExtArgs> | null
  }


  /**
   * Model mfa_amr_claims
   */

  export type AggregateMfa_amr_claims = {
    _count: Mfa_amr_claimsCountAggregateOutputType | null
    _min: Mfa_amr_claimsMinAggregateOutputType | null
    _max: Mfa_amr_claimsMaxAggregateOutputType | null
  }

  export type Mfa_amr_claimsMinAggregateOutputType = {
    session_id: string | null
    created_at: Date | null
    updated_at: Date | null
    authentication_method: string | null
    id: string | null
  }

  export type Mfa_amr_claimsMaxAggregateOutputType = {
    session_id: string | null
    created_at: Date | null
    updated_at: Date | null
    authentication_method: string | null
    id: string | null
  }

  export type Mfa_amr_claimsCountAggregateOutputType = {
    session_id: number
    created_at: number
    updated_at: number
    authentication_method: number
    id: number
    _all: number
  }


  export type Mfa_amr_claimsMinAggregateInputType = {
    session_id?: true
    created_at?: true
    updated_at?: true
    authentication_method?: true
    id?: true
  }

  export type Mfa_amr_claimsMaxAggregateInputType = {
    session_id?: true
    created_at?: true
    updated_at?: true
    authentication_method?: true
    id?: true
  }

  export type Mfa_amr_claimsCountAggregateInputType = {
    session_id?: true
    created_at?: true
    updated_at?: true
    authentication_method?: true
    id?: true
    _all?: true
  }

  export type Mfa_amr_claimsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mfa_amr_claims to aggregate.
     */
    where?: mfa_amr_claimsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_amr_claims to fetch.
     */
    orderBy?: mfa_amr_claimsOrderByWithRelationInput | mfa_amr_claimsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: mfa_amr_claimsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_amr_claims from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_amr_claims.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned mfa_amr_claims
    **/
    _count?: true | Mfa_amr_claimsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Mfa_amr_claimsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Mfa_amr_claimsMaxAggregateInputType
  }

  export type GetMfa_amr_claimsAggregateType<T extends Mfa_amr_claimsAggregateArgs> = {
        [P in keyof T & keyof AggregateMfa_amr_claims]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMfa_amr_claims[P]>
      : GetScalarType<T[P], AggregateMfa_amr_claims[P]>
  }




  export type mfa_amr_claimsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mfa_amr_claimsWhereInput
    orderBy?: mfa_amr_claimsOrderByWithAggregationInput | mfa_amr_claimsOrderByWithAggregationInput[]
    by: Mfa_amr_claimsScalarFieldEnum[] | Mfa_amr_claimsScalarFieldEnum
    having?: mfa_amr_claimsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Mfa_amr_claimsCountAggregateInputType | true
    _min?: Mfa_amr_claimsMinAggregateInputType
    _max?: Mfa_amr_claimsMaxAggregateInputType
  }

  export type Mfa_amr_claimsGroupByOutputType = {
    session_id: string
    created_at: Date
    updated_at: Date
    authentication_method: string
    id: string
    _count: Mfa_amr_claimsCountAggregateOutputType | null
    _min: Mfa_amr_claimsMinAggregateOutputType | null
    _max: Mfa_amr_claimsMaxAggregateOutputType | null
  }

  type GetMfa_amr_claimsGroupByPayload<T extends mfa_amr_claimsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Mfa_amr_claimsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Mfa_amr_claimsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Mfa_amr_claimsGroupByOutputType[P]>
            : GetScalarType<T[P], Mfa_amr_claimsGroupByOutputType[P]>
        }
      >
    >


  export type mfa_amr_claimsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    session_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    authentication_method?: boolean
    id?: boolean
    sessions?: boolean | sessionsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mfa_amr_claims"]>

  export type mfa_amr_claimsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    session_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    authentication_method?: boolean
    id?: boolean
    sessions?: boolean | sessionsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mfa_amr_claims"]>

  export type mfa_amr_claimsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    session_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    authentication_method?: boolean
    id?: boolean
    sessions?: boolean | sessionsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mfa_amr_claims"]>

  export type mfa_amr_claimsSelectScalar = {
    session_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    authentication_method?: boolean
    id?: boolean
  }

  export type mfa_amr_claimsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"session_id" | "created_at" | "updated_at" | "authentication_method" | "id", ExtArgs["result"]["mfa_amr_claims"]>
  export type mfa_amr_claimsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sessions?: boolean | sessionsDefaultArgs<ExtArgs>
  }
  export type mfa_amr_claimsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sessions?: boolean | sessionsDefaultArgs<ExtArgs>
  }
  export type mfa_amr_claimsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sessions?: boolean | sessionsDefaultArgs<ExtArgs>
  }

  export type $mfa_amr_claimsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "mfa_amr_claims"
    objects: {
      sessions: Prisma.$sessionsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      session_id: string
      created_at: Date
      updated_at: Date
      authentication_method: string
      id: string
    }, ExtArgs["result"]["mfa_amr_claims"]>
    composites: {}
  }

  type mfa_amr_claimsGetPayload<S extends boolean | null | undefined | mfa_amr_claimsDefaultArgs> = $Result.GetResult<Prisma.$mfa_amr_claimsPayload, S>

  type mfa_amr_claimsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<mfa_amr_claimsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Mfa_amr_claimsCountAggregateInputType | true
    }

  export interface mfa_amr_claimsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['mfa_amr_claims'], meta: { name: 'mfa_amr_claims' } }
    /**
     * Find zero or one Mfa_amr_claims that matches the filter.
     * @param {mfa_amr_claimsFindUniqueArgs} args - Arguments to find a Mfa_amr_claims
     * @example
     * // Get one Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends mfa_amr_claimsFindUniqueArgs>(args: SelectSubset<T, mfa_amr_claimsFindUniqueArgs<ExtArgs>>): Prisma__mfa_amr_claimsClient<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Mfa_amr_claims that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {mfa_amr_claimsFindUniqueOrThrowArgs} args - Arguments to find a Mfa_amr_claims
     * @example
     * // Get one Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends mfa_amr_claimsFindUniqueOrThrowArgs>(args: SelectSubset<T, mfa_amr_claimsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__mfa_amr_claimsClient<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mfa_amr_claims that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_amr_claimsFindFirstArgs} args - Arguments to find a Mfa_amr_claims
     * @example
     * // Get one Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends mfa_amr_claimsFindFirstArgs>(args?: SelectSubset<T, mfa_amr_claimsFindFirstArgs<ExtArgs>>): Prisma__mfa_amr_claimsClient<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mfa_amr_claims that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_amr_claimsFindFirstOrThrowArgs} args - Arguments to find a Mfa_amr_claims
     * @example
     * // Get one Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends mfa_amr_claimsFindFirstOrThrowArgs>(args?: SelectSubset<T, mfa_amr_claimsFindFirstOrThrowArgs<ExtArgs>>): Prisma__mfa_amr_claimsClient<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Mfa_amr_claims that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_amr_claimsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.findMany()
     * 
     * // Get first 10 Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.findMany({ take: 10 })
     * 
     * // Only select the `session_id`
     * const mfa_amr_claimsWithSession_idOnly = await prisma.mfa_amr_claims.findMany({ select: { session_id: true } })
     * 
     */
    findMany<T extends mfa_amr_claimsFindManyArgs>(args?: SelectSubset<T, mfa_amr_claimsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Mfa_amr_claims.
     * @param {mfa_amr_claimsCreateArgs} args - Arguments to create a Mfa_amr_claims.
     * @example
     * // Create one Mfa_amr_claims
     * const Mfa_amr_claims = await prisma.mfa_amr_claims.create({
     *   data: {
     *     // ... data to create a Mfa_amr_claims
     *   }
     * })
     * 
     */
    create<T extends mfa_amr_claimsCreateArgs>(args: SelectSubset<T, mfa_amr_claimsCreateArgs<ExtArgs>>): Prisma__mfa_amr_claimsClient<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Mfa_amr_claims.
     * @param {mfa_amr_claimsCreateManyArgs} args - Arguments to create many Mfa_amr_claims.
     * @example
     * // Create many Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends mfa_amr_claimsCreateManyArgs>(args?: SelectSubset<T, mfa_amr_claimsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Mfa_amr_claims and returns the data saved in the database.
     * @param {mfa_amr_claimsCreateManyAndReturnArgs} args - Arguments to create many Mfa_amr_claims.
     * @example
     * // Create many Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Mfa_amr_claims and only return the `session_id`
     * const mfa_amr_claimsWithSession_idOnly = await prisma.mfa_amr_claims.createManyAndReturn({
     *   select: { session_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends mfa_amr_claimsCreateManyAndReturnArgs>(args?: SelectSubset<T, mfa_amr_claimsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Mfa_amr_claims.
     * @param {mfa_amr_claimsDeleteArgs} args - Arguments to delete one Mfa_amr_claims.
     * @example
     * // Delete one Mfa_amr_claims
     * const Mfa_amr_claims = await prisma.mfa_amr_claims.delete({
     *   where: {
     *     // ... filter to delete one Mfa_amr_claims
     *   }
     * })
     * 
     */
    delete<T extends mfa_amr_claimsDeleteArgs>(args: SelectSubset<T, mfa_amr_claimsDeleteArgs<ExtArgs>>): Prisma__mfa_amr_claimsClient<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Mfa_amr_claims.
     * @param {mfa_amr_claimsUpdateArgs} args - Arguments to update one Mfa_amr_claims.
     * @example
     * // Update one Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends mfa_amr_claimsUpdateArgs>(args: SelectSubset<T, mfa_amr_claimsUpdateArgs<ExtArgs>>): Prisma__mfa_amr_claimsClient<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Mfa_amr_claims.
     * @param {mfa_amr_claimsDeleteManyArgs} args - Arguments to filter Mfa_amr_claims to delete.
     * @example
     * // Delete a few Mfa_amr_claims
     * const { count } = await prisma.mfa_amr_claims.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends mfa_amr_claimsDeleteManyArgs>(args?: SelectSubset<T, mfa_amr_claimsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mfa_amr_claims.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_amr_claimsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends mfa_amr_claimsUpdateManyArgs>(args: SelectSubset<T, mfa_amr_claimsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mfa_amr_claims and returns the data updated in the database.
     * @param {mfa_amr_claimsUpdateManyAndReturnArgs} args - Arguments to update many Mfa_amr_claims.
     * @example
     * // Update many Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Mfa_amr_claims and only return the `session_id`
     * const mfa_amr_claimsWithSession_idOnly = await prisma.mfa_amr_claims.updateManyAndReturn({
     *   select: { session_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends mfa_amr_claimsUpdateManyAndReturnArgs>(args: SelectSubset<T, mfa_amr_claimsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Mfa_amr_claims.
     * @param {mfa_amr_claimsUpsertArgs} args - Arguments to update or create a Mfa_amr_claims.
     * @example
     * // Update or create a Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.upsert({
     *   create: {
     *     // ... data to create a Mfa_amr_claims
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mfa_amr_claims we want to update
     *   }
     * })
     */
    upsert<T extends mfa_amr_claimsUpsertArgs>(args: SelectSubset<T, mfa_amr_claimsUpsertArgs<ExtArgs>>): Prisma__mfa_amr_claimsClient<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Mfa_amr_claims.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_amr_claimsCountArgs} args - Arguments to filter Mfa_amr_claims to count.
     * @example
     * // Count the number of Mfa_amr_claims
     * const count = await prisma.mfa_amr_claims.count({
     *   where: {
     *     // ... the filter for the Mfa_amr_claims we want to count
     *   }
     * })
    **/
    count<T extends mfa_amr_claimsCountArgs>(
      args?: Subset<T, mfa_amr_claimsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Mfa_amr_claimsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mfa_amr_claims.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mfa_amr_claimsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Mfa_amr_claimsAggregateArgs>(args: Subset<T, Mfa_amr_claimsAggregateArgs>): Prisma.PrismaPromise<GetMfa_amr_claimsAggregateType<T>>

    /**
     * Group by Mfa_amr_claims.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_amr_claimsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends mfa_amr_claimsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: mfa_amr_claimsGroupByArgs['orderBy'] }
        : { orderBy?: mfa_amr_claimsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, mfa_amr_claimsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMfa_amr_claimsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the mfa_amr_claims model
   */
  readonly fields: mfa_amr_claimsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for mfa_amr_claims.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__mfa_amr_claimsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sessions<T extends sessionsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, sessionsDefaultArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the mfa_amr_claims model
   */
  interface mfa_amr_claimsFieldRefs {
    readonly session_id: FieldRef<"mfa_amr_claims", 'String'>
    readonly created_at: FieldRef<"mfa_amr_claims", 'DateTime'>
    readonly updated_at: FieldRef<"mfa_amr_claims", 'DateTime'>
    readonly authentication_method: FieldRef<"mfa_amr_claims", 'String'>
    readonly id: FieldRef<"mfa_amr_claims", 'String'>
  }
    

  // Custom InputTypes
  /**
   * mfa_amr_claims findUnique
   */
  export type mfa_amr_claimsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_amr_claims to fetch.
     */
    where: mfa_amr_claimsWhereUniqueInput
  }

  /**
   * mfa_amr_claims findUniqueOrThrow
   */
  export type mfa_amr_claimsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_amr_claims to fetch.
     */
    where: mfa_amr_claimsWhereUniqueInput
  }

  /**
   * mfa_amr_claims findFirst
   */
  export type mfa_amr_claimsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_amr_claims to fetch.
     */
    where?: mfa_amr_claimsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_amr_claims to fetch.
     */
    orderBy?: mfa_amr_claimsOrderByWithRelationInput | mfa_amr_claimsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mfa_amr_claims.
     */
    cursor?: mfa_amr_claimsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_amr_claims from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_amr_claims.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mfa_amr_claims.
     */
    distinct?: Mfa_amr_claimsScalarFieldEnum | Mfa_amr_claimsScalarFieldEnum[]
  }

  /**
   * mfa_amr_claims findFirstOrThrow
   */
  export type mfa_amr_claimsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_amr_claims to fetch.
     */
    where?: mfa_amr_claimsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_amr_claims to fetch.
     */
    orderBy?: mfa_amr_claimsOrderByWithRelationInput | mfa_amr_claimsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mfa_amr_claims.
     */
    cursor?: mfa_amr_claimsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_amr_claims from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_amr_claims.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mfa_amr_claims.
     */
    distinct?: Mfa_amr_claimsScalarFieldEnum | Mfa_amr_claimsScalarFieldEnum[]
  }

  /**
   * mfa_amr_claims findMany
   */
  export type mfa_amr_claimsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_amr_claims to fetch.
     */
    where?: mfa_amr_claimsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_amr_claims to fetch.
     */
    orderBy?: mfa_amr_claimsOrderByWithRelationInput | mfa_amr_claimsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing mfa_amr_claims.
     */
    cursor?: mfa_amr_claimsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_amr_claims from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_amr_claims.
     */
    skip?: number
    distinct?: Mfa_amr_claimsScalarFieldEnum | Mfa_amr_claimsScalarFieldEnum[]
  }

  /**
   * mfa_amr_claims create
   */
  export type mfa_amr_claimsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * The data needed to create a mfa_amr_claims.
     */
    data: XOR<mfa_amr_claimsCreateInput, mfa_amr_claimsUncheckedCreateInput>
  }

  /**
   * mfa_amr_claims createMany
   */
  export type mfa_amr_claimsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many mfa_amr_claims.
     */
    data: mfa_amr_claimsCreateManyInput | mfa_amr_claimsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * mfa_amr_claims createManyAndReturn
   */
  export type mfa_amr_claimsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * The data used to create many mfa_amr_claims.
     */
    data: mfa_amr_claimsCreateManyInput | mfa_amr_claimsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * mfa_amr_claims update
   */
  export type mfa_amr_claimsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * The data needed to update a mfa_amr_claims.
     */
    data: XOR<mfa_amr_claimsUpdateInput, mfa_amr_claimsUncheckedUpdateInput>
    /**
     * Choose, which mfa_amr_claims to update.
     */
    where: mfa_amr_claimsWhereUniqueInput
  }

  /**
   * mfa_amr_claims updateMany
   */
  export type mfa_amr_claimsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update mfa_amr_claims.
     */
    data: XOR<mfa_amr_claimsUpdateManyMutationInput, mfa_amr_claimsUncheckedUpdateManyInput>
    /**
     * Filter which mfa_amr_claims to update
     */
    where?: mfa_amr_claimsWhereInput
    /**
     * Limit how many mfa_amr_claims to update.
     */
    limit?: number
  }

  /**
   * mfa_amr_claims updateManyAndReturn
   */
  export type mfa_amr_claimsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * The data used to update mfa_amr_claims.
     */
    data: XOR<mfa_amr_claimsUpdateManyMutationInput, mfa_amr_claimsUncheckedUpdateManyInput>
    /**
     * Filter which mfa_amr_claims to update
     */
    where?: mfa_amr_claimsWhereInput
    /**
     * Limit how many mfa_amr_claims to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * mfa_amr_claims upsert
   */
  export type mfa_amr_claimsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * The filter to search for the mfa_amr_claims to update in case it exists.
     */
    where: mfa_amr_claimsWhereUniqueInput
    /**
     * In case the mfa_amr_claims found by the `where` argument doesn't exist, create a new mfa_amr_claims with this data.
     */
    create: XOR<mfa_amr_claimsCreateInput, mfa_amr_claimsUncheckedCreateInput>
    /**
     * In case the mfa_amr_claims was found with the provided `where` argument, update it with this data.
     */
    update: XOR<mfa_amr_claimsUpdateInput, mfa_amr_claimsUncheckedUpdateInput>
  }

  /**
   * mfa_amr_claims delete
   */
  export type mfa_amr_claimsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * Filter which mfa_amr_claims to delete.
     */
    where: mfa_amr_claimsWhereUniqueInput
  }

  /**
   * mfa_amr_claims deleteMany
   */
  export type mfa_amr_claimsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mfa_amr_claims to delete
     */
    where?: mfa_amr_claimsWhereInput
    /**
     * Limit how many mfa_amr_claims to delete.
     */
    limit?: number
  }

  /**
   * mfa_amr_claims without action
   */
  export type mfa_amr_claimsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
  }


  /**
   * Model mfa_challenges
   */

  export type AggregateMfa_challenges = {
    _count: Mfa_challengesCountAggregateOutputType | null
    _min: Mfa_challengesMinAggregateOutputType | null
    _max: Mfa_challengesMaxAggregateOutputType | null
  }

  export type Mfa_challengesMinAggregateOutputType = {
    id: string | null
    factor_id: string | null
    created_at: Date | null
    verified_at: Date | null
    ip_address: string | null
    otp_code: string | null
  }

  export type Mfa_challengesMaxAggregateOutputType = {
    id: string | null
    factor_id: string | null
    created_at: Date | null
    verified_at: Date | null
    ip_address: string | null
    otp_code: string | null
  }

  export type Mfa_challengesCountAggregateOutputType = {
    id: number
    factor_id: number
    created_at: number
    verified_at: number
    ip_address: number
    otp_code: number
    web_authn_session_data: number
    _all: number
  }


  export type Mfa_challengesMinAggregateInputType = {
    id?: true
    factor_id?: true
    created_at?: true
    verified_at?: true
    ip_address?: true
    otp_code?: true
  }

  export type Mfa_challengesMaxAggregateInputType = {
    id?: true
    factor_id?: true
    created_at?: true
    verified_at?: true
    ip_address?: true
    otp_code?: true
  }

  export type Mfa_challengesCountAggregateInputType = {
    id?: true
    factor_id?: true
    created_at?: true
    verified_at?: true
    ip_address?: true
    otp_code?: true
    web_authn_session_data?: true
    _all?: true
  }

  export type Mfa_challengesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mfa_challenges to aggregate.
     */
    where?: mfa_challengesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_challenges to fetch.
     */
    orderBy?: mfa_challengesOrderByWithRelationInput | mfa_challengesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: mfa_challengesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_challenges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_challenges.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned mfa_challenges
    **/
    _count?: true | Mfa_challengesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Mfa_challengesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Mfa_challengesMaxAggregateInputType
  }

  export type GetMfa_challengesAggregateType<T extends Mfa_challengesAggregateArgs> = {
        [P in keyof T & keyof AggregateMfa_challenges]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMfa_challenges[P]>
      : GetScalarType<T[P], AggregateMfa_challenges[P]>
  }




  export type mfa_challengesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mfa_challengesWhereInput
    orderBy?: mfa_challengesOrderByWithAggregationInput | mfa_challengesOrderByWithAggregationInput[]
    by: Mfa_challengesScalarFieldEnum[] | Mfa_challengesScalarFieldEnum
    having?: mfa_challengesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Mfa_challengesCountAggregateInputType | true
    _min?: Mfa_challengesMinAggregateInputType
    _max?: Mfa_challengesMaxAggregateInputType
  }

  export type Mfa_challengesGroupByOutputType = {
    id: string
    factor_id: string
    created_at: Date
    verified_at: Date | null
    ip_address: string
    otp_code: string | null
    web_authn_session_data: JsonValue | null
    _count: Mfa_challengesCountAggregateOutputType | null
    _min: Mfa_challengesMinAggregateOutputType | null
    _max: Mfa_challengesMaxAggregateOutputType | null
  }

  type GetMfa_challengesGroupByPayload<T extends mfa_challengesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Mfa_challengesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Mfa_challengesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Mfa_challengesGroupByOutputType[P]>
            : GetScalarType<T[P], Mfa_challengesGroupByOutputType[P]>
        }
      >
    >


  export type mfa_challengesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    factor_id?: boolean
    created_at?: boolean
    verified_at?: boolean
    ip_address?: boolean
    otp_code?: boolean
    web_authn_session_data?: boolean
    mfa_factors?: boolean | mfa_factorsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mfa_challenges"]>

  export type mfa_challengesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    factor_id?: boolean
    created_at?: boolean
    verified_at?: boolean
    ip_address?: boolean
    otp_code?: boolean
    web_authn_session_data?: boolean
    mfa_factors?: boolean | mfa_factorsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mfa_challenges"]>

  export type mfa_challengesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    factor_id?: boolean
    created_at?: boolean
    verified_at?: boolean
    ip_address?: boolean
    otp_code?: boolean
    web_authn_session_data?: boolean
    mfa_factors?: boolean | mfa_factorsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mfa_challenges"]>

  export type mfa_challengesSelectScalar = {
    id?: boolean
    factor_id?: boolean
    created_at?: boolean
    verified_at?: boolean
    ip_address?: boolean
    otp_code?: boolean
    web_authn_session_data?: boolean
  }

  export type mfa_challengesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "factor_id" | "created_at" | "verified_at" | "ip_address" | "otp_code" | "web_authn_session_data", ExtArgs["result"]["mfa_challenges"]>
  export type mfa_challengesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mfa_factors?: boolean | mfa_factorsDefaultArgs<ExtArgs>
  }
  export type mfa_challengesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mfa_factors?: boolean | mfa_factorsDefaultArgs<ExtArgs>
  }
  export type mfa_challengesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mfa_factors?: boolean | mfa_factorsDefaultArgs<ExtArgs>
  }

  export type $mfa_challengesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "mfa_challenges"
    objects: {
      mfa_factors: Prisma.$mfa_factorsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      factor_id: string
      created_at: Date
      verified_at: Date | null
      ip_address: string
      otp_code: string | null
      web_authn_session_data: Prisma.JsonValue | null
    }, ExtArgs["result"]["mfa_challenges"]>
    composites: {}
  }

  type mfa_challengesGetPayload<S extends boolean | null | undefined | mfa_challengesDefaultArgs> = $Result.GetResult<Prisma.$mfa_challengesPayload, S>

  type mfa_challengesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<mfa_challengesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Mfa_challengesCountAggregateInputType | true
    }

  export interface mfa_challengesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['mfa_challenges'], meta: { name: 'mfa_challenges' } }
    /**
     * Find zero or one Mfa_challenges that matches the filter.
     * @param {mfa_challengesFindUniqueArgs} args - Arguments to find a Mfa_challenges
     * @example
     * // Get one Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends mfa_challengesFindUniqueArgs>(args: SelectSubset<T, mfa_challengesFindUniqueArgs<ExtArgs>>): Prisma__mfa_challengesClient<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Mfa_challenges that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {mfa_challengesFindUniqueOrThrowArgs} args - Arguments to find a Mfa_challenges
     * @example
     * // Get one Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends mfa_challengesFindUniqueOrThrowArgs>(args: SelectSubset<T, mfa_challengesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__mfa_challengesClient<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mfa_challenges that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_challengesFindFirstArgs} args - Arguments to find a Mfa_challenges
     * @example
     * // Get one Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends mfa_challengesFindFirstArgs>(args?: SelectSubset<T, mfa_challengesFindFirstArgs<ExtArgs>>): Prisma__mfa_challengesClient<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mfa_challenges that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_challengesFindFirstOrThrowArgs} args - Arguments to find a Mfa_challenges
     * @example
     * // Get one Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends mfa_challengesFindFirstOrThrowArgs>(args?: SelectSubset<T, mfa_challengesFindFirstOrThrowArgs<ExtArgs>>): Prisma__mfa_challengesClient<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Mfa_challenges that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_challengesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.findMany()
     * 
     * // Get first 10 Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mfa_challengesWithIdOnly = await prisma.mfa_challenges.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends mfa_challengesFindManyArgs>(args?: SelectSubset<T, mfa_challengesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Mfa_challenges.
     * @param {mfa_challengesCreateArgs} args - Arguments to create a Mfa_challenges.
     * @example
     * // Create one Mfa_challenges
     * const Mfa_challenges = await prisma.mfa_challenges.create({
     *   data: {
     *     // ... data to create a Mfa_challenges
     *   }
     * })
     * 
     */
    create<T extends mfa_challengesCreateArgs>(args: SelectSubset<T, mfa_challengesCreateArgs<ExtArgs>>): Prisma__mfa_challengesClient<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Mfa_challenges.
     * @param {mfa_challengesCreateManyArgs} args - Arguments to create many Mfa_challenges.
     * @example
     * // Create many Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends mfa_challengesCreateManyArgs>(args?: SelectSubset<T, mfa_challengesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Mfa_challenges and returns the data saved in the database.
     * @param {mfa_challengesCreateManyAndReturnArgs} args - Arguments to create many Mfa_challenges.
     * @example
     * // Create many Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Mfa_challenges and only return the `id`
     * const mfa_challengesWithIdOnly = await prisma.mfa_challenges.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends mfa_challengesCreateManyAndReturnArgs>(args?: SelectSubset<T, mfa_challengesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Mfa_challenges.
     * @param {mfa_challengesDeleteArgs} args - Arguments to delete one Mfa_challenges.
     * @example
     * // Delete one Mfa_challenges
     * const Mfa_challenges = await prisma.mfa_challenges.delete({
     *   where: {
     *     // ... filter to delete one Mfa_challenges
     *   }
     * })
     * 
     */
    delete<T extends mfa_challengesDeleteArgs>(args: SelectSubset<T, mfa_challengesDeleteArgs<ExtArgs>>): Prisma__mfa_challengesClient<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Mfa_challenges.
     * @param {mfa_challengesUpdateArgs} args - Arguments to update one Mfa_challenges.
     * @example
     * // Update one Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends mfa_challengesUpdateArgs>(args: SelectSubset<T, mfa_challengesUpdateArgs<ExtArgs>>): Prisma__mfa_challengesClient<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Mfa_challenges.
     * @param {mfa_challengesDeleteManyArgs} args - Arguments to filter Mfa_challenges to delete.
     * @example
     * // Delete a few Mfa_challenges
     * const { count } = await prisma.mfa_challenges.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends mfa_challengesDeleteManyArgs>(args?: SelectSubset<T, mfa_challengesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mfa_challenges.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_challengesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends mfa_challengesUpdateManyArgs>(args: SelectSubset<T, mfa_challengesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mfa_challenges and returns the data updated in the database.
     * @param {mfa_challengesUpdateManyAndReturnArgs} args - Arguments to update many Mfa_challenges.
     * @example
     * // Update many Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Mfa_challenges and only return the `id`
     * const mfa_challengesWithIdOnly = await prisma.mfa_challenges.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends mfa_challengesUpdateManyAndReturnArgs>(args: SelectSubset<T, mfa_challengesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Mfa_challenges.
     * @param {mfa_challengesUpsertArgs} args - Arguments to update or create a Mfa_challenges.
     * @example
     * // Update or create a Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.upsert({
     *   create: {
     *     // ... data to create a Mfa_challenges
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mfa_challenges we want to update
     *   }
     * })
     */
    upsert<T extends mfa_challengesUpsertArgs>(args: SelectSubset<T, mfa_challengesUpsertArgs<ExtArgs>>): Prisma__mfa_challengesClient<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Mfa_challenges.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_challengesCountArgs} args - Arguments to filter Mfa_challenges to count.
     * @example
     * // Count the number of Mfa_challenges
     * const count = await prisma.mfa_challenges.count({
     *   where: {
     *     // ... the filter for the Mfa_challenges we want to count
     *   }
     * })
    **/
    count<T extends mfa_challengesCountArgs>(
      args?: Subset<T, mfa_challengesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Mfa_challengesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mfa_challenges.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mfa_challengesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Mfa_challengesAggregateArgs>(args: Subset<T, Mfa_challengesAggregateArgs>): Prisma.PrismaPromise<GetMfa_challengesAggregateType<T>>

    /**
     * Group by Mfa_challenges.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_challengesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends mfa_challengesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: mfa_challengesGroupByArgs['orderBy'] }
        : { orderBy?: mfa_challengesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, mfa_challengesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMfa_challengesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the mfa_challenges model
   */
  readonly fields: mfa_challengesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for mfa_challenges.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__mfa_challengesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    mfa_factors<T extends mfa_factorsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, mfa_factorsDefaultArgs<ExtArgs>>): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the mfa_challenges model
   */
  interface mfa_challengesFieldRefs {
    readonly id: FieldRef<"mfa_challenges", 'String'>
    readonly factor_id: FieldRef<"mfa_challenges", 'String'>
    readonly created_at: FieldRef<"mfa_challenges", 'DateTime'>
    readonly verified_at: FieldRef<"mfa_challenges", 'DateTime'>
    readonly ip_address: FieldRef<"mfa_challenges", 'String'>
    readonly otp_code: FieldRef<"mfa_challenges", 'String'>
    readonly web_authn_session_data: FieldRef<"mfa_challenges", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * mfa_challenges findUnique
   */
  export type mfa_challengesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * Filter, which mfa_challenges to fetch.
     */
    where: mfa_challengesWhereUniqueInput
  }

  /**
   * mfa_challenges findUniqueOrThrow
   */
  export type mfa_challengesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * Filter, which mfa_challenges to fetch.
     */
    where: mfa_challengesWhereUniqueInput
  }

  /**
   * mfa_challenges findFirst
   */
  export type mfa_challengesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * Filter, which mfa_challenges to fetch.
     */
    where?: mfa_challengesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_challenges to fetch.
     */
    orderBy?: mfa_challengesOrderByWithRelationInput | mfa_challengesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mfa_challenges.
     */
    cursor?: mfa_challengesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_challenges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_challenges.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mfa_challenges.
     */
    distinct?: Mfa_challengesScalarFieldEnum | Mfa_challengesScalarFieldEnum[]
  }

  /**
   * mfa_challenges findFirstOrThrow
   */
  export type mfa_challengesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * Filter, which mfa_challenges to fetch.
     */
    where?: mfa_challengesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_challenges to fetch.
     */
    orderBy?: mfa_challengesOrderByWithRelationInput | mfa_challengesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mfa_challenges.
     */
    cursor?: mfa_challengesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_challenges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_challenges.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mfa_challenges.
     */
    distinct?: Mfa_challengesScalarFieldEnum | Mfa_challengesScalarFieldEnum[]
  }

  /**
   * mfa_challenges findMany
   */
  export type mfa_challengesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * Filter, which mfa_challenges to fetch.
     */
    where?: mfa_challengesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_challenges to fetch.
     */
    orderBy?: mfa_challengesOrderByWithRelationInput | mfa_challengesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing mfa_challenges.
     */
    cursor?: mfa_challengesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_challenges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_challenges.
     */
    skip?: number
    distinct?: Mfa_challengesScalarFieldEnum | Mfa_challengesScalarFieldEnum[]
  }

  /**
   * mfa_challenges create
   */
  export type mfa_challengesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * The data needed to create a mfa_challenges.
     */
    data: XOR<mfa_challengesCreateInput, mfa_challengesUncheckedCreateInput>
  }

  /**
   * mfa_challenges createMany
   */
  export type mfa_challengesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many mfa_challenges.
     */
    data: mfa_challengesCreateManyInput | mfa_challengesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * mfa_challenges createManyAndReturn
   */
  export type mfa_challengesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * The data used to create many mfa_challenges.
     */
    data: mfa_challengesCreateManyInput | mfa_challengesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * mfa_challenges update
   */
  export type mfa_challengesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * The data needed to update a mfa_challenges.
     */
    data: XOR<mfa_challengesUpdateInput, mfa_challengesUncheckedUpdateInput>
    /**
     * Choose, which mfa_challenges to update.
     */
    where: mfa_challengesWhereUniqueInput
  }

  /**
   * mfa_challenges updateMany
   */
  export type mfa_challengesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update mfa_challenges.
     */
    data: XOR<mfa_challengesUpdateManyMutationInput, mfa_challengesUncheckedUpdateManyInput>
    /**
     * Filter which mfa_challenges to update
     */
    where?: mfa_challengesWhereInput
    /**
     * Limit how many mfa_challenges to update.
     */
    limit?: number
  }

  /**
   * mfa_challenges updateManyAndReturn
   */
  export type mfa_challengesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * The data used to update mfa_challenges.
     */
    data: XOR<mfa_challengesUpdateManyMutationInput, mfa_challengesUncheckedUpdateManyInput>
    /**
     * Filter which mfa_challenges to update
     */
    where?: mfa_challengesWhereInput
    /**
     * Limit how many mfa_challenges to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * mfa_challenges upsert
   */
  export type mfa_challengesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * The filter to search for the mfa_challenges to update in case it exists.
     */
    where: mfa_challengesWhereUniqueInput
    /**
     * In case the mfa_challenges found by the `where` argument doesn't exist, create a new mfa_challenges with this data.
     */
    create: XOR<mfa_challengesCreateInput, mfa_challengesUncheckedCreateInput>
    /**
     * In case the mfa_challenges was found with the provided `where` argument, update it with this data.
     */
    update: XOR<mfa_challengesUpdateInput, mfa_challengesUncheckedUpdateInput>
  }

  /**
   * mfa_challenges delete
   */
  export type mfa_challengesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * Filter which mfa_challenges to delete.
     */
    where: mfa_challengesWhereUniqueInput
  }

  /**
   * mfa_challenges deleteMany
   */
  export type mfa_challengesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mfa_challenges to delete
     */
    where?: mfa_challengesWhereInput
    /**
     * Limit how many mfa_challenges to delete.
     */
    limit?: number
  }

  /**
   * mfa_challenges without action
   */
  export type mfa_challengesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesInclude<ExtArgs> | null
  }


  /**
   * Model mfa_factors
   */

  export type AggregateMfa_factors = {
    _count: Mfa_factorsCountAggregateOutputType | null
    _min: Mfa_factorsMinAggregateOutputType | null
    _max: Mfa_factorsMaxAggregateOutputType | null
  }

  export type Mfa_factorsMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    friendly_name: string | null
    factor_type: $Enums.factor_type | null
    status: $Enums.factor_status | null
    created_at: Date | null
    updated_at: Date | null
    secret: string | null
    phone: string | null
    last_challenged_at: Date | null
    web_authn_aaguid: string | null
  }

  export type Mfa_factorsMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    friendly_name: string | null
    factor_type: $Enums.factor_type | null
    status: $Enums.factor_status | null
    created_at: Date | null
    updated_at: Date | null
    secret: string | null
    phone: string | null
    last_challenged_at: Date | null
    web_authn_aaguid: string | null
  }

  export type Mfa_factorsCountAggregateOutputType = {
    id: number
    user_id: number
    friendly_name: number
    factor_type: number
    status: number
    created_at: number
    updated_at: number
    secret: number
    phone: number
    last_challenged_at: number
    web_authn_credential: number
    web_authn_aaguid: number
    _all: number
  }


  export type Mfa_factorsMinAggregateInputType = {
    id?: true
    user_id?: true
    friendly_name?: true
    factor_type?: true
    status?: true
    created_at?: true
    updated_at?: true
    secret?: true
    phone?: true
    last_challenged_at?: true
    web_authn_aaguid?: true
  }

  export type Mfa_factorsMaxAggregateInputType = {
    id?: true
    user_id?: true
    friendly_name?: true
    factor_type?: true
    status?: true
    created_at?: true
    updated_at?: true
    secret?: true
    phone?: true
    last_challenged_at?: true
    web_authn_aaguid?: true
  }

  export type Mfa_factorsCountAggregateInputType = {
    id?: true
    user_id?: true
    friendly_name?: true
    factor_type?: true
    status?: true
    created_at?: true
    updated_at?: true
    secret?: true
    phone?: true
    last_challenged_at?: true
    web_authn_credential?: true
    web_authn_aaguid?: true
    _all?: true
  }

  export type Mfa_factorsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mfa_factors to aggregate.
     */
    where?: mfa_factorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_factors to fetch.
     */
    orderBy?: mfa_factorsOrderByWithRelationInput | mfa_factorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: mfa_factorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_factors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_factors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned mfa_factors
    **/
    _count?: true | Mfa_factorsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Mfa_factorsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Mfa_factorsMaxAggregateInputType
  }

  export type GetMfa_factorsAggregateType<T extends Mfa_factorsAggregateArgs> = {
        [P in keyof T & keyof AggregateMfa_factors]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMfa_factors[P]>
      : GetScalarType<T[P], AggregateMfa_factors[P]>
  }




  export type mfa_factorsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mfa_factorsWhereInput
    orderBy?: mfa_factorsOrderByWithAggregationInput | mfa_factorsOrderByWithAggregationInput[]
    by: Mfa_factorsScalarFieldEnum[] | Mfa_factorsScalarFieldEnum
    having?: mfa_factorsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Mfa_factorsCountAggregateInputType | true
    _min?: Mfa_factorsMinAggregateInputType
    _max?: Mfa_factorsMaxAggregateInputType
  }

  export type Mfa_factorsGroupByOutputType = {
    id: string
    user_id: string
    friendly_name: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date
    updated_at: Date
    secret: string | null
    phone: string | null
    last_challenged_at: Date | null
    web_authn_credential: JsonValue | null
    web_authn_aaguid: string | null
    _count: Mfa_factorsCountAggregateOutputType | null
    _min: Mfa_factorsMinAggregateOutputType | null
    _max: Mfa_factorsMaxAggregateOutputType | null
  }

  type GetMfa_factorsGroupByPayload<T extends mfa_factorsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Mfa_factorsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Mfa_factorsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Mfa_factorsGroupByOutputType[P]>
            : GetScalarType<T[P], Mfa_factorsGroupByOutputType[P]>
        }
      >
    >


  export type mfa_factorsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    friendly_name?: boolean
    factor_type?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    secret?: boolean
    phone?: boolean
    last_challenged_at?: boolean
    web_authn_credential?: boolean
    web_authn_aaguid?: boolean
    mfa_challenges?: boolean | mfa_factors$mfa_challengesArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | Mfa_factorsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mfa_factors"]>

  export type mfa_factorsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    friendly_name?: boolean
    factor_type?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    secret?: boolean
    phone?: boolean
    last_challenged_at?: boolean
    web_authn_credential?: boolean
    web_authn_aaguid?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mfa_factors"]>

  export type mfa_factorsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    friendly_name?: boolean
    factor_type?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    secret?: boolean
    phone?: boolean
    last_challenged_at?: boolean
    web_authn_credential?: boolean
    web_authn_aaguid?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mfa_factors"]>

  export type mfa_factorsSelectScalar = {
    id?: boolean
    user_id?: boolean
    friendly_name?: boolean
    factor_type?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    secret?: boolean
    phone?: boolean
    last_challenged_at?: boolean
    web_authn_credential?: boolean
    web_authn_aaguid?: boolean
  }

  export type mfa_factorsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "friendly_name" | "factor_type" | "status" | "created_at" | "updated_at" | "secret" | "phone" | "last_challenged_at" | "web_authn_credential" | "web_authn_aaguid", ExtArgs["result"]["mfa_factors"]>
  export type mfa_factorsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mfa_challenges?: boolean | mfa_factors$mfa_challengesArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | Mfa_factorsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type mfa_factorsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type mfa_factorsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $mfa_factorsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "mfa_factors"
    objects: {
      mfa_challenges: Prisma.$mfa_challengesPayload<ExtArgs>[]
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      friendly_name: string | null
      factor_type: $Enums.factor_type
      status: $Enums.factor_status
      created_at: Date
      updated_at: Date
      secret: string | null
      phone: string | null
      last_challenged_at: Date | null
      web_authn_credential: Prisma.JsonValue | null
      web_authn_aaguid: string | null
    }, ExtArgs["result"]["mfa_factors"]>
    composites: {}
  }

  type mfa_factorsGetPayload<S extends boolean | null | undefined | mfa_factorsDefaultArgs> = $Result.GetResult<Prisma.$mfa_factorsPayload, S>

  type mfa_factorsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<mfa_factorsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Mfa_factorsCountAggregateInputType | true
    }

  export interface mfa_factorsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['mfa_factors'], meta: { name: 'mfa_factors' } }
    /**
     * Find zero or one Mfa_factors that matches the filter.
     * @param {mfa_factorsFindUniqueArgs} args - Arguments to find a Mfa_factors
     * @example
     * // Get one Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends mfa_factorsFindUniqueArgs>(args: SelectSubset<T, mfa_factorsFindUniqueArgs<ExtArgs>>): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Mfa_factors that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {mfa_factorsFindUniqueOrThrowArgs} args - Arguments to find a Mfa_factors
     * @example
     * // Get one Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends mfa_factorsFindUniqueOrThrowArgs>(args: SelectSubset<T, mfa_factorsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mfa_factors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_factorsFindFirstArgs} args - Arguments to find a Mfa_factors
     * @example
     * // Get one Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends mfa_factorsFindFirstArgs>(args?: SelectSubset<T, mfa_factorsFindFirstArgs<ExtArgs>>): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mfa_factors that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_factorsFindFirstOrThrowArgs} args - Arguments to find a Mfa_factors
     * @example
     * // Get one Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends mfa_factorsFindFirstOrThrowArgs>(args?: SelectSubset<T, mfa_factorsFindFirstOrThrowArgs<ExtArgs>>): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Mfa_factors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_factorsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.findMany()
     * 
     * // Get first 10 Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mfa_factorsWithIdOnly = await prisma.mfa_factors.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends mfa_factorsFindManyArgs>(args?: SelectSubset<T, mfa_factorsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Mfa_factors.
     * @param {mfa_factorsCreateArgs} args - Arguments to create a Mfa_factors.
     * @example
     * // Create one Mfa_factors
     * const Mfa_factors = await prisma.mfa_factors.create({
     *   data: {
     *     // ... data to create a Mfa_factors
     *   }
     * })
     * 
     */
    create<T extends mfa_factorsCreateArgs>(args: SelectSubset<T, mfa_factorsCreateArgs<ExtArgs>>): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Mfa_factors.
     * @param {mfa_factorsCreateManyArgs} args - Arguments to create many Mfa_factors.
     * @example
     * // Create many Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends mfa_factorsCreateManyArgs>(args?: SelectSubset<T, mfa_factorsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Mfa_factors and returns the data saved in the database.
     * @param {mfa_factorsCreateManyAndReturnArgs} args - Arguments to create many Mfa_factors.
     * @example
     * // Create many Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Mfa_factors and only return the `id`
     * const mfa_factorsWithIdOnly = await prisma.mfa_factors.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends mfa_factorsCreateManyAndReturnArgs>(args?: SelectSubset<T, mfa_factorsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Mfa_factors.
     * @param {mfa_factorsDeleteArgs} args - Arguments to delete one Mfa_factors.
     * @example
     * // Delete one Mfa_factors
     * const Mfa_factors = await prisma.mfa_factors.delete({
     *   where: {
     *     // ... filter to delete one Mfa_factors
     *   }
     * })
     * 
     */
    delete<T extends mfa_factorsDeleteArgs>(args: SelectSubset<T, mfa_factorsDeleteArgs<ExtArgs>>): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Mfa_factors.
     * @param {mfa_factorsUpdateArgs} args - Arguments to update one Mfa_factors.
     * @example
     * // Update one Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends mfa_factorsUpdateArgs>(args: SelectSubset<T, mfa_factorsUpdateArgs<ExtArgs>>): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Mfa_factors.
     * @param {mfa_factorsDeleteManyArgs} args - Arguments to filter Mfa_factors to delete.
     * @example
     * // Delete a few Mfa_factors
     * const { count } = await prisma.mfa_factors.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends mfa_factorsDeleteManyArgs>(args?: SelectSubset<T, mfa_factorsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mfa_factors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_factorsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends mfa_factorsUpdateManyArgs>(args: SelectSubset<T, mfa_factorsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mfa_factors and returns the data updated in the database.
     * @param {mfa_factorsUpdateManyAndReturnArgs} args - Arguments to update many Mfa_factors.
     * @example
     * // Update many Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Mfa_factors and only return the `id`
     * const mfa_factorsWithIdOnly = await prisma.mfa_factors.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends mfa_factorsUpdateManyAndReturnArgs>(args: SelectSubset<T, mfa_factorsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Mfa_factors.
     * @param {mfa_factorsUpsertArgs} args - Arguments to update or create a Mfa_factors.
     * @example
     * // Update or create a Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.upsert({
     *   create: {
     *     // ... data to create a Mfa_factors
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mfa_factors we want to update
     *   }
     * })
     */
    upsert<T extends mfa_factorsUpsertArgs>(args: SelectSubset<T, mfa_factorsUpsertArgs<ExtArgs>>): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Mfa_factors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_factorsCountArgs} args - Arguments to filter Mfa_factors to count.
     * @example
     * // Count the number of Mfa_factors
     * const count = await prisma.mfa_factors.count({
     *   where: {
     *     // ... the filter for the Mfa_factors we want to count
     *   }
     * })
    **/
    count<T extends mfa_factorsCountArgs>(
      args?: Subset<T, mfa_factorsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Mfa_factorsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mfa_factors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mfa_factorsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Mfa_factorsAggregateArgs>(args: Subset<T, Mfa_factorsAggregateArgs>): Prisma.PrismaPromise<GetMfa_factorsAggregateType<T>>

    /**
     * Group by Mfa_factors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_factorsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends mfa_factorsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: mfa_factorsGroupByArgs['orderBy'] }
        : { orderBy?: mfa_factorsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, mfa_factorsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMfa_factorsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the mfa_factors model
   */
  readonly fields: mfa_factorsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for mfa_factors.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__mfa_factorsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    mfa_challenges<T extends mfa_factors$mfa_challengesArgs<ExtArgs> = {}>(args?: Subset<T, mfa_factors$mfa_challengesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the mfa_factors model
   */
  interface mfa_factorsFieldRefs {
    readonly id: FieldRef<"mfa_factors", 'String'>
    readonly user_id: FieldRef<"mfa_factors", 'String'>
    readonly friendly_name: FieldRef<"mfa_factors", 'String'>
    readonly factor_type: FieldRef<"mfa_factors", 'factor_type'>
    readonly status: FieldRef<"mfa_factors", 'factor_status'>
    readonly created_at: FieldRef<"mfa_factors", 'DateTime'>
    readonly updated_at: FieldRef<"mfa_factors", 'DateTime'>
    readonly secret: FieldRef<"mfa_factors", 'String'>
    readonly phone: FieldRef<"mfa_factors", 'String'>
    readonly last_challenged_at: FieldRef<"mfa_factors", 'DateTime'>
    readonly web_authn_credential: FieldRef<"mfa_factors", 'Json'>
    readonly web_authn_aaguid: FieldRef<"mfa_factors", 'String'>
  }
    

  // Custom InputTypes
  /**
   * mfa_factors findUnique
   */
  export type mfa_factorsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_factors to fetch.
     */
    where: mfa_factorsWhereUniqueInput
  }

  /**
   * mfa_factors findUniqueOrThrow
   */
  export type mfa_factorsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_factors to fetch.
     */
    where: mfa_factorsWhereUniqueInput
  }

  /**
   * mfa_factors findFirst
   */
  export type mfa_factorsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_factors to fetch.
     */
    where?: mfa_factorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_factors to fetch.
     */
    orderBy?: mfa_factorsOrderByWithRelationInput | mfa_factorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mfa_factors.
     */
    cursor?: mfa_factorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_factors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_factors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mfa_factors.
     */
    distinct?: Mfa_factorsScalarFieldEnum | Mfa_factorsScalarFieldEnum[]
  }

  /**
   * mfa_factors findFirstOrThrow
   */
  export type mfa_factorsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_factors to fetch.
     */
    where?: mfa_factorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_factors to fetch.
     */
    orderBy?: mfa_factorsOrderByWithRelationInput | mfa_factorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mfa_factors.
     */
    cursor?: mfa_factorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_factors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_factors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mfa_factors.
     */
    distinct?: Mfa_factorsScalarFieldEnum | Mfa_factorsScalarFieldEnum[]
  }

  /**
   * mfa_factors findMany
   */
  export type mfa_factorsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_factors to fetch.
     */
    where?: mfa_factorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_factors to fetch.
     */
    orderBy?: mfa_factorsOrderByWithRelationInput | mfa_factorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing mfa_factors.
     */
    cursor?: mfa_factorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_factors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_factors.
     */
    skip?: number
    distinct?: Mfa_factorsScalarFieldEnum | Mfa_factorsScalarFieldEnum[]
  }

  /**
   * mfa_factors create
   */
  export type mfa_factorsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * The data needed to create a mfa_factors.
     */
    data: XOR<mfa_factorsCreateInput, mfa_factorsUncheckedCreateInput>
  }

  /**
   * mfa_factors createMany
   */
  export type mfa_factorsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many mfa_factors.
     */
    data: mfa_factorsCreateManyInput | mfa_factorsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * mfa_factors createManyAndReturn
   */
  export type mfa_factorsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * The data used to create many mfa_factors.
     */
    data: mfa_factorsCreateManyInput | mfa_factorsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * mfa_factors update
   */
  export type mfa_factorsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * The data needed to update a mfa_factors.
     */
    data: XOR<mfa_factorsUpdateInput, mfa_factorsUncheckedUpdateInput>
    /**
     * Choose, which mfa_factors to update.
     */
    where: mfa_factorsWhereUniqueInput
  }

  /**
   * mfa_factors updateMany
   */
  export type mfa_factorsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update mfa_factors.
     */
    data: XOR<mfa_factorsUpdateManyMutationInput, mfa_factorsUncheckedUpdateManyInput>
    /**
     * Filter which mfa_factors to update
     */
    where?: mfa_factorsWhereInput
    /**
     * Limit how many mfa_factors to update.
     */
    limit?: number
  }

  /**
   * mfa_factors updateManyAndReturn
   */
  export type mfa_factorsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * The data used to update mfa_factors.
     */
    data: XOR<mfa_factorsUpdateManyMutationInput, mfa_factorsUncheckedUpdateManyInput>
    /**
     * Filter which mfa_factors to update
     */
    where?: mfa_factorsWhereInput
    /**
     * Limit how many mfa_factors to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * mfa_factors upsert
   */
  export type mfa_factorsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * The filter to search for the mfa_factors to update in case it exists.
     */
    where: mfa_factorsWhereUniqueInput
    /**
     * In case the mfa_factors found by the `where` argument doesn't exist, create a new mfa_factors with this data.
     */
    create: XOR<mfa_factorsCreateInput, mfa_factorsUncheckedCreateInput>
    /**
     * In case the mfa_factors was found with the provided `where` argument, update it with this data.
     */
    update: XOR<mfa_factorsUpdateInput, mfa_factorsUncheckedUpdateInput>
  }

  /**
   * mfa_factors delete
   */
  export type mfa_factorsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * Filter which mfa_factors to delete.
     */
    where: mfa_factorsWhereUniqueInput
  }

  /**
   * mfa_factors deleteMany
   */
  export type mfa_factorsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mfa_factors to delete
     */
    where?: mfa_factorsWhereInput
    /**
     * Limit how many mfa_factors to delete.
     */
    limit?: number
  }

  /**
   * mfa_factors.mfa_challenges
   */
  export type mfa_factors$mfa_challengesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    where?: mfa_challengesWhereInput
    orderBy?: mfa_challengesOrderByWithRelationInput | mfa_challengesOrderByWithRelationInput[]
    cursor?: mfa_challengesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Mfa_challengesScalarFieldEnum | Mfa_challengesScalarFieldEnum[]
  }

  /**
   * mfa_factors without action
   */
  export type mfa_factorsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsInclude<ExtArgs> | null
  }


  /**
   * Model one_time_tokens
   */

  export type AggregateOne_time_tokens = {
    _count: One_time_tokensCountAggregateOutputType | null
    _min: One_time_tokensMinAggregateOutputType | null
    _max: One_time_tokensMaxAggregateOutputType | null
  }

  export type One_time_tokensMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    token_type: $Enums.one_time_token_type | null
    token_hash: string | null
    relates_to: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type One_time_tokensMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    token_type: $Enums.one_time_token_type | null
    token_hash: string | null
    relates_to: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type One_time_tokensCountAggregateOutputType = {
    id: number
    user_id: number
    token_type: number
    token_hash: number
    relates_to: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type One_time_tokensMinAggregateInputType = {
    id?: true
    user_id?: true
    token_type?: true
    token_hash?: true
    relates_to?: true
    created_at?: true
    updated_at?: true
  }

  export type One_time_tokensMaxAggregateInputType = {
    id?: true
    user_id?: true
    token_type?: true
    token_hash?: true
    relates_to?: true
    created_at?: true
    updated_at?: true
  }

  export type One_time_tokensCountAggregateInputType = {
    id?: true
    user_id?: true
    token_type?: true
    token_hash?: true
    relates_to?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type One_time_tokensAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which one_time_tokens to aggregate.
     */
    where?: one_time_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of one_time_tokens to fetch.
     */
    orderBy?: one_time_tokensOrderByWithRelationInput | one_time_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: one_time_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` one_time_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` one_time_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned one_time_tokens
    **/
    _count?: true | One_time_tokensCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: One_time_tokensMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: One_time_tokensMaxAggregateInputType
  }

  export type GetOne_time_tokensAggregateType<T extends One_time_tokensAggregateArgs> = {
        [P in keyof T & keyof AggregateOne_time_tokens]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOne_time_tokens[P]>
      : GetScalarType<T[P], AggregateOne_time_tokens[P]>
  }




  export type one_time_tokensGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: one_time_tokensWhereInput
    orderBy?: one_time_tokensOrderByWithAggregationInput | one_time_tokensOrderByWithAggregationInput[]
    by: One_time_tokensScalarFieldEnum[] | One_time_tokensScalarFieldEnum
    having?: one_time_tokensScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: One_time_tokensCountAggregateInputType | true
    _min?: One_time_tokensMinAggregateInputType
    _max?: One_time_tokensMaxAggregateInputType
  }

  export type One_time_tokensGroupByOutputType = {
    id: string
    user_id: string
    token_type: $Enums.one_time_token_type
    token_hash: string
    relates_to: string
    created_at: Date
    updated_at: Date
    _count: One_time_tokensCountAggregateOutputType | null
    _min: One_time_tokensMinAggregateOutputType | null
    _max: One_time_tokensMaxAggregateOutputType | null
  }

  type GetOne_time_tokensGroupByPayload<T extends one_time_tokensGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<One_time_tokensGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof One_time_tokensGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], One_time_tokensGroupByOutputType[P]>
            : GetScalarType<T[P], One_time_tokensGroupByOutputType[P]>
        }
      >
    >


  export type one_time_tokensSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    token_type?: boolean
    token_hash?: boolean
    relates_to?: boolean
    created_at?: boolean
    updated_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["one_time_tokens"]>

  export type one_time_tokensSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    token_type?: boolean
    token_hash?: boolean
    relates_to?: boolean
    created_at?: boolean
    updated_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["one_time_tokens"]>

  export type one_time_tokensSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    token_type?: boolean
    token_hash?: boolean
    relates_to?: boolean
    created_at?: boolean
    updated_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["one_time_tokens"]>

  export type one_time_tokensSelectScalar = {
    id?: boolean
    user_id?: boolean
    token_type?: boolean
    token_hash?: boolean
    relates_to?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type one_time_tokensOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "token_type" | "token_hash" | "relates_to" | "created_at" | "updated_at", ExtArgs["result"]["one_time_tokens"]>
  export type one_time_tokensInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type one_time_tokensIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type one_time_tokensIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $one_time_tokensPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "one_time_tokens"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      token_type: $Enums.one_time_token_type
      token_hash: string
      relates_to: string
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["one_time_tokens"]>
    composites: {}
  }

  type one_time_tokensGetPayload<S extends boolean | null | undefined | one_time_tokensDefaultArgs> = $Result.GetResult<Prisma.$one_time_tokensPayload, S>

  type one_time_tokensCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<one_time_tokensFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: One_time_tokensCountAggregateInputType | true
    }

  export interface one_time_tokensDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['one_time_tokens'], meta: { name: 'one_time_tokens' } }
    /**
     * Find zero or one One_time_tokens that matches the filter.
     * @param {one_time_tokensFindUniqueArgs} args - Arguments to find a One_time_tokens
     * @example
     * // Get one One_time_tokens
     * const one_time_tokens = await prisma.one_time_tokens.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends one_time_tokensFindUniqueArgs>(args: SelectSubset<T, one_time_tokensFindUniqueArgs<ExtArgs>>): Prisma__one_time_tokensClient<$Result.GetResult<Prisma.$one_time_tokensPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one One_time_tokens that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {one_time_tokensFindUniqueOrThrowArgs} args - Arguments to find a One_time_tokens
     * @example
     * // Get one One_time_tokens
     * const one_time_tokens = await prisma.one_time_tokens.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends one_time_tokensFindUniqueOrThrowArgs>(args: SelectSubset<T, one_time_tokensFindUniqueOrThrowArgs<ExtArgs>>): Prisma__one_time_tokensClient<$Result.GetResult<Prisma.$one_time_tokensPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first One_time_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {one_time_tokensFindFirstArgs} args - Arguments to find a One_time_tokens
     * @example
     * // Get one One_time_tokens
     * const one_time_tokens = await prisma.one_time_tokens.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends one_time_tokensFindFirstArgs>(args?: SelectSubset<T, one_time_tokensFindFirstArgs<ExtArgs>>): Prisma__one_time_tokensClient<$Result.GetResult<Prisma.$one_time_tokensPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first One_time_tokens that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {one_time_tokensFindFirstOrThrowArgs} args - Arguments to find a One_time_tokens
     * @example
     * // Get one One_time_tokens
     * const one_time_tokens = await prisma.one_time_tokens.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends one_time_tokensFindFirstOrThrowArgs>(args?: SelectSubset<T, one_time_tokensFindFirstOrThrowArgs<ExtArgs>>): Prisma__one_time_tokensClient<$Result.GetResult<Prisma.$one_time_tokensPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more One_time_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {one_time_tokensFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all One_time_tokens
     * const one_time_tokens = await prisma.one_time_tokens.findMany()
     * 
     * // Get first 10 One_time_tokens
     * const one_time_tokens = await prisma.one_time_tokens.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const one_time_tokensWithIdOnly = await prisma.one_time_tokens.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends one_time_tokensFindManyArgs>(args?: SelectSubset<T, one_time_tokensFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$one_time_tokensPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a One_time_tokens.
     * @param {one_time_tokensCreateArgs} args - Arguments to create a One_time_tokens.
     * @example
     * // Create one One_time_tokens
     * const One_time_tokens = await prisma.one_time_tokens.create({
     *   data: {
     *     // ... data to create a One_time_tokens
     *   }
     * })
     * 
     */
    create<T extends one_time_tokensCreateArgs>(args: SelectSubset<T, one_time_tokensCreateArgs<ExtArgs>>): Prisma__one_time_tokensClient<$Result.GetResult<Prisma.$one_time_tokensPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many One_time_tokens.
     * @param {one_time_tokensCreateManyArgs} args - Arguments to create many One_time_tokens.
     * @example
     * // Create many One_time_tokens
     * const one_time_tokens = await prisma.one_time_tokens.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends one_time_tokensCreateManyArgs>(args?: SelectSubset<T, one_time_tokensCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many One_time_tokens and returns the data saved in the database.
     * @param {one_time_tokensCreateManyAndReturnArgs} args - Arguments to create many One_time_tokens.
     * @example
     * // Create many One_time_tokens
     * const one_time_tokens = await prisma.one_time_tokens.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many One_time_tokens and only return the `id`
     * const one_time_tokensWithIdOnly = await prisma.one_time_tokens.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends one_time_tokensCreateManyAndReturnArgs>(args?: SelectSubset<T, one_time_tokensCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$one_time_tokensPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a One_time_tokens.
     * @param {one_time_tokensDeleteArgs} args - Arguments to delete one One_time_tokens.
     * @example
     * // Delete one One_time_tokens
     * const One_time_tokens = await prisma.one_time_tokens.delete({
     *   where: {
     *     // ... filter to delete one One_time_tokens
     *   }
     * })
     * 
     */
    delete<T extends one_time_tokensDeleteArgs>(args: SelectSubset<T, one_time_tokensDeleteArgs<ExtArgs>>): Prisma__one_time_tokensClient<$Result.GetResult<Prisma.$one_time_tokensPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one One_time_tokens.
     * @param {one_time_tokensUpdateArgs} args - Arguments to update one One_time_tokens.
     * @example
     * // Update one One_time_tokens
     * const one_time_tokens = await prisma.one_time_tokens.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends one_time_tokensUpdateArgs>(args: SelectSubset<T, one_time_tokensUpdateArgs<ExtArgs>>): Prisma__one_time_tokensClient<$Result.GetResult<Prisma.$one_time_tokensPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more One_time_tokens.
     * @param {one_time_tokensDeleteManyArgs} args - Arguments to filter One_time_tokens to delete.
     * @example
     * // Delete a few One_time_tokens
     * const { count } = await prisma.one_time_tokens.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends one_time_tokensDeleteManyArgs>(args?: SelectSubset<T, one_time_tokensDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more One_time_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {one_time_tokensUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many One_time_tokens
     * const one_time_tokens = await prisma.one_time_tokens.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends one_time_tokensUpdateManyArgs>(args: SelectSubset<T, one_time_tokensUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more One_time_tokens and returns the data updated in the database.
     * @param {one_time_tokensUpdateManyAndReturnArgs} args - Arguments to update many One_time_tokens.
     * @example
     * // Update many One_time_tokens
     * const one_time_tokens = await prisma.one_time_tokens.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more One_time_tokens and only return the `id`
     * const one_time_tokensWithIdOnly = await prisma.one_time_tokens.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends one_time_tokensUpdateManyAndReturnArgs>(args: SelectSubset<T, one_time_tokensUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$one_time_tokensPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one One_time_tokens.
     * @param {one_time_tokensUpsertArgs} args - Arguments to update or create a One_time_tokens.
     * @example
     * // Update or create a One_time_tokens
     * const one_time_tokens = await prisma.one_time_tokens.upsert({
     *   create: {
     *     // ... data to create a One_time_tokens
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the One_time_tokens we want to update
     *   }
     * })
     */
    upsert<T extends one_time_tokensUpsertArgs>(args: SelectSubset<T, one_time_tokensUpsertArgs<ExtArgs>>): Prisma__one_time_tokensClient<$Result.GetResult<Prisma.$one_time_tokensPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of One_time_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {one_time_tokensCountArgs} args - Arguments to filter One_time_tokens to count.
     * @example
     * // Count the number of One_time_tokens
     * const count = await prisma.one_time_tokens.count({
     *   where: {
     *     // ... the filter for the One_time_tokens we want to count
     *   }
     * })
    **/
    count<T extends one_time_tokensCountArgs>(
      args?: Subset<T, one_time_tokensCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], One_time_tokensCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a One_time_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {One_time_tokensAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends One_time_tokensAggregateArgs>(args: Subset<T, One_time_tokensAggregateArgs>): Prisma.PrismaPromise<GetOne_time_tokensAggregateType<T>>

    /**
     * Group by One_time_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {one_time_tokensGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends one_time_tokensGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: one_time_tokensGroupByArgs['orderBy'] }
        : { orderBy?: one_time_tokensGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, one_time_tokensGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOne_time_tokensGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the one_time_tokens model
   */
  readonly fields: one_time_tokensFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for one_time_tokens.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__one_time_tokensClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the one_time_tokens model
   */
  interface one_time_tokensFieldRefs {
    readonly id: FieldRef<"one_time_tokens", 'String'>
    readonly user_id: FieldRef<"one_time_tokens", 'String'>
    readonly token_type: FieldRef<"one_time_tokens", 'one_time_token_type'>
    readonly token_hash: FieldRef<"one_time_tokens", 'String'>
    readonly relates_to: FieldRef<"one_time_tokens", 'String'>
    readonly created_at: FieldRef<"one_time_tokens", 'DateTime'>
    readonly updated_at: FieldRef<"one_time_tokens", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * one_time_tokens findUnique
   */
  export type one_time_tokensFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensInclude<ExtArgs> | null
    /**
     * Filter, which one_time_tokens to fetch.
     */
    where: one_time_tokensWhereUniqueInput
  }

  /**
   * one_time_tokens findUniqueOrThrow
   */
  export type one_time_tokensFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensInclude<ExtArgs> | null
    /**
     * Filter, which one_time_tokens to fetch.
     */
    where: one_time_tokensWhereUniqueInput
  }

  /**
   * one_time_tokens findFirst
   */
  export type one_time_tokensFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensInclude<ExtArgs> | null
    /**
     * Filter, which one_time_tokens to fetch.
     */
    where?: one_time_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of one_time_tokens to fetch.
     */
    orderBy?: one_time_tokensOrderByWithRelationInput | one_time_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for one_time_tokens.
     */
    cursor?: one_time_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` one_time_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` one_time_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of one_time_tokens.
     */
    distinct?: One_time_tokensScalarFieldEnum | One_time_tokensScalarFieldEnum[]
  }

  /**
   * one_time_tokens findFirstOrThrow
   */
  export type one_time_tokensFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensInclude<ExtArgs> | null
    /**
     * Filter, which one_time_tokens to fetch.
     */
    where?: one_time_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of one_time_tokens to fetch.
     */
    orderBy?: one_time_tokensOrderByWithRelationInput | one_time_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for one_time_tokens.
     */
    cursor?: one_time_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` one_time_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` one_time_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of one_time_tokens.
     */
    distinct?: One_time_tokensScalarFieldEnum | One_time_tokensScalarFieldEnum[]
  }

  /**
   * one_time_tokens findMany
   */
  export type one_time_tokensFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensInclude<ExtArgs> | null
    /**
     * Filter, which one_time_tokens to fetch.
     */
    where?: one_time_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of one_time_tokens to fetch.
     */
    orderBy?: one_time_tokensOrderByWithRelationInput | one_time_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing one_time_tokens.
     */
    cursor?: one_time_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` one_time_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` one_time_tokens.
     */
    skip?: number
    distinct?: One_time_tokensScalarFieldEnum | One_time_tokensScalarFieldEnum[]
  }

  /**
   * one_time_tokens create
   */
  export type one_time_tokensCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensInclude<ExtArgs> | null
    /**
     * The data needed to create a one_time_tokens.
     */
    data: XOR<one_time_tokensCreateInput, one_time_tokensUncheckedCreateInput>
  }

  /**
   * one_time_tokens createMany
   */
  export type one_time_tokensCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many one_time_tokens.
     */
    data: one_time_tokensCreateManyInput | one_time_tokensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * one_time_tokens createManyAndReturn
   */
  export type one_time_tokensCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * The data used to create many one_time_tokens.
     */
    data: one_time_tokensCreateManyInput | one_time_tokensCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * one_time_tokens update
   */
  export type one_time_tokensUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensInclude<ExtArgs> | null
    /**
     * The data needed to update a one_time_tokens.
     */
    data: XOR<one_time_tokensUpdateInput, one_time_tokensUncheckedUpdateInput>
    /**
     * Choose, which one_time_tokens to update.
     */
    where: one_time_tokensWhereUniqueInput
  }

  /**
   * one_time_tokens updateMany
   */
  export type one_time_tokensUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update one_time_tokens.
     */
    data: XOR<one_time_tokensUpdateManyMutationInput, one_time_tokensUncheckedUpdateManyInput>
    /**
     * Filter which one_time_tokens to update
     */
    where?: one_time_tokensWhereInput
    /**
     * Limit how many one_time_tokens to update.
     */
    limit?: number
  }

  /**
   * one_time_tokens updateManyAndReturn
   */
  export type one_time_tokensUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * The data used to update one_time_tokens.
     */
    data: XOR<one_time_tokensUpdateManyMutationInput, one_time_tokensUncheckedUpdateManyInput>
    /**
     * Filter which one_time_tokens to update
     */
    where?: one_time_tokensWhereInput
    /**
     * Limit how many one_time_tokens to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * one_time_tokens upsert
   */
  export type one_time_tokensUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensInclude<ExtArgs> | null
    /**
     * The filter to search for the one_time_tokens to update in case it exists.
     */
    where: one_time_tokensWhereUniqueInput
    /**
     * In case the one_time_tokens found by the `where` argument doesn't exist, create a new one_time_tokens with this data.
     */
    create: XOR<one_time_tokensCreateInput, one_time_tokensUncheckedCreateInput>
    /**
     * In case the one_time_tokens was found with the provided `where` argument, update it with this data.
     */
    update: XOR<one_time_tokensUpdateInput, one_time_tokensUncheckedUpdateInput>
  }

  /**
   * one_time_tokens delete
   */
  export type one_time_tokensDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensInclude<ExtArgs> | null
    /**
     * Filter which one_time_tokens to delete.
     */
    where: one_time_tokensWhereUniqueInput
  }

  /**
   * one_time_tokens deleteMany
   */
  export type one_time_tokensDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which one_time_tokens to delete
     */
    where?: one_time_tokensWhereInput
    /**
     * Limit how many one_time_tokens to delete.
     */
    limit?: number
  }

  /**
   * one_time_tokens without action
   */
  export type one_time_tokensDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensInclude<ExtArgs> | null
  }


  /**
   * Model refresh_tokens
   */

  export type AggregateRefresh_tokens = {
    _count: Refresh_tokensCountAggregateOutputType | null
    _avg: Refresh_tokensAvgAggregateOutputType | null
    _sum: Refresh_tokensSumAggregateOutputType | null
    _min: Refresh_tokensMinAggregateOutputType | null
    _max: Refresh_tokensMaxAggregateOutputType | null
  }

  export type Refresh_tokensAvgAggregateOutputType = {
    id: number | null
  }

  export type Refresh_tokensSumAggregateOutputType = {
    id: bigint | null
  }

  export type Refresh_tokensMinAggregateOutputType = {
    instance_id: string | null
    id: bigint | null
    token: string | null
    user_id: string | null
    revoked: boolean | null
    created_at: Date | null
    updated_at: Date | null
    parent: string | null
    session_id: string | null
  }

  export type Refresh_tokensMaxAggregateOutputType = {
    instance_id: string | null
    id: bigint | null
    token: string | null
    user_id: string | null
    revoked: boolean | null
    created_at: Date | null
    updated_at: Date | null
    parent: string | null
    session_id: string | null
  }

  export type Refresh_tokensCountAggregateOutputType = {
    instance_id: number
    id: number
    token: number
    user_id: number
    revoked: number
    created_at: number
    updated_at: number
    parent: number
    session_id: number
    _all: number
  }


  export type Refresh_tokensAvgAggregateInputType = {
    id?: true
  }

  export type Refresh_tokensSumAggregateInputType = {
    id?: true
  }

  export type Refresh_tokensMinAggregateInputType = {
    instance_id?: true
    id?: true
    token?: true
    user_id?: true
    revoked?: true
    created_at?: true
    updated_at?: true
    parent?: true
    session_id?: true
  }

  export type Refresh_tokensMaxAggregateInputType = {
    instance_id?: true
    id?: true
    token?: true
    user_id?: true
    revoked?: true
    created_at?: true
    updated_at?: true
    parent?: true
    session_id?: true
  }

  export type Refresh_tokensCountAggregateInputType = {
    instance_id?: true
    id?: true
    token?: true
    user_id?: true
    revoked?: true
    created_at?: true
    updated_at?: true
    parent?: true
    session_id?: true
    _all?: true
  }

  export type Refresh_tokensAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which refresh_tokens to aggregate.
     */
    where?: refresh_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refresh_tokens to fetch.
     */
    orderBy?: refresh_tokensOrderByWithRelationInput | refresh_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: refresh_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refresh_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refresh_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned refresh_tokens
    **/
    _count?: true | Refresh_tokensCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Refresh_tokensAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Refresh_tokensSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Refresh_tokensMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Refresh_tokensMaxAggregateInputType
  }

  export type GetRefresh_tokensAggregateType<T extends Refresh_tokensAggregateArgs> = {
        [P in keyof T & keyof AggregateRefresh_tokens]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRefresh_tokens[P]>
      : GetScalarType<T[P], AggregateRefresh_tokens[P]>
  }




  export type refresh_tokensGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: refresh_tokensWhereInput
    orderBy?: refresh_tokensOrderByWithAggregationInput | refresh_tokensOrderByWithAggregationInput[]
    by: Refresh_tokensScalarFieldEnum[] | Refresh_tokensScalarFieldEnum
    having?: refresh_tokensScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Refresh_tokensCountAggregateInputType | true
    _avg?: Refresh_tokensAvgAggregateInputType
    _sum?: Refresh_tokensSumAggregateInputType
    _min?: Refresh_tokensMinAggregateInputType
    _max?: Refresh_tokensMaxAggregateInputType
  }

  export type Refresh_tokensGroupByOutputType = {
    instance_id: string | null
    id: bigint
    token: string | null
    user_id: string | null
    revoked: boolean | null
    created_at: Date | null
    updated_at: Date | null
    parent: string | null
    session_id: string | null
    _count: Refresh_tokensCountAggregateOutputType | null
    _avg: Refresh_tokensAvgAggregateOutputType | null
    _sum: Refresh_tokensSumAggregateOutputType | null
    _min: Refresh_tokensMinAggregateOutputType | null
    _max: Refresh_tokensMaxAggregateOutputType | null
  }

  type GetRefresh_tokensGroupByPayload<T extends refresh_tokensGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Refresh_tokensGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Refresh_tokensGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Refresh_tokensGroupByOutputType[P]>
            : GetScalarType<T[P], Refresh_tokensGroupByOutputType[P]>
        }
      >
    >


  export type refresh_tokensSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    instance_id?: boolean
    id?: boolean
    token?: boolean
    user_id?: boolean
    revoked?: boolean
    created_at?: boolean
    updated_at?: boolean
    parent?: boolean
    session_id?: boolean
    sessions?: boolean | refresh_tokens$sessionsArgs<ExtArgs>
  }, ExtArgs["result"]["refresh_tokens"]>

  export type refresh_tokensSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    instance_id?: boolean
    id?: boolean
    token?: boolean
    user_id?: boolean
    revoked?: boolean
    created_at?: boolean
    updated_at?: boolean
    parent?: boolean
    session_id?: boolean
    sessions?: boolean | refresh_tokens$sessionsArgs<ExtArgs>
  }, ExtArgs["result"]["refresh_tokens"]>

  export type refresh_tokensSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    instance_id?: boolean
    id?: boolean
    token?: boolean
    user_id?: boolean
    revoked?: boolean
    created_at?: boolean
    updated_at?: boolean
    parent?: boolean
    session_id?: boolean
    sessions?: boolean | refresh_tokens$sessionsArgs<ExtArgs>
  }, ExtArgs["result"]["refresh_tokens"]>

  export type refresh_tokensSelectScalar = {
    instance_id?: boolean
    id?: boolean
    token?: boolean
    user_id?: boolean
    revoked?: boolean
    created_at?: boolean
    updated_at?: boolean
    parent?: boolean
    session_id?: boolean
  }

  export type refresh_tokensOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"instance_id" | "id" | "token" | "user_id" | "revoked" | "created_at" | "updated_at" | "parent" | "session_id", ExtArgs["result"]["refresh_tokens"]>
  export type refresh_tokensInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sessions?: boolean | refresh_tokens$sessionsArgs<ExtArgs>
  }
  export type refresh_tokensIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sessions?: boolean | refresh_tokens$sessionsArgs<ExtArgs>
  }
  export type refresh_tokensIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sessions?: boolean | refresh_tokens$sessionsArgs<ExtArgs>
  }

  export type $refresh_tokensPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "refresh_tokens"
    objects: {
      sessions: Prisma.$sessionsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      instance_id: string | null
      id: bigint
      token: string | null
      user_id: string | null
      revoked: boolean | null
      created_at: Date | null
      updated_at: Date | null
      parent: string | null
      session_id: string | null
    }, ExtArgs["result"]["refresh_tokens"]>
    composites: {}
  }

  type refresh_tokensGetPayload<S extends boolean | null | undefined | refresh_tokensDefaultArgs> = $Result.GetResult<Prisma.$refresh_tokensPayload, S>

  type refresh_tokensCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<refresh_tokensFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Refresh_tokensCountAggregateInputType | true
    }

  export interface refresh_tokensDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['refresh_tokens'], meta: { name: 'refresh_tokens' } }
    /**
     * Find zero or one Refresh_tokens that matches the filter.
     * @param {refresh_tokensFindUniqueArgs} args - Arguments to find a Refresh_tokens
     * @example
     * // Get one Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends refresh_tokensFindUniqueArgs>(args: SelectSubset<T, refresh_tokensFindUniqueArgs<ExtArgs>>): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Refresh_tokens that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {refresh_tokensFindUniqueOrThrowArgs} args - Arguments to find a Refresh_tokens
     * @example
     * // Get one Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends refresh_tokensFindUniqueOrThrowArgs>(args: SelectSubset<T, refresh_tokensFindUniqueOrThrowArgs<ExtArgs>>): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Refresh_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refresh_tokensFindFirstArgs} args - Arguments to find a Refresh_tokens
     * @example
     * // Get one Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends refresh_tokensFindFirstArgs>(args?: SelectSubset<T, refresh_tokensFindFirstArgs<ExtArgs>>): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Refresh_tokens that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refresh_tokensFindFirstOrThrowArgs} args - Arguments to find a Refresh_tokens
     * @example
     * // Get one Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends refresh_tokensFindFirstOrThrowArgs>(args?: SelectSubset<T, refresh_tokensFindFirstOrThrowArgs<ExtArgs>>): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Refresh_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refresh_tokensFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.findMany()
     * 
     * // Get first 10 Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.findMany({ take: 10 })
     * 
     * // Only select the `instance_id`
     * const refresh_tokensWithInstance_idOnly = await prisma.refresh_tokens.findMany({ select: { instance_id: true } })
     * 
     */
    findMany<T extends refresh_tokensFindManyArgs>(args?: SelectSubset<T, refresh_tokensFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Refresh_tokens.
     * @param {refresh_tokensCreateArgs} args - Arguments to create a Refresh_tokens.
     * @example
     * // Create one Refresh_tokens
     * const Refresh_tokens = await prisma.refresh_tokens.create({
     *   data: {
     *     // ... data to create a Refresh_tokens
     *   }
     * })
     * 
     */
    create<T extends refresh_tokensCreateArgs>(args: SelectSubset<T, refresh_tokensCreateArgs<ExtArgs>>): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Refresh_tokens.
     * @param {refresh_tokensCreateManyArgs} args - Arguments to create many Refresh_tokens.
     * @example
     * // Create many Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends refresh_tokensCreateManyArgs>(args?: SelectSubset<T, refresh_tokensCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Refresh_tokens and returns the data saved in the database.
     * @param {refresh_tokensCreateManyAndReturnArgs} args - Arguments to create many Refresh_tokens.
     * @example
     * // Create many Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Refresh_tokens and only return the `instance_id`
     * const refresh_tokensWithInstance_idOnly = await prisma.refresh_tokens.createManyAndReturn({
     *   select: { instance_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends refresh_tokensCreateManyAndReturnArgs>(args?: SelectSubset<T, refresh_tokensCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Refresh_tokens.
     * @param {refresh_tokensDeleteArgs} args - Arguments to delete one Refresh_tokens.
     * @example
     * // Delete one Refresh_tokens
     * const Refresh_tokens = await prisma.refresh_tokens.delete({
     *   where: {
     *     // ... filter to delete one Refresh_tokens
     *   }
     * })
     * 
     */
    delete<T extends refresh_tokensDeleteArgs>(args: SelectSubset<T, refresh_tokensDeleteArgs<ExtArgs>>): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Refresh_tokens.
     * @param {refresh_tokensUpdateArgs} args - Arguments to update one Refresh_tokens.
     * @example
     * // Update one Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends refresh_tokensUpdateArgs>(args: SelectSubset<T, refresh_tokensUpdateArgs<ExtArgs>>): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Refresh_tokens.
     * @param {refresh_tokensDeleteManyArgs} args - Arguments to filter Refresh_tokens to delete.
     * @example
     * // Delete a few Refresh_tokens
     * const { count } = await prisma.refresh_tokens.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends refresh_tokensDeleteManyArgs>(args?: SelectSubset<T, refresh_tokensDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Refresh_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refresh_tokensUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends refresh_tokensUpdateManyArgs>(args: SelectSubset<T, refresh_tokensUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Refresh_tokens and returns the data updated in the database.
     * @param {refresh_tokensUpdateManyAndReturnArgs} args - Arguments to update many Refresh_tokens.
     * @example
     * // Update many Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Refresh_tokens and only return the `instance_id`
     * const refresh_tokensWithInstance_idOnly = await prisma.refresh_tokens.updateManyAndReturn({
     *   select: { instance_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends refresh_tokensUpdateManyAndReturnArgs>(args: SelectSubset<T, refresh_tokensUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Refresh_tokens.
     * @param {refresh_tokensUpsertArgs} args - Arguments to update or create a Refresh_tokens.
     * @example
     * // Update or create a Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.upsert({
     *   create: {
     *     // ... data to create a Refresh_tokens
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Refresh_tokens we want to update
     *   }
     * })
     */
    upsert<T extends refresh_tokensUpsertArgs>(args: SelectSubset<T, refresh_tokensUpsertArgs<ExtArgs>>): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Refresh_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refresh_tokensCountArgs} args - Arguments to filter Refresh_tokens to count.
     * @example
     * // Count the number of Refresh_tokens
     * const count = await prisma.refresh_tokens.count({
     *   where: {
     *     // ... the filter for the Refresh_tokens we want to count
     *   }
     * })
    **/
    count<T extends refresh_tokensCountArgs>(
      args?: Subset<T, refresh_tokensCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Refresh_tokensCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Refresh_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Refresh_tokensAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Refresh_tokensAggregateArgs>(args: Subset<T, Refresh_tokensAggregateArgs>): Prisma.PrismaPromise<GetRefresh_tokensAggregateType<T>>

    /**
     * Group by Refresh_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refresh_tokensGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends refresh_tokensGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: refresh_tokensGroupByArgs['orderBy'] }
        : { orderBy?: refresh_tokensGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, refresh_tokensGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRefresh_tokensGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the refresh_tokens model
   */
  readonly fields: refresh_tokensFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for refresh_tokens.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__refresh_tokensClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sessions<T extends refresh_tokens$sessionsArgs<ExtArgs> = {}>(args?: Subset<T, refresh_tokens$sessionsArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the refresh_tokens model
   */
  interface refresh_tokensFieldRefs {
    readonly instance_id: FieldRef<"refresh_tokens", 'String'>
    readonly id: FieldRef<"refresh_tokens", 'BigInt'>
    readonly token: FieldRef<"refresh_tokens", 'String'>
    readonly user_id: FieldRef<"refresh_tokens", 'String'>
    readonly revoked: FieldRef<"refresh_tokens", 'Boolean'>
    readonly created_at: FieldRef<"refresh_tokens", 'DateTime'>
    readonly updated_at: FieldRef<"refresh_tokens", 'DateTime'>
    readonly parent: FieldRef<"refresh_tokens", 'String'>
    readonly session_id: FieldRef<"refresh_tokens", 'String'>
  }
    

  // Custom InputTypes
  /**
   * refresh_tokens findUnique
   */
  export type refresh_tokensFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * Filter, which refresh_tokens to fetch.
     */
    where: refresh_tokensWhereUniqueInput
  }

  /**
   * refresh_tokens findUniqueOrThrow
   */
  export type refresh_tokensFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * Filter, which refresh_tokens to fetch.
     */
    where: refresh_tokensWhereUniqueInput
  }

  /**
   * refresh_tokens findFirst
   */
  export type refresh_tokensFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * Filter, which refresh_tokens to fetch.
     */
    where?: refresh_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refresh_tokens to fetch.
     */
    orderBy?: refresh_tokensOrderByWithRelationInput | refresh_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for refresh_tokens.
     */
    cursor?: refresh_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refresh_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refresh_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of refresh_tokens.
     */
    distinct?: Refresh_tokensScalarFieldEnum | Refresh_tokensScalarFieldEnum[]
  }

  /**
   * refresh_tokens findFirstOrThrow
   */
  export type refresh_tokensFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * Filter, which refresh_tokens to fetch.
     */
    where?: refresh_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refresh_tokens to fetch.
     */
    orderBy?: refresh_tokensOrderByWithRelationInput | refresh_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for refresh_tokens.
     */
    cursor?: refresh_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refresh_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refresh_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of refresh_tokens.
     */
    distinct?: Refresh_tokensScalarFieldEnum | Refresh_tokensScalarFieldEnum[]
  }

  /**
   * refresh_tokens findMany
   */
  export type refresh_tokensFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * Filter, which refresh_tokens to fetch.
     */
    where?: refresh_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refresh_tokens to fetch.
     */
    orderBy?: refresh_tokensOrderByWithRelationInput | refresh_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing refresh_tokens.
     */
    cursor?: refresh_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refresh_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refresh_tokens.
     */
    skip?: number
    distinct?: Refresh_tokensScalarFieldEnum | Refresh_tokensScalarFieldEnum[]
  }

  /**
   * refresh_tokens create
   */
  export type refresh_tokensCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * The data needed to create a refresh_tokens.
     */
    data?: XOR<refresh_tokensCreateInput, refresh_tokensUncheckedCreateInput>
  }

  /**
   * refresh_tokens createMany
   */
  export type refresh_tokensCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many refresh_tokens.
     */
    data: refresh_tokensCreateManyInput | refresh_tokensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * refresh_tokens createManyAndReturn
   */
  export type refresh_tokensCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * The data used to create many refresh_tokens.
     */
    data: refresh_tokensCreateManyInput | refresh_tokensCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * refresh_tokens update
   */
  export type refresh_tokensUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * The data needed to update a refresh_tokens.
     */
    data: XOR<refresh_tokensUpdateInput, refresh_tokensUncheckedUpdateInput>
    /**
     * Choose, which refresh_tokens to update.
     */
    where: refresh_tokensWhereUniqueInput
  }

  /**
   * refresh_tokens updateMany
   */
  export type refresh_tokensUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update refresh_tokens.
     */
    data: XOR<refresh_tokensUpdateManyMutationInput, refresh_tokensUncheckedUpdateManyInput>
    /**
     * Filter which refresh_tokens to update
     */
    where?: refresh_tokensWhereInput
    /**
     * Limit how many refresh_tokens to update.
     */
    limit?: number
  }

  /**
   * refresh_tokens updateManyAndReturn
   */
  export type refresh_tokensUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * The data used to update refresh_tokens.
     */
    data: XOR<refresh_tokensUpdateManyMutationInput, refresh_tokensUncheckedUpdateManyInput>
    /**
     * Filter which refresh_tokens to update
     */
    where?: refresh_tokensWhereInput
    /**
     * Limit how many refresh_tokens to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * refresh_tokens upsert
   */
  export type refresh_tokensUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * The filter to search for the refresh_tokens to update in case it exists.
     */
    where: refresh_tokensWhereUniqueInput
    /**
     * In case the refresh_tokens found by the `where` argument doesn't exist, create a new refresh_tokens with this data.
     */
    create: XOR<refresh_tokensCreateInput, refresh_tokensUncheckedCreateInput>
    /**
     * In case the refresh_tokens was found with the provided `where` argument, update it with this data.
     */
    update: XOR<refresh_tokensUpdateInput, refresh_tokensUncheckedUpdateInput>
  }

  /**
   * refresh_tokens delete
   */
  export type refresh_tokensDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * Filter which refresh_tokens to delete.
     */
    where: refresh_tokensWhereUniqueInput
  }

  /**
   * refresh_tokens deleteMany
   */
  export type refresh_tokensDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which refresh_tokens to delete
     */
    where?: refresh_tokensWhereInput
    /**
     * Limit how many refresh_tokens to delete.
     */
    limit?: number
  }

  /**
   * refresh_tokens.sessions
   */
  export type refresh_tokens$sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsInclude<ExtArgs> | null
    where?: sessionsWhereInput
  }

  /**
   * refresh_tokens without action
   */
  export type refresh_tokensDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
  }


  /**
   * Model saml_providers
   */

  export type AggregateSaml_providers = {
    _count: Saml_providersCountAggregateOutputType | null
    _min: Saml_providersMinAggregateOutputType | null
    _max: Saml_providersMaxAggregateOutputType | null
  }

  export type Saml_providersMinAggregateOutputType = {
    id: string | null
    sso_provider_id: string | null
    entity_id: string | null
    metadata_xml: string | null
    metadata_url: string | null
    created_at: Date | null
    updated_at: Date | null
    name_id_format: string | null
  }

  export type Saml_providersMaxAggregateOutputType = {
    id: string | null
    sso_provider_id: string | null
    entity_id: string | null
    metadata_xml: string | null
    metadata_url: string | null
    created_at: Date | null
    updated_at: Date | null
    name_id_format: string | null
  }

  export type Saml_providersCountAggregateOutputType = {
    id: number
    sso_provider_id: number
    entity_id: number
    metadata_xml: number
    metadata_url: number
    attribute_mapping: number
    created_at: number
    updated_at: number
    name_id_format: number
    _all: number
  }


  export type Saml_providersMinAggregateInputType = {
    id?: true
    sso_provider_id?: true
    entity_id?: true
    metadata_xml?: true
    metadata_url?: true
    created_at?: true
    updated_at?: true
    name_id_format?: true
  }

  export type Saml_providersMaxAggregateInputType = {
    id?: true
    sso_provider_id?: true
    entity_id?: true
    metadata_xml?: true
    metadata_url?: true
    created_at?: true
    updated_at?: true
    name_id_format?: true
  }

  export type Saml_providersCountAggregateInputType = {
    id?: true
    sso_provider_id?: true
    entity_id?: true
    metadata_xml?: true
    metadata_url?: true
    attribute_mapping?: true
    created_at?: true
    updated_at?: true
    name_id_format?: true
    _all?: true
  }

  export type Saml_providersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which saml_providers to aggregate.
     */
    where?: saml_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of saml_providers to fetch.
     */
    orderBy?: saml_providersOrderByWithRelationInput | saml_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: saml_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` saml_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` saml_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned saml_providers
    **/
    _count?: true | Saml_providersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Saml_providersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Saml_providersMaxAggregateInputType
  }

  export type GetSaml_providersAggregateType<T extends Saml_providersAggregateArgs> = {
        [P in keyof T & keyof AggregateSaml_providers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSaml_providers[P]>
      : GetScalarType<T[P], AggregateSaml_providers[P]>
  }




  export type saml_providersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: saml_providersWhereInput
    orderBy?: saml_providersOrderByWithAggregationInput | saml_providersOrderByWithAggregationInput[]
    by: Saml_providersScalarFieldEnum[] | Saml_providersScalarFieldEnum
    having?: saml_providersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Saml_providersCountAggregateInputType | true
    _min?: Saml_providersMinAggregateInputType
    _max?: Saml_providersMaxAggregateInputType
  }

  export type Saml_providersGroupByOutputType = {
    id: string
    sso_provider_id: string
    entity_id: string
    metadata_xml: string
    metadata_url: string | null
    attribute_mapping: JsonValue | null
    created_at: Date | null
    updated_at: Date | null
    name_id_format: string | null
    _count: Saml_providersCountAggregateOutputType | null
    _min: Saml_providersMinAggregateOutputType | null
    _max: Saml_providersMaxAggregateOutputType | null
  }

  type GetSaml_providersGroupByPayload<T extends saml_providersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Saml_providersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Saml_providersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Saml_providersGroupByOutputType[P]>
            : GetScalarType<T[P], Saml_providersGroupByOutputType[P]>
        }
      >
    >


  export type saml_providersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sso_provider_id?: boolean
    entity_id?: boolean
    metadata_xml?: boolean
    metadata_url?: boolean
    attribute_mapping?: boolean
    created_at?: boolean
    updated_at?: boolean
    name_id_format?: boolean
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["saml_providers"]>

  export type saml_providersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sso_provider_id?: boolean
    entity_id?: boolean
    metadata_xml?: boolean
    metadata_url?: boolean
    attribute_mapping?: boolean
    created_at?: boolean
    updated_at?: boolean
    name_id_format?: boolean
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["saml_providers"]>

  export type saml_providersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sso_provider_id?: boolean
    entity_id?: boolean
    metadata_xml?: boolean
    metadata_url?: boolean
    attribute_mapping?: boolean
    created_at?: boolean
    updated_at?: boolean
    name_id_format?: boolean
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["saml_providers"]>

  export type saml_providersSelectScalar = {
    id?: boolean
    sso_provider_id?: boolean
    entity_id?: boolean
    metadata_xml?: boolean
    metadata_url?: boolean
    attribute_mapping?: boolean
    created_at?: boolean
    updated_at?: boolean
    name_id_format?: boolean
  }

  export type saml_providersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sso_provider_id" | "entity_id" | "metadata_xml" | "metadata_url" | "attribute_mapping" | "created_at" | "updated_at" | "name_id_format", ExtArgs["result"]["saml_providers"]>
  export type saml_providersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }
  export type saml_providersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }
  export type saml_providersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }

  export type $saml_providersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "saml_providers"
    objects: {
      sso_providers: Prisma.$sso_providersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sso_provider_id: string
      entity_id: string
      metadata_xml: string
      metadata_url: string | null
      attribute_mapping: Prisma.JsonValue | null
      created_at: Date | null
      updated_at: Date | null
      name_id_format: string | null
    }, ExtArgs["result"]["saml_providers"]>
    composites: {}
  }

  type saml_providersGetPayload<S extends boolean | null | undefined | saml_providersDefaultArgs> = $Result.GetResult<Prisma.$saml_providersPayload, S>

  type saml_providersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<saml_providersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Saml_providersCountAggregateInputType | true
    }

  export interface saml_providersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['saml_providers'], meta: { name: 'saml_providers' } }
    /**
     * Find zero or one Saml_providers that matches the filter.
     * @param {saml_providersFindUniqueArgs} args - Arguments to find a Saml_providers
     * @example
     * // Get one Saml_providers
     * const saml_providers = await prisma.saml_providers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends saml_providersFindUniqueArgs>(args: SelectSubset<T, saml_providersFindUniqueArgs<ExtArgs>>): Prisma__saml_providersClient<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Saml_providers that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {saml_providersFindUniqueOrThrowArgs} args - Arguments to find a Saml_providers
     * @example
     * // Get one Saml_providers
     * const saml_providers = await prisma.saml_providers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends saml_providersFindUniqueOrThrowArgs>(args: SelectSubset<T, saml_providersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__saml_providersClient<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Saml_providers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_providersFindFirstArgs} args - Arguments to find a Saml_providers
     * @example
     * // Get one Saml_providers
     * const saml_providers = await prisma.saml_providers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends saml_providersFindFirstArgs>(args?: SelectSubset<T, saml_providersFindFirstArgs<ExtArgs>>): Prisma__saml_providersClient<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Saml_providers that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_providersFindFirstOrThrowArgs} args - Arguments to find a Saml_providers
     * @example
     * // Get one Saml_providers
     * const saml_providers = await prisma.saml_providers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends saml_providersFindFirstOrThrowArgs>(args?: SelectSubset<T, saml_providersFindFirstOrThrowArgs<ExtArgs>>): Prisma__saml_providersClient<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Saml_providers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_providersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Saml_providers
     * const saml_providers = await prisma.saml_providers.findMany()
     * 
     * // Get first 10 Saml_providers
     * const saml_providers = await prisma.saml_providers.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const saml_providersWithIdOnly = await prisma.saml_providers.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends saml_providersFindManyArgs>(args?: SelectSubset<T, saml_providersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Saml_providers.
     * @param {saml_providersCreateArgs} args - Arguments to create a Saml_providers.
     * @example
     * // Create one Saml_providers
     * const Saml_providers = await prisma.saml_providers.create({
     *   data: {
     *     // ... data to create a Saml_providers
     *   }
     * })
     * 
     */
    create<T extends saml_providersCreateArgs>(args: SelectSubset<T, saml_providersCreateArgs<ExtArgs>>): Prisma__saml_providersClient<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Saml_providers.
     * @param {saml_providersCreateManyArgs} args - Arguments to create many Saml_providers.
     * @example
     * // Create many Saml_providers
     * const saml_providers = await prisma.saml_providers.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends saml_providersCreateManyArgs>(args?: SelectSubset<T, saml_providersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Saml_providers and returns the data saved in the database.
     * @param {saml_providersCreateManyAndReturnArgs} args - Arguments to create many Saml_providers.
     * @example
     * // Create many Saml_providers
     * const saml_providers = await prisma.saml_providers.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Saml_providers and only return the `id`
     * const saml_providersWithIdOnly = await prisma.saml_providers.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends saml_providersCreateManyAndReturnArgs>(args?: SelectSubset<T, saml_providersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Saml_providers.
     * @param {saml_providersDeleteArgs} args - Arguments to delete one Saml_providers.
     * @example
     * // Delete one Saml_providers
     * const Saml_providers = await prisma.saml_providers.delete({
     *   where: {
     *     // ... filter to delete one Saml_providers
     *   }
     * })
     * 
     */
    delete<T extends saml_providersDeleteArgs>(args: SelectSubset<T, saml_providersDeleteArgs<ExtArgs>>): Prisma__saml_providersClient<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Saml_providers.
     * @param {saml_providersUpdateArgs} args - Arguments to update one Saml_providers.
     * @example
     * // Update one Saml_providers
     * const saml_providers = await prisma.saml_providers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends saml_providersUpdateArgs>(args: SelectSubset<T, saml_providersUpdateArgs<ExtArgs>>): Prisma__saml_providersClient<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Saml_providers.
     * @param {saml_providersDeleteManyArgs} args - Arguments to filter Saml_providers to delete.
     * @example
     * // Delete a few Saml_providers
     * const { count } = await prisma.saml_providers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends saml_providersDeleteManyArgs>(args?: SelectSubset<T, saml_providersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Saml_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_providersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Saml_providers
     * const saml_providers = await prisma.saml_providers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends saml_providersUpdateManyArgs>(args: SelectSubset<T, saml_providersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Saml_providers and returns the data updated in the database.
     * @param {saml_providersUpdateManyAndReturnArgs} args - Arguments to update many Saml_providers.
     * @example
     * // Update many Saml_providers
     * const saml_providers = await prisma.saml_providers.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Saml_providers and only return the `id`
     * const saml_providersWithIdOnly = await prisma.saml_providers.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends saml_providersUpdateManyAndReturnArgs>(args: SelectSubset<T, saml_providersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Saml_providers.
     * @param {saml_providersUpsertArgs} args - Arguments to update or create a Saml_providers.
     * @example
     * // Update or create a Saml_providers
     * const saml_providers = await prisma.saml_providers.upsert({
     *   create: {
     *     // ... data to create a Saml_providers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Saml_providers we want to update
     *   }
     * })
     */
    upsert<T extends saml_providersUpsertArgs>(args: SelectSubset<T, saml_providersUpsertArgs<ExtArgs>>): Prisma__saml_providersClient<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Saml_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_providersCountArgs} args - Arguments to filter Saml_providers to count.
     * @example
     * // Count the number of Saml_providers
     * const count = await prisma.saml_providers.count({
     *   where: {
     *     // ... the filter for the Saml_providers we want to count
     *   }
     * })
    **/
    count<T extends saml_providersCountArgs>(
      args?: Subset<T, saml_providersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Saml_providersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Saml_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Saml_providersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Saml_providersAggregateArgs>(args: Subset<T, Saml_providersAggregateArgs>): Prisma.PrismaPromise<GetSaml_providersAggregateType<T>>

    /**
     * Group by Saml_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_providersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends saml_providersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: saml_providersGroupByArgs['orderBy'] }
        : { orderBy?: saml_providersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, saml_providersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSaml_providersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the saml_providers model
   */
  readonly fields: saml_providersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for saml_providers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__saml_providersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sso_providers<T extends sso_providersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, sso_providersDefaultArgs<ExtArgs>>): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the saml_providers model
   */
  interface saml_providersFieldRefs {
    readonly id: FieldRef<"saml_providers", 'String'>
    readonly sso_provider_id: FieldRef<"saml_providers", 'String'>
    readonly entity_id: FieldRef<"saml_providers", 'String'>
    readonly metadata_xml: FieldRef<"saml_providers", 'String'>
    readonly metadata_url: FieldRef<"saml_providers", 'String'>
    readonly attribute_mapping: FieldRef<"saml_providers", 'Json'>
    readonly created_at: FieldRef<"saml_providers", 'DateTime'>
    readonly updated_at: FieldRef<"saml_providers", 'DateTime'>
    readonly name_id_format: FieldRef<"saml_providers", 'String'>
  }
    

  // Custom InputTypes
  /**
   * saml_providers findUnique
   */
  export type saml_providersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * Filter, which saml_providers to fetch.
     */
    where: saml_providersWhereUniqueInput
  }

  /**
   * saml_providers findUniqueOrThrow
   */
  export type saml_providersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * Filter, which saml_providers to fetch.
     */
    where: saml_providersWhereUniqueInput
  }

  /**
   * saml_providers findFirst
   */
  export type saml_providersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * Filter, which saml_providers to fetch.
     */
    where?: saml_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of saml_providers to fetch.
     */
    orderBy?: saml_providersOrderByWithRelationInput | saml_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for saml_providers.
     */
    cursor?: saml_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` saml_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` saml_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of saml_providers.
     */
    distinct?: Saml_providersScalarFieldEnum | Saml_providersScalarFieldEnum[]
  }

  /**
   * saml_providers findFirstOrThrow
   */
  export type saml_providersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * Filter, which saml_providers to fetch.
     */
    where?: saml_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of saml_providers to fetch.
     */
    orderBy?: saml_providersOrderByWithRelationInput | saml_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for saml_providers.
     */
    cursor?: saml_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` saml_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` saml_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of saml_providers.
     */
    distinct?: Saml_providersScalarFieldEnum | Saml_providersScalarFieldEnum[]
  }

  /**
   * saml_providers findMany
   */
  export type saml_providersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * Filter, which saml_providers to fetch.
     */
    where?: saml_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of saml_providers to fetch.
     */
    orderBy?: saml_providersOrderByWithRelationInput | saml_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing saml_providers.
     */
    cursor?: saml_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` saml_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` saml_providers.
     */
    skip?: number
    distinct?: Saml_providersScalarFieldEnum | Saml_providersScalarFieldEnum[]
  }

  /**
   * saml_providers create
   */
  export type saml_providersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * The data needed to create a saml_providers.
     */
    data: XOR<saml_providersCreateInput, saml_providersUncheckedCreateInput>
  }

  /**
   * saml_providers createMany
   */
  export type saml_providersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many saml_providers.
     */
    data: saml_providersCreateManyInput | saml_providersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * saml_providers createManyAndReturn
   */
  export type saml_providersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * The data used to create many saml_providers.
     */
    data: saml_providersCreateManyInput | saml_providersCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * saml_providers update
   */
  export type saml_providersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * The data needed to update a saml_providers.
     */
    data: XOR<saml_providersUpdateInput, saml_providersUncheckedUpdateInput>
    /**
     * Choose, which saml_providers to update.
     */
    where: saml_providersWhereUniqueInput
  }

  /**
   * saml_providers updateMany
   */
  export type saml_providersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update saml_providers.
     */
    data: XOR<saml_providersUpdateManyMutationInput, saml_providersUncheckedUpdateManyInput>
    /**
     * Filter which saml_providers to update
     */
    where?: saml_providersWhereInput
    /**
     * Limit how many saml_providers to update.
     */
    limit?: number
  }

  /**
   * saml_providers updateManyAndReturn
   */
  export type saml_providersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * The data used to update saml_providers.
     */
    data: XOR<saml_providersUpdateManyMutationInput, saml_providersUncheckedUpdateManyInput>
    /**
     * Filter which saml_providers to update
     */
    where?: saml_providersWhereInput
    /**
     * Limit how many saml_providers to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * saml_providers upsert
   */
  export type saml_providersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * The filter to search for the saml_providers to update in case it exists.
     */
    where: saml_providersWhereUniqueInput
    /**
     * In case the saml_providers found by the `where` argument doesn't exist, create a new saml_providers with this data.
     */
    create: XOR<saml_providersCreateInput, saml_providersUncheckedCreateInput>
    /**
     * In case the saml_providers was found with the provided `where` argument, update it with this data.
     */
    update: XOR<saml_providersUpdateInput, saml_providersUncheckedUpdateInput>
  }

  /**
   * saml_providers delete
   */
  export type saml_providersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * Filter which saml_providers to delete.
     */
    where: saml_providersWhereUniqueInput
  }

  /**
   * saml_providers deleteMany
   */
  export type saml_providersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which saml_providers to delete
     */
    where?: saml_providersWhereInput
    /**
     * Limit how many saml_providers to delete.
     */
    limit?: number
  }

  /**
   * saml_providers without action
   */
  export type saml_providersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersInclude<ExtArgs> | null
  }


  /**
   * Model saml_relay_states
   */

  export type AggregateSaml_relay_states = {
    _count: Saml_relay_statesCountAggregateOutputType | null
    _min: Saml_relay_statesMinAggregateOutputType | null
    _max: Saml_relay_statesMaxAggregateOutputType | null
  }

  export type Saml_relay_statesMinAggregateOutputType = {
    id: string | null
    sso_provider_id: string | null
    request_id: string | null
    for_email: string | null
    redirect_to: string | null
    created_at: Date | null
    updated_at: Date | null
    flow_state_id: string | null
  }

  export type Saml_relay_statesMaxAggregateOutputType = {
    id: string | null
    sso_provider_id: string | null
    request_id: string | null
    for_email: string | null
    redirect_to: string | null
    created_at: Date | null
    updated_at: Date | null
    flow_state_id: string | null
  }

  export type Saml_relay_statesCountAggregateOutputType = {
    id: number
    sso_provider_id: number
    request_id: number
    for_email: number
    redirect_to: number
    created_at: number
    updated_at: number
    flow_state_id: number
    _all: number
  }


  export type Saml_relay_statesMinAggregateInputType = {
    id?: true
    sso_provider_id?: true
    request_id?: true
    for_email?: true
    redirect_to?: true
    created_at?: true
    updated_at?: true
    flow_state_id?: true
  }

  export type Saml_relay_statesMaxAggregateInputType = {
    id?: true
    sso_provider_id?: true
    request_id?: true
    for_email?: true
    redirect_to?: true
    created_at?: true
    updated_at?: true
    flow_state_id?: true
  }

  export type Saml_relay_statesCountAggregateInputType = {
    id?: true
    sso_provider_id?: true
    request_id?: true
    for_email?: true
    redirect_to?: true
    created_at?: true
    updated_at?: true
    flow_state_id?: true
    _all?: true
  }

  export type Saml_relay_statesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which saml_relay_states to aggregate.
     */
    where?: saml_relay_statesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of saml_relay_states to fetch.
     */
    orderBy?: saml_relay_statesOrderByWithRelationInput | saml_relay_statesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: saml_relay_statesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` saml_relay_states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` saml_relay_states.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned saml_relay_states
    **/
    _count?: true | Saml_relay_statesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Saml_relay_statesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Saml_relay_statesMaxAggregateInputType
  }

  export type GetSaml_relay_statesAggregateType<T extends Saml_relay_statesAggregateArgs> = {
        [P in keyof T & keyof AggregateSaml_relay_states]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSaml_relay_states[P]>
      : GetScalarType<T[P], AggregateSaml_relay_states[P]>
  }




  export type saml_relay_statesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: saml_relay_statesWhereInput
    orderBy?: saml_relay_statesOrderByWithAggregationInput | saml_relay_statesOrderByWithAggregationInput[]
    by: Saml_relay_statesScalarFieldEnum[] | Saml_relay_statesScalarFieldEnum
    having?: saml_relay_statesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Saml_relay_statesCountAggregateInputType | true
    _min?: Saml_relay_statesMinAggregateInputType
    _max?: Saml_relay_statesMaxAggregateInputType
  }

  export type Saml_relay_statesGroupByOutputType = {
    id: string
    sso_provider_id: string
    request_id: string
    for_email: string | null
    redirect_to: string | null
    created_at: Date | null
    updated_at: Date | null
    flow_state_id: string | null
    _count: Saml_relay_statesCountAggregateOutputType | null
    _min: Saml_relay_statesMinAggregateOutputType | null
    _max: Saml_relay_statesMaxAggregateOutputType | null
  }

  type GetSaml_relay_statesGroupByPayload<T extends saml_relay_statesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Saml_relay_statesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Saml_relay_statesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Saml_relay_statesGroupByOutputType[P]>
            : GetScalarType<T[P], Saml_relay_statesGroupByOutputType[P]>
        }
      >
    >


  export type saml_relay_statesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sso_provider_id?: boolean
    request_id?: boolean
    for_email?: boolean
    redirect_to?: boolean
    created_at?: boolean
    updated_at?: boolean
    flow_state_id?: boolean
    flow_state?: boolean | saml_relay_states$flow_stateArgs<ExtArgs>
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["saml_relay_states"]>

  export type saml_relay_statesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sso_provider_id?: boolean
    request_id?: boolean
    for_email?: boolean
    redirect_to?: boolean
    created_at?: boolean
    updated_at?: boolean
    flow_state_id?: boolean
    flow_state?: boolean | saml_relay_states$flow_stateArgs<ExtArgs>
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["saml_relay_states"]>

  export type saml_relay_statesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sso_provider_id?: boolean
    request_id?: boolean
    for_email?: boolean
    redirect_to?: boolean
    created_at?: boolean
    updated_at?: boolean
    flow_state_id?: boolean
    flow_state?: boolean | saml_relay_states$flow_stateArgs<ExtArgs>
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["saml_relay_states"]>

  export type saml_relay_statesSelectScalar = {
    id?: boolean
    sso_provider_id?: boolean
    request_id?: boolean
    for_email?: boolean
    redirect_to?: boolean
    created_at?: boolean
    updated_at?: boolean
    flow_state_id?: boolean
  }

  export type saml_relay_statesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sso_provider_id" | "request_id" | "for_email" | "redirect_to" | "created_at" | "updated_at" | "flow_state_id", ExtArgs["result"]["saml_relay_states"]>
  export type saml_relay_statesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    flow_state?: boolean | saml_relay_states$flow_stateArgs<ExtArgs>
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }
  export type saml_relay_statesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    flow_state?: boolean | saml_relay_states$flow_stateArgs<ExtArgs>
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }
  export type saml_relay_statesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    flow_state?: boolean | saml_relay_states$flow_stateArgs<ExtArgs>
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }

  export type $saml_relay_statesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "saml_relay_states"
    objects: {
      flow_state: Prisma.$flow_statePayload<ExtArgs> | null
      sso_providers: Prisma.$sso_providersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sso_provider_id: string
      request_id: string
      for_email: string | null
      redirect_to: string | null
      created_at: Date | null
      updated_at: Date | null
      flow_state_id: string | null
    }, ExtArgs["result"]["saml_relay_states"]>
    composites: {}
  }

  type saml_relay_statesGetPayload<S extends boolean | null | undefined | saml_relay_statesDefaultArgs> = $Result.GetResult<Prisma.$saml_relay_statesPayload, S>

  type saml_relay_statesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<saml_relay_statesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Saml_relay_statesCountAggregateInputType | true
    }

  export interface saml_relay_statesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['saml_relay_states'], meta: { name: 'saml_relay_states' } }
    /**
     * Find zero or one Saml_relay_states that matches the filter.
     * @param {saml_relay_statesFindUniqueArgs} args - Arguments to find a Saml_relay_states
     * @example
     * // Get one Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends saml_relay_statesFindUniqueArgs>(args: SelectSubset<T, saml_relay_statesFindUniqueArgs<ExtArgs>>): Prisma__saml_relay_statesClient<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Saml_relay_states that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {saml_relay_statesFindUniqueOrThrowArgs} args - Arguments to find a Saml_relay_states
     * @example
     * // Get one Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends saml_relay_statesFindUniqueOrThrowArgs>(args: SelectSubset<T, saml_relay_statesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__saml_relay_statesClient<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Saml_relay_states that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_relay_statesFindFirstArgs} args - Arguments to find a Saml_relay_states
     * @example
     * // Get one Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends saml_relay_statesFindFirstArgs>(args?: SelectSubset<T, saml_relay_statesFindFirstArgs<ExtArgs>>): Prisma__saml_relay_statesClient<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Saml_relay_states that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_relay_statesFindFirstOrThrowArgs} args - Arguments to find a Saml_relay_states
     * @example
     * // Get one Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends saml_relay_statesFindFirstOrThrowArgs>(args?: SelectSubset<T, saml_relay_statesFindFirstOrThrowArgs<ExtArgs>>): Prisma__saml_relay_statesClient<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Saml_relay_states that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_relay_statesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.findMany()
     * 
     * // Get first 10 Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const saml_relay_statesWithIdOnly = await prisma.saml_relay_states.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends saml_relay_statesFindManyArgs>(args?: SelectSubset<T, saml_relay_statesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Saml_relay_states.
     * @param {saml_relay_statesCreateArgs} args - Arguments to create a Saml_relay_states.
     * @example
     * // Create one Saml_relay_states
     * const Saml_relay_states = await prisma.saml_relay_states.create({
     *   data: {
     *     // ... data to create a Saml_relay_states
     *   }
     * })
     * 
     */
    create<T extends saml_relay_statesCreateArgs>(args: SelectSubset<T, saml_relay_statesCreateArgs<ExtArgs>>): Prisma__saml_relay_statesClient<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Saml_relay_states.
     * @param {saml_relay_statesCreateManyArgs} args - Arguments to create many Saml_relay_states.
     * @example
     * // Create many Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends saml_relay_statesCreateManyArgs>(args?: SelectSubset<T, saml_relay_statesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Saml_relay_states and returns the data saved in the database.
     * @param {saml_relay_statesCreateManyAndReturnArgs} args - Arguments to create many Saml_relay_states.
     * @example
     * // Create many Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Saml_relay_states and only return the `id`
     * const saml_relay_statesWithIdOnly = await prisma.saml_relay_states.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends saml_relay_statesCreateManyAndReturnArgs>(args?: SelectSubset<T, saml_relay_statesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Saml_relay_states.
     * @param {saml_relay_statesDeleteArgs} args - Arguments to delete one Saml_relay_states.
     * @example
     * // Delete one Saml_relay_states
     * const Saml_relay_states = await prisma.saml_relay_states.delete({
     *   where: {
     *     // ... filter to delete one Saml_relay_states
     *   }
     * })
     * 
     */
    delete<T extends saml_relay_statesDeleteArgs>(args: SelectSubset<T, saml_relay_statesDeleteArgs<ExtArgs>>): Prisma__saml_relay_statesClient<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Saml_relay_states.
     * @param {saml_relay_statesUpdateArgs} args - Arguments to update one Saml_relay_states.
     * @example
     * // Update one Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends saml_relay_statesUpdateArgs>(args: SelectSubset<T, saml_relay_statesUpdateArgs<ExtArgs>>): Prisma__saml_relay_statesClient<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Saml_relay_states.
     * @param {saml_relay_statesDeleteManyArgs} args - Arguments to filter Saml_relay_states to delete.
     * @example
     * // Delete a few Saml_relay_states
     * const { count } = await prisma.saml_relay_states.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends saml_relay_statesDeleteManyArgs>(args?: SelectSubset<T, saml_relay_statesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Saml_relay_states.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_relay_statesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends saml_relay_statesUpdateManyArgs>(args: SelectSubset<T, saml_relay_statesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Saml_relay_states and returns the data updated in the database.
     * @param {saml_relay_statesUpdateManyAndReturnArgs} args - Arguments to update many Saml_relay_states.
     * @example
     * // Update many Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Saml_relay_states and only return the `id`
     * const saml_relay_statesWithIdOnly = await prisma.saml_relay_states.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends saml_relay_statesUpdateManyAndReturnArgs>(args: SelectSubset<T, saml_relay_statesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Saml_relay_states.
     * @param {saml_relay_statesUpsertArgs} args - Arguments to update or create a Saml_relay_states.
     * @example
     * // Update or create a Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.upsert({
     *   create: {
     *     // ... data to create a Saml_relay_states
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Saml_relay_states we want to update
     *   }
     * })
     */
    upsert<T extends saml_relay_statesUpsertArgs>(args: SelectSubset<T, saml_relay_statesUpsertArgs<ExtArgs>>): Prisma__saml_relay_statesClient<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Saml_relay_states.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_relay_statesCountArgs} args - Arguments to filter Saml_relay_states to count.
     * @example
     * // Count the number of Saml_relay_states
     * const count = await prisma.saml_relay_states.count({
     *   where: {
     *     // ... the filter for the Saml_relay_states we want to count
     *   }
     * })
    **/
    count<T extends saml_relay_statesCountArgs>(
      args?: Subset<T, saml_relay_statesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Saml_relay_statesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Saml_relay_states.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Saml_relay_statesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Saml_relay_statesAggregateArgs>(args: Subset<T, Saml_relay_statesAggregateArgs>): Prisma.PrismaPromise<GetSaml_relay_statesAggregateType<T>>

    /**
     * Group by Saml_relay_states.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_relay_statesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends saml_relay_statesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: saml_relay_statesGroupByArgs['orderBy'] }
        : { orderBy?: saml_relay_statesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, saml_relay_statesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSaml_relay_statesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the saml_relay_states model
   */
  readonly fields: saml_relay_statesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for saml_relay_states.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__saml_relay_statesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    flow_state<T extends saml_relay_states$flow_stateArgs<ExtArgs> = {}>(args?: Subset<T, saml_relay_states$flow_stateArgs<ExtArgs>>): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    sso_providers<T extends sso_providersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, sso_providersDefaultArgs<ExtArgs>>): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the saml_relay_states model
   */
  interface saml_relay_statesFieldRefs {
    readonly id: FieldRef<"saml_relay_states", 'String'>
    readonly sso_provider_id: FieldRef<"saml_relay_states", 'String'>
    readonly request_id: FieldRef<"saml_relay_states", 'String'>
    readonly for_email: FieldRef<"saml_relay_states", 'String'>
    readonly redirect_to: FieldRef<"saml_relay_states", 'String'>
    readonly created_at: FieldRef<"saml_relay_states", 'DateTime'>
    readonly updated_at: FieldRef<"saml_relay_states", 'DateTime'>
    readonly flow_state_id: FieldRef<"saml_relay_states", 'String'>
  }
    

  // Custom InputTypes
  /**
   * saml_relay_states findUnique
   */
  export type saml_relay_statesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * Filter, which saml_relay_states to fetch.
     */
    where: saml_relay_statesWhereUniqueInput
  }

  /**
   * saml_relay_states findUniqueOrThrow
   */
  export type saml_relay_statesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * Filter, which saml_relay_states to fetch.
     */
    where: saml_relay_statesWhereUniqueInput
  }

  /**
   * saml_relay_states findFirst
   */
  export type saml_relay_statesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * Filter, which saml_relay_states to fetch.
     */
    where?: saml_relay_statesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of saml_relay_states to fetch.
     */
    orderBy?: saml_relay_statesOrderByWithRelationInput | saml_relay_statesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for saml_relay_states.
     */
    cursor?: saml_relay_statesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` saml_relay_states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` saml_relay_states.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of saml_relay_states.
     */
    distinct?: Saml_relay_statesScalarFieldEnum | Saml_relay_statesScalarFieldEnum[]
  }

  /**
   * saml_relay_states findFirstOrThrow
   */
  export type saml_relay_statesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * Filter, which saml_relay_states to fetch.
     */
    where?: saml_relay_statesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of saml_relay_states to fetch.
     */
    orderBy?: saml_relay_statesOrderByWithRelationInput | saml_relay_statesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for saml_relay_states.
     */
    cursor?: saml_relay_statesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` saml_relay_states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` saml_relay_states.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of saml_relay_states.
     */
    distinct?: Saml_relay_statesScalarFieldEnum | Saml_relay_statesScalarFieldEnum[]
  }

  /**
   * saml_relay_states findMany
   */
  export type saml_relay_statesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * Filter, which saml_relay_states to fetch.
     */
    where?: saml_relay_statesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of saml_relay_states to fetch.
     */
    orderBy?: saml_relay_statesOrderByWithRelationInput | saml_relay_statesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing saml_relay_states.
     */
    cursor?: saml_relay_statesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` saml_relay_states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` saml_relay_states.
     */
    skip?: number
    distinct?: Saml_relay_statesScalarFieldEnum | Saml_relay_statesScalarFieldEnum[]
  }

  /**
   * saml_relay_states create
   */
  export type saml_relay_statesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * The data needed to create a saml_relay_states.
     */
    data: XOR<saml_relay_statesCreateInput, saml_relay_statesUncheckedCreateInput>
  }

  /**
   * saml_relay_states createMany
   */
  export type saml_relay_statesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many saml_relay_states.
     */
    data: saml_relay_statesCreateManyInput | saml_relay_statesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * saml_relay_states createManyAndReturn
   */
  export type saml_relay_statesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * The data used to create many saml_relay_states.
     */
    data: saml_relay_statesCreateManyInput | saml_relay_statesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * saml_relay_states update
   */
  export type saml_relay_statesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * The data needed to update a saml_relay_states.
     */
    data: XOR<saml_relay_statesUpdateInput, saml_relay_statesUncheckedUpdateInput>
    /**
     * Choose, which saml_relay_states to update.
     */
    where: saml_relay_statesWhereUniqueInput
  }

  /**
   * saml_relay_states updateMany
   */
  export type saml_relay_statesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update saml_relay_states.
     */
    data: XOR<saml_relay_statesUpdateManyMutationInput, saml_relay_statesUncheckedUpdateManyInput>
    /**
     * Filter which saml_relay_states to update
     */
    where?: saml_relay_statesWhereInput
    /**
     * Limit how many saml_relay_states to update.
     */
    limit?: number
  }

  /**
   * saml_relay_states updateManyAndReturn
   */
  export type saml_relay_statesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * The data used to update saml_relay_states.
     */
    data: XOR<saml_relay_statesUpdateManyMutationInput, saml_relay_statesUncheckedUpdateManyInput>
    /**
     * Filter which saml_relay_states to update
     */
    where?: saml_relay_statesWhereInput
    /**
     * Limit how many saml_relay_states to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * saml_relay_states upsert
   */
  export type saml_relay_statesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * The filter to search for the saml_relay_states to update in case it exists.
     */
    where: saml_relay_statesWhereUniqueInput
    /**
     * In case the saml_relay_states found by the `where` argument doesn't exist, create a new saml_relay_states with this data.
     */
    create: XOR<saml_relay_statesCreateInput, saml_relay_statesUncheckedCreateInput>
    /**
     * In case the saml_relay_states was found with the provided `where` argument, update it with this data.
     */
    update: XOR<saml_relay_statesUpdateInput, saml_relay_statesUncheckedUpdateInput>
  }

  /**
   * saml_relay_states delete
   */
  export type saml_relay_statesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * Filter which saml_relay_states to delete.
     */
    where: saml_relay_statesWhereUniqueInput
  }

  /**
   * saml_relay_states deleteMany
   */
  export type saml_relay_statesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which saml_relay_states to delete
     */
    where?: saml_relay_statesWhereInput
    /**
     * Limit how many saml_relay_states to delete.
     */
    limit?: number
  }

  /**
   * saml_relay_states.flow_state
   */
  export type saml_relay_states$flow_stateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: flow_stateInclude<ExtArgs> | null
    where?: flow_stateWhereInput
  }

  /**
   * saml_relay_states without action
   */
  export type saml_relay_statesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
  }


  /**
   * Model schema_migrations
   */

  export type AggregateSchema_migrations = {
    _count: Schema_migrationsCountAggregateOutputType | null
    _min: Schema_migrationsMinAggregateOutputType | null
    _max: Schema_migrationsMaxAggregateOutputType | null
  }

  export type Schema_migrationsMinAggregateOutputType = {
    version: string | null
  }

  export type Schema_migrationsMaxAggregateOutputType = {
    version: string | null
  }

  export type Schema_migrationsCountAggregateOutputType = {
    version: number
    _all: number
  }


  export type Schema_migrationsMinAggregateInputType = {
    version?: true
  }

  export type Schema_migrationsMaxAggregateInputType = {
    version?: true
  }

  export type Schema_migrationsCountAggregateInputType = {
    version?: true
    _all?: true
  }

  export type Schema_migrationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which schema_migrations to aggregate.
     */
    where?: schema_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of schema_migrations to fetch.
     */
    orderBy?: schema_migrationsOrderByWithRelationInput | schema_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: schema_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` schema_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` schema_migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned schema_migrations
    **/
    _count?: true | Schema_migrationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Schema_migrationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Schema_migrationsMaxAggregateInputType
  }

  export type GetSchema_migrationsAggregateType<T extends Schema_migrationsAggregateArgs> = {
        [P in keyof T & keyof AggregateSchema_migrations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSchema_migrations[P]>
      : GetScalarType<T[P], AggregateSchema_migrations[P]>
  }




  export type schema_migrationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: schema_migrationsWhereInput
    orderBy?: schema_migrationsOrderByWithAggregationInput | schema_migrationsOrderByWithAggregationInput[]
    by: Schema_migrationsScalarFieldEnum[] | Schema_migrationsScalarFieldEnum
    having?: schema_migrationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Schema_migrationsCountAggregateInputType | true
    _min?: Schema_migrationsMinAggregateInputType
    _max?: Schema_migrationsMaxAggregateInputType
  }

  export type Schema_migrationsGroupByOutputType = {
    version: string
    _count: Schema_migrationsCountAggregateOutputType | null
    _min: Schema_migrationsMinAggregateOutputType | null
    _max: Schema_migrationsMaxAggregateOutputType | null
  }

  type GetSchema_migrationsGroupByPayload<T extends schema_migrationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Schema_migrationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Schema_migrationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Schema_migrationsGroupByOutputType[P]>
            : GetScalarType<T[P], Schema_migrationsGroupByOutputType[P]>
        }
      >
    >


  export type schema_migrationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    version?: boolean
  }, ExtArgs["result"]["schema_migrations"]>

  export type schema_migrationsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    version?: boolean
  }, ExtArgs["result"]["schema_migrations"]>

  export type schema_migrationsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    version?: boolean
  }, ExtArgs["result"]["schema_migrations"]>

  export type schema_migrationsSelectScalar = {
    version?: boolean
  }

  export type schema_migrationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"version", ExtArgs["result"]["schema_migrations"]>

  export type $schema_migrationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "schema_migrations"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      version: string
    }, ExtArgs["result"]["schema_migrations"]>
    composites: {}
  }

  type schema_migrationsGetPayload<S extends boolean | null | undefined | schema_migrationsDefaultArgs> = $Result.GetResult<Prisma.$schema_migrationsPayload, S>

  type schema_migrationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<schema_migrationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Schema_migrationsCountAggregateInputType | true
    }

  export interface schema_migrationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['schema_migrations'], meta: { name: 'schema_migrations' } }
    /**
     * Find zero or one Schema_migrations that matches the filter.
     * @param {schema_migrationsFindUniqueArgs} args - Arguments to find a Schema_migrations
     * @example
     * // Get one Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends schema_migrationsFindUniqueArgs>(args: SelectSubset<T, schema_migrationsFindUniqueArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Schema_migrations that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {schema_migrationsFindUniqueOrThrowArgs} args - Arguments to find a Schema_migrations
     * @example
     * // Get one Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends schema_migrationsFindUniqueOrThrowArgs>(args: SelectSubset<T, schema_migrationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Schema_migrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsFindFirstArgs} args - Arguments to find a Schema_migrations
     * @example
     * // Get one Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends schema_migrationsFindFirstArgs>(args?: SelectSubset<T, schema_migrationsFindFirstArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Schema_migrations that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsFindFirstOrThrowArgs} args - Arguments to find a Schema_migrations
     * @example
     * // Get one Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends schema_migrationsFindFirstOrThrowArgs>(args?: SelectSubset<T, schema_migrationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Schema_migrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findMany()
     * 
     * // Get first 10 Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findMany({ take: 10 })
     * 
     * // Only select the `version`
     * const schema_migrationsWithVersionOnly = await prisma.schema_migrations.findMany({ select: { version: true } })
     * 
     */
    findMany<T extends schema_migrationsFindManyArgs>(args?: SelectSubset<T, schema_migrationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Schema_migrations.
     * @param {schema_migrationsCreateArgs} args - Arguments to create a Schema_migrations.
     * @example
     * // Create one Schema_migrations
     * const Schema_migrations = await prisma.schema_migrations.create({
     *   data: {
     *     // ... data to create a Schema_migrations
     *   }
     * })
     * 
     */
    create<T extends schema_migrationsCreateArgs>(args: SelectSubset<T, schema_migrationsCreateArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Schema_migrations.
     * @param {schema_migrationsCreateManyArgs} args - Arguments to create many Schema_migrations.
     * @example
     * // Create many Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends schema_migrationsCreateManyArgs>(args?: SelectSubset<T, schema_migrationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Schema_migrations and returns the data saved in the database.
     * @param {schema_migrationsCreateManyAndReturnArgs} args - Arguments to create many Schema_migrations.
     * @example
     * // Create many Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Schema_migrations and only return the `version`
     * const schema_migrationsWithVersionOnly = await prisma.schema_migrations.createManyAndReturn({
     *   select: { version: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends schema_migrationsCreateManyAndReturnArgs>(args?: SelectSubset<T, schema_migrationsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Schema_migrations.
     * @param {schema_migrationsDeleteArgs} args - Arguments to delete one Schema_migrations.
     * @example
     * // Delete one Schema_migrations
     * const Schema_migrations = await prisma.schema_migrations.delete({
     *   where: {
     *     // ... filter to delete one Schema_migrations
     *   }
     * })
     * 
     */
    delete<T extends schema_migrationsDeleteArgs>(args: SelectSubset<T, schema_migrationsDeleteArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Schema_migrations.
     * @param {schema_migrationsUpdateArgs} args - Arguments to update one Schema_migrations.
     * @example
     * // Update one Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends schema_migrationsUpdateArgs>(args: SelectSubset<T, schema_migrationsUpdateArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Schema_migrations.
     * @param {schema_migrationsDeleteManyArgs} args - Arguments to filter Schema_migrations to delete.
     * @example
     * // Delete a few Schema_migrations
     * const { count } = await prisma.schema_migrations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends schema_migrationsDeleteManyArgs>(args?: SelectSubset<T, schema_migrationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Schema_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends schema_migrationsUpdateManyArgs>(args: SelectSubset<T, schema_migrationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Schema_migrations and returns the data updated in the database.
     * @param {schema_migrationsUpdateManyAndReturnArgs} args - Arguments to update many Schema_migrations.
     * @example
     * // Update many Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Schema_migrations and only return the `version`
     * const schema_migrationsWithVersionOnly = await prisma.schema_migrations.updateManyAndReturn({
     *   select: { version: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends schema_migrationsUpdateManyAndReturnArgs>(args: SelectSubset<T, schema_migrationsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Schema_migrations.
     * @param {schema_migrationsUpsertArgs} args - Arguments to update or create a Schema_migrations.
     * @example
     * // Update or create a Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.upsert({
     *   create: {
     *     // ... data to create a Schema_migrations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Schema_migrations we want to update
     *   }
     * })
     */
    upsert<T extends schema_migrationsUpsertArgs>(args: SelectSubset<T, schema_migrationsUpsertArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Schema_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsCountArgs} args - Arguments to filter Schema_migrations to count.
     * @example
     * // Count the number of Schema_migrations
     * const count = await prisma.schema_migrations.count({
     *   where: {
     *     // ... the filter for the Schema_migrations we want to count
     *   }
     * })
    **/
    count<T extends schema_migrationsCountArgs>(
      args?: Subset<T, schema_migrationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Schema_migrationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Schema_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Schema_migrationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Schema_migrationsAggregateArgs>(args: Subset<T, Schema_migrationsAggregateArgs>): Prisma.PrismaPromise<GetSchema_migrationsAggregateType<T>>

    /**
     * Group by Schema_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends schema_migrationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: schema_migrationsGroupByArgs['orderBy'] }
        : { orderBy?: schema_migrationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, schema_migrationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSchema_migrationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the schema_migrations model
   */
  readonly fields: schema_migrationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for schema_migrations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__schema_migrationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the schema_migrations model
   */
  interface schema_migrationsFieldRefs {
    readonly version: FieldRef<"schema_migrations", 'String'>
  }
    

  // Custom InputTypes
  /**
   * schema_migrations findUnique
   */
  export type schema_migrationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which schema_migrations to fetch.
     */
    where: schema_migrationsWhereUniqueInput
  }

  /**
   * schema_migrations findUniqueOrThrow
   */
  export type schema_migrationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which schema_migrations to fetch.
     */
    where: schema_migrationsWhereUniqueInput
  }

  /**
   * schema_migrations findFirst
   */
  export type schema_migrationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which schema_migrations to fetch.
     */
    where?: schema_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of schema_migrations to fetch.
     */
    orderBy?: schema_migrationsOrderByWithRelationInput | schema_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for schema_migrations.
     */
    cursor?: schema_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` schema_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` schema_migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of schema_migrations.
     */
    distinct?: Schema_migrationsScalarFieldEnum | Schema_migrationsScalarFieldEnum[]
  }

  /**
   * schema_migrations findFirstOrThrow
   */
  export type schema_migrationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which schema_migrations to fetch.
     */
    where?: schema_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of schema_migrations to fetch.
     */
    orderBy?: schema_migrationsOrderByWithRelationInput | schema_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for schema_migrations.
     */
    cursor?: schema_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` schema_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` schema_migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of schema_migrations.
     */
    distinct?: Schema_migrationsScalarFieldEnum | Schema_migrationsScalarFieldEnum[]
  }

  /**
   * schema_migrations findMany
   */
  export type schema_migrationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which schema_migrations to fetch.
     */
    where?: schema_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of schema_migrations to fetch.
     */
    orderBy?: schema_migrationsOrderByWithRelationInput | schema_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing schema_migrations.
     */
    cursor?: schema_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` schema_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` schema_migrations.
     */
    skip?: number
    distinct?: Schema_migrationsScalarFieldEnum | Schema_migrationsScalarFieldEnum[]
  }

  /**
   * schema_migrations create
   */
  export type schema_migrationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * The data needed to create a schema_migrations.
     */
    data: XOR<schema_migrationsCreateInput, schema_migrationsUncheckedCreateInput>
  }

  /**
   * schema_migrations createMany
   */
  export type schema_migrationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many schema_migrations.
     */
    data: schema_migrationsCreateManyInput | schema_migrationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * schema_migrations createManyAndReturn
   */
  export type schema_migrationsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * The data used to create many schema_migrations.
     */
    data: schema_migrationsCreateManyInput | schema_migrationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * schema_migrations update
   */
  export type schema_migrationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * The data needed to update a schema_migrations.
     */
    data: XOR<schema_migrationsUpdateInput, schema_migrationsUncheckedUpdateInput>
    /**
     * Choose, which schema_migrations to update.
     */
    where: schema_migrationsWhereUniqueInput
  }

  /**
   * schema_migrations updateMany
   */
  export type schema_migrationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update schema_migrations.
     */
    data: XOR<schema_migrationsUpdateManyMutationInput, schema_migrationsUncheckedUpdateManyInput>
    /**
     * Filter which schema_migrations to update
     */
    where?: schema_migrationsWhereInput
    /**
     * Limit how many schema_migrations to update.
     */
    limit?: number
  }

  /**
   * schema_migrations updateManyAndReturn
   */
  export type schema_migrationsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * The data used to update schema_migrations.
     */
    data: XOR<schema_migrationsUpdateManyMutationInput, schema_migrationsUncheckedUpdateManyInput>
    /**
     * Filter which schema_migrations to update
     */
    where?: schema_migrationsWhereInput
    /**
     * Limit how many schema_migrations to update.
     */
    limit?: number
  }

  /**
   * schema_migrations upsert
   */
  export type schema_migrationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * The filter to search for the schema_migrations to update in case it exists.
     */
    where: schema_migrationsWhereUniqueInput
    /**
     * In case the schema_migrations found by the `where` argument doesn't exist, create a new schema_migrations with this data.
     */
    create: XOR<schema_migrationsCreateInput, schema_migrationsUncheckedCreateInput>
    /**
     * In case the schema_migrations was found with the provided `where` argument, update it with this data.
     */
    update: XOR<schema_migrationsUpdateInput, schema_migrationsUncheckedUpdateInput>
  }

  /**
   * schema_migrations delete
   */
  export type schema_migrationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * Filter which schema_migrations to delete.
     */
    where: schema_migrationsWhereUniqueInput
  }

  /**
   * schema_migrations deleteMany
   */
  export type schema_migrationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which schema_migrations to delete
     */
    where?: schema_migrationsWhereInput
    /**
     * Limit how many schema_migrations to delete.
     */
    limit?: number
  }

  /**
   * schema_migrations without action
   */
  export type schema_migrationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
  }


  /**
   * Model sessions
   */

  export type AggregateSessions = {
    _count: SessionsCountAggregateOutputType | null
    _min: SessionsMinAggregateOutputType | null
    _max: SessionsMaxAggregateOutputType | null
  }

  export type SessionsMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    created_at: Date | null
    updated_at: Date | null
    factor_id: string | null
    aal: $Enums.aal_level | null
    not_after: Date | null
    refreshed_at: Date | null
    user_agent: string | null
    ip: string | null
    tag: string | null
  }

  export type SessionsMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    created_at: Date | null
    updated_at: Date | null
    factor_id: string | null
    aal: $Enums.aal_level | null
    not_after: Date | null
    refreshed_at: Date | null
    user_agent: string | null
    ip: string | null
    tag: string | null
  }

  export type SessionsCountAggregateOutputType = {
    id: number
    user_id: number
    created_at: number
    updated_at: number
    factor_id: number
    aal: number
    not_after: number
    refreshed_at: number
    user_agent: number
    ip: number
    tag: number
    _all: number
  }


  export type SessionsMinAggregateInputType = {
    id?: true
    user_id?: true
    created_at?: true
    updated_at?: true
    factor_id?: true
    aal?: true
    not_after?: true
    refreshed_at?: true
    user_agent?: true
    ip?: true
    tag?: true
  }

  export type SessionsMaxAggregateInputType = {
    id?: true
    user_id?: true
    created_at?: true
    updated_at?: true
    factor_id?: true
    aal?: true
    not_after?: true
    refreshed_at?: true
    user_agent?: true
    ip?: true
    tag?: true
  }

  export type SessionsCountAggregateInputType = {
    id?: true
    user_id?: true
    created_at?: true
    updated_at?: true
    factor_id?: true
    aal?: true
    not_after?: true
    refreshed_at?: true
    user_agent?: true
    ip?: true
    tag?: true
    _all?: true
  }

  export type SessionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sessions to aggregate.
     */
    where?: sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sessions to fetch.
     */
    orderBy?: sessionsOrderByWithRelationInput | sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sessions
    **/
    _count?: true | SessionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SessionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SessionsMaxAggregateInputType
  }

  export type GetSessionsAggregateType<T extends SessionsAggregateArgs> = {
        [P in keyof T & keyof AggregateSessions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSessions[P]>
      : GetScalarType<T[P], AggregateSessions[P]>
  }




  export type sessionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sessionsWhereInput
    orderBy?: sessionsOrderByWithAggregationInput | sessionsOrderByWithAggregationInput[]
    by: SessionsScalarFieldEnum[] | SessionsScalarFieldEnum
    having?: sessionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SessionsCountAggregateInputType | true
    _min?: SessionsMinAggregateInputType
    _max?: SessionsMaxAggregateInputType
  }

  export type SessionsGroupByOutputType = {
    id: string
    user_id: string
    created_at: Date | null
    updated_at: Date | null
    factor_id: string | null
    aal: $Enums.aal_level | null
    not_after: Date | null
    refreshed_at: Date | null
    user_agent: string | null
    ip: string | null
    tag: string | null
    _count: SessionsCountAggregateOutputType | null
    _min: SessionsMinAggregateOutputType | null
    _max: SessionsMaxAggregateOutputType | null
  }

  type GetSessionsGroupByPayload<T extends sessionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SessionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SessionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SessionsGroupByOutputType[P]>
            : GetScalarType<T[P], SessionsGroupByOutputType[P]>
        }
      >
    >


  export type sessionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    factor_id?: boolean
    aal?: boolean
    not_after?: boolean
    refreshed_at?: boolean
    user_agent?: boolean
    ip?: boolean
    tag?: boolean
    mfa_amr_claims?: boolean | sessions$mfa_amr_claimsArgs<ExtArgs>
    refresh_tokens?: boolean | sessions$refresh_tokensArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | SessionsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sessions"]>

  export type sessionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    factor_id?: boolean
    aal?: boolean
    not_after?: boolean
    refreshed_at?: boolean
    user_agent?: boolean
    ip?: boolean
    tag?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sessions"]>

  export type sessionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    factor_id?: boolean
    aal?: boolean
    not_after?: boolean
    refreshed_at?: boolean
    user_agent?: boolean
    ip?: boolean
    tag?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sessions"]>

  export type sessionsSelectScalar = {
    id?: boolean
    user_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    factor_id?: boolean
    aal?: boolean
    not_after?: boolean
    refreshed_at?: boolean
    user_agent?: boolean
    ip?: boolean
    tag?: boolean
  }

  export type sessionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "created_at" | "updated_at" | "factor_id" | "aal" | "not_after" | "refreshed_at" | "user_agent" | "ip" | "tag", ExtArgs["result"]["sessions"]>
  export type sessionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mfa_amr_claims?: boolean | sessions$mfa_amr_claimsArgs<ExtArgs>
    refresh_tokens?: boolean | sessions$refresh_tokensArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | SessionsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type sessionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type sessionsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $sessionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sessions"
    objects: {
      mfa_amr_claims: Prisma.$mfa_amr_claimsPayload<ExtArgs>[]
      refresh_tokens: Prisma.$refresh_tokensPayload<ExtArgs>[]
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      created_at: Date | null
      updated_at: Date | null
      factor_id: string | null
      aal: $Enums.aal_level | null
      not_after: Date | null
      refreshed_at: Date | null
      user_agent: string | null
      ip: string | null
      tag: string | null
    }, ExtArgs["result"]["sessions"]>
    composites: {}
  }

  type sessionsGetPayload<S extends boolean | null | undefined | sessionsDefaultArgs> = $Result.GetResult<Prisma.$sessionsPayload, S>

  type sessionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sessionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SessionsCountAggregateInputType | true
    }

  export interface sessionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sessions'], meta: { name: 'sessions' } }
    /**
     * Find zero or one Sessions that matches the filter.
     * @param {sessionsFindUniqueArgs} args - Arguments to find a Sessions
     * @example
     * // Get one Sessions
     * const sessions = await prisma.sessions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sessionsFindUniqueArgs>(args: SelectSubset<T, sessionsFindUniqueArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sessions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sessionsFindUniqueOrThrowArgs} args - Arguments to find a Sessions
     * @example
     * // Get one Sessions
     * const sessions = await prisma.sessions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sessionsFindUniqueOrThrowArgs>(args: SelectSubset<T, sessionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsFindFirstArgs} args - Arguments to find a Sessions
     * @example
     * // Get one Sessions
     * const sessions = await prisma.sessions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sessionsFindFirstArgs>(args?: SelectSubset<T, sessionsFindFirstArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sessions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsFindFirstOrThrowArgs} args - Arguments to find a Sessions
     * @example
     * // Get one Sessions
     * const sessions = await prisma.sessions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sessionsFindFirstOrThrowArgs>(args?: SelectSubset<T, sessionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sessions
     * const sessions = await prisma.sessions.findMany()
     * 
     * // Get first 10 Sessions
     * const sessions = await prisma.sessions.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sessionsWithIdOnly = await prisma.sessions.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sessionsFindManyArgs>(args?: SelectSubset<T, sessionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sessions.
     * @param {sessionsCreateArgs} args - Arguments to create a Sessions.
     * @example
     * // Create one Sessions
     * const Sessions = await prisma.sessions.create({
     *   data: {
     *     // ... data to create a Sessions
     *   }
     * })
     * 
     */
    create<T extends sessionsCreateArgs>(args: SelectSubset<T, sessionsCreateArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sessions.
     * @param {sessionsCreateManyArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const sessions = await prisma.sessions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sessionsCreateManyArgs>(args?: SelectSubset<T, sessionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sessions and returns the data saved in the database.
     * @param {sessionsCreateManyAndReturnArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const sessions = await prisma.sessions.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sessions and only return the `id`
     * const sessionsWithIdOnly = await prisma.sessions.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends sessionsCreateManyAndReturnArgs>(args?: SelectSubset<T, sessionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Sessions.
     * @param {sessionsDeleteArgs} args - Arguments to delete one Sessions.
     * @example
     * // Delete one Sessions
     * const Sessions = await prisma.sessions.delete({
     *   where: {
     *     // ... filter to delete one Sessions
     *   }
     * })
     * 
     */
    delete<T extends sessionsDeleteArgs>(args: SelectSubset<T, sessionsDeleteArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sessions.
     * @param {sessionsUpdateArgs} args - Arguments to update one Sessions.
     * @example
     * // Update one Sessions
     * const sessions = await prisma.sessions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sessionsUpdateArgs>(args: SelectSubset<T, sessionsUpdateArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sessions.
     * @param {sessionsDeleteManyArgs} args - Arguments to filter Sessions to delete.
     * @example
     * // Delete a few Sessions
     * const { count } = await prisma.sessions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sessionsDeleteManyArgs>(args?: SelectSubset<T, sessionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sessions
     * const sessions = await prisma.sessions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sessionsUpdateManyArgs>(args: SelectSubset<T, sessionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions and returns the data updated in the database.
     * @param {sessionsUpdateManyAndReturnArgs} args - Arguments to update many Sessions.
     * @example
     * // Update many Sessions
     * const sessions = await prisma.sessions.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sessions and only return the `id`
     * const sessionsWithIdOnly = await prisma.sessions.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends sessionsUpdateManyAndReturnArgs>(args: SelectSubset<T, sessionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Sessions.
     * @param {sessionsUpsertArgs} args - Arguments to update or create a Sessions.
     * @example
     * // Update or create a Sessions
     * const sessions = await prisma.sessions.upsert({
     *   create: {
     *     // ... data to create a Sessions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sessions we want to update
     *   }
     * })
     */
    upsert<T extends sessionsUpsertArgs>(args: SelectSubset<T, sessionsUpsertArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsCountArgs} args - Arguments to filter Sessions to count.
     * @example
     * // Count the number of Sessions
     * const count = await prisma.sessions.count({
     *   where: {
     *     // ... the filter for the Sessions we want to count
     *   }
     * })
    **/
    count<T extends sessionsCountArgs>(
      args?: Subset<T, sessionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SessionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SessionsAggregateArgs>(args: Subset<T, SessionsAggregateArgs>): Prisma.PrismaPromise<GetSessionsAggregateType<T>>

    /**
     * Group by Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sessionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sessionsGroupByArgs['orderBy'] }
        : { orderBy?: sessionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sessionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSessionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sessions model
   */
  readonly fields: sessionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sessions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sessionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    mfa_amr_claims<T extends sessions$mfa_amr_claimsArgs<ExtArgs> = {}>(args?: Subset<T, sessions$mfa_amr_claimsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    refresh_tokens<T extends sessions$refresh_tokensArgs<ExtArgs> = {}>(args?: Subset<T, sessions$refresh_tokensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sessions model
   */
  interface sessionsFieldRefs {
    readonly id: FieldRef<"sessions", 'String'>
    readonly user_id: FieldRef<"sessions", 'String'>
    readonly created_at: FieldRef<"sessions", 'DateTime'>
    readonly updated_at: FieldRef<"sessions", 'DateTime'>
    readonly factor_id: FieldRef<"sessions", 'String'>
    readonly aal: FieldRef<"sessions", 'aal_level'>
    readonly not_after: FieldRef<"sessions", 'DateTime'>
    readonly refreshed_at: FieldRef<"sessions", 'DateTime'>
    readonly user_agent: FieldRef<"sessions", 'String'>
    readonly ip: FieldRef<"sessions", 'String'>
    readonly tag: FieldRef<"sessions", 'String'>
  }
    

  // Custom InputTypes
  /**
   * sessions findUnique
   */
  export type sessionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * Filter, which sessions to fetch.
     */
    where: sessionsWhereUniqueInput
  }

  /**
   * sessions findUniqueOrThrow
   */
  export type sessionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * Filter, which sessions to fetch.
     */
    where: sessionsWhereUniqueInput
  }

  /**
   * sessions findFirst
   */
  export type sessionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * Filter, which sessions to fetch.
     */
    where?: sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sessions to fetch.
     */
    orderBy?: sessionsOrderByWithRelationInput | sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sessions.
     */
    cursor?: sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sessions.
     */
    distinct?: SessionsScalarFieldEnum | SessionsScalarFieldEnum[]
  }

  /**
   * sessions findFirstOrThrow
   */
  export type sessionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * Filter, which sessions to fetch.
     */
    where?: sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sessions to fetch.
     */
    orderBy?: sessionsOrderByWithRelationInput | sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sessions.
     */
    cursor?: sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sessions.
     */
    distinct?: SessionsScalarFieldEnum | SessionsScalarFieldEnum[]
  }

  /**
   * sessions findMany
   */
  export type sessionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * Filter, which sessions to fetch.
     */
    where?: sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sessions to fetch.
     */
    orderBy?: sessionsOrderByWithRelationInput | sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sessions.
     */
    cursor?: sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sessions.
     */
    skip?: number
    distinct?: SessionsScalarFieldEnum | SessionsScalarFieldEnum[]
  }

  /**
   * sessions create
   */
  export type sessionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * The data needed to create a sessions.
     */
    data: XOR<sessionsCreateInput, sessionsUncheckedCreateInput>
  }

  /**
   * sessions createMany
   */
  export type sessionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sessions.
     */
    data: sessionsCreateManyInput | sessionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sessions createManyAndReturn
   */
  export type sessionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * The data used to create many sessions.
     */
    data: sessionsCreateManyInput | sessionsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * sessions update
   */
  export type sessionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * The data needed to update a sessions.
     */
    data: XOR<sessionsUpdateInput, sessionsUncheckedUpdateInput>
    /**
     * Choose, which sessions to update.
     */
    where: sessionsWhereUniqueInput
  }

  /**
   * sessions updateMany
   */
  export type sessionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sessions.
     */
    data: XOR<sessionsUpdateManyMutationInput, sessionsUncheckedUpdateManyInput>
    /**
     * Filter which sessions to update
     */
    where?: sessionsWhereInput
    /**
     * Limit how many sessions to update.
     */
    limit?: number
  }

  /**
   * sessions updateManyAndReturn
   */
  export type sessionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * The data used to update sessions.
     */
    data: XOR<sessionsUpdateManyMutationInput, sessionsUncheckedUpdateManyInput>
    /**
     * Filter which sessions to update
     */
    where?: sessionsWhereInput
    /**
     * Limit how many sessions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * sessions upsert
   */
  export type sessionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * The filter to search for the sessions to update in case it exists.
     */
    where: sessionsWhereUniqueInput
    /**
     * In case the sessions found by the `where` argument doesn't exist, create a new sessions with this data.
     */
    create: XOR<sessionsCreateInput, sessionsUncheckedCreateInput>
    /**
     * In case the sessions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sessionsUpdateInput, sessionsUncheckedUpdateInput>
  }

  /**
   * sessions delete
   */
  export type sessionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * Filter which sessions to delete.
     */
    where: sessionsWhereUniqueInput
  }

  /**
   * sessions deleteMany
   */
  export type sessionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sessions to delete
     */
    where?: sessionsWhereInput
    /**
     * Limit how many sessions to delete.
     */
    limit?: number
  }

  /**
   * sessions.mfa_amr_claims
   */
  export type sessions$mfa_amr_claimsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    where?: mfa_amr_claimsWhereInput
    orderBy?: mfa_amr_claimsOrderByWithRelationInput | mfa_amr_claimsOrderByWithRelationInput[]
    cursor?: mfa_amr_claimsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Mfa_amr_claimsScalarFieldEnum | Mfa_amr_claimsScalarFieldEnum[]
  }

  /**
   * sessions.refresh_tokens
   */
  export type sessions$refresh_tokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    where?: refresh_tokensWhereInput
    orderBy?: refresh_tokensOrderByWithRelationInput | refresh_tokensOrderByWithRelationInput[]
    cursor?: refresh_tokensWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Refresh_tokensScalarFieldEnum | Refresh_tokensScalarFieldEnum[]
  }

  /**
   * sessions without action
   */
  export type sessionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsInclude<ExtArgs> | null
  }


  /**
   * Model sso_domains
   */

  export type AggregateSso_domains = {
    _count: Sso_domainsCountAggregateOutputType | null
    _min: Sso_domainsMinAggregateOutputType | null
    _max: Sso_domainsMaxAggregateOutputType | null
  }

  export type Sso_domainsMinAggregateOutputType = {
    id: string | null
    sso_provider_id: string | null
    domain: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Sso_domainsMaxAggregateOutputType = {
    id: string | null
    sso_provider_id: string | null
    domain: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Sso_domainsCountAggregateOutputType = {
    id: number
    sso_provider_id: number
    domain: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Sso_domainsMinAggregateInputType = {
    id?: true
    sso_provider_id?: true
    domain?: true
    created_at?: true
    updated_at?: true
  }

  export type Sso_domainsMaxAggregateInputType = {
    id?: true
    sso_provider_id?: true
    domain?: true
    created_at?: true
    updated_at?: true
  }

  export type Sso_domainsCountAggregateInputType = {
    id?: true
    sso_provider_id?: true
    domain?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Sso_domainsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sso_domains to aggregate.
     */
    where?: sso_domainsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_domains to fetch.
     */
    orderBy?: sso_domainsOrderByWithRelationInput | sso_domainsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sso_domainsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_domains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_domains.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sso_domains
    **/
    _count?: true | Sso_domainsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sso_domainsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sso_domainsMaxAggregateInputType
  }

  export type GetSso_domainsAggregateType<T extends Sso_domainsAggregateArgs> = {
        [P in keyof T & keyof AggregateSso_domains]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSso_domains[P]>
      : GetScalarType<T[P], AggregateSso_domains[P]>
  }




  export type sso_domainsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sso_domainsWhereInput
    orderBy?: sso_domainsOrderByWithAggregationInput | sso_domainsOrderByWithAggregationInput[]
    by: Sso_domainsScalarFieldEnum[] | Sso_domainsScalarFieldEnum
    having?: sso_domainsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sso_domainsCountAggregateInputType | true
    _min?: Sso_domainsMinAggregateInputType
    _max?: Sso_domainsMaxAggregateInputType
  }

  export type Sso_domainsGroupByOutputType = {
    id: string
    sso_provider_id: string
    domain: string
    created_at: Date | null
    updated_at: Date | null
    _count: Sso_domainsCountAggregateOutputType | null
    _min: Sso_domainsMinAggregateOutputType | null
    _max: Sso_domainsMaxAggregateOutputType | null
  }

  type GetSso_domainsGroupByPayload<T extends sso_domainsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sso_domainsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sso_domainsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sso_domainsGroupByOutputType[P]>
            : GetScalarType<T[P], Sso_domainsGroupByOutputType[P]>
        }
      >
    >


  export type sso_domainsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sso_provider_id?: boolean
    domain?: boolean
    created_at?: boolean
    updated_at?: boolean
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sso_domains"]>

  export type sso_domainsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sso_provider_id?: boolean
    domain?: boolean
    created_at?: boolean
    updated_at?: boolean
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sso_domains"]>

  export type sso_domainsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sso_provider_id?: boolean
    domain?: boolean
    created_at?: boolean
    updated_at?: boolean
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sso_domains"]>

  export type sso_domainsSelectScalar = {
    id?: boolean
    sso_provider_id?: boolean
    domain?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type sso_domainsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sso_provider_id" | "domain" | "created_at" | "updated_at", ExtArgs["result"]["sso_domains"]>
  export type sso_domainsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }
  export type sso_domainsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }
  export type sso_domainsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }

  export type $sso_domainsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sso_domains"
    objects: {
      sso_providers: Prisma.$sso_providersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sso_provider_id: string
      domain: string
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["sso_domains"]>
    composites: {}
  }

  type sso_domainsGetPayload<S extends boolean | null | undefined | sso_domainsDefaultArgs> = $Result.GetResult<Prisma.$sso_domainsPayload, S>

  type sso_domainsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sso_domainsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sso_domainsCountAggregateInputType | true
    }

  export interface sso_domainsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sso_domains'], meta: { name: 'sso_domains' } }
    /**
     * Find zero or one Sso_domains that matches the filter.
     * @param {sso_domainsFindUniqueArgs} args - Arguments to find a Sso_domains
     * @example
     * // Get one Sso_domains
     * const sso_domains = await prisma.sso_domains.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sso_domainsFindUniqueArgs>(args: SelectSubset<T, sso_domainsFindUniqueArgs<ExtArgs>>): Prisma__sso_domainsClient<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sso_domains that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sso_domainsFindUniqueOrThrowArgs} args - Arguments to find a Sso_domains
     * @example
     * // Get one Sso_domains
     * const sso_domains = await prisma.sso_domains.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sso_domainsFindUniqueOrThrowArgs>(args: SelectSubset<T, sso_domainsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sso_domainsClient<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sso_domains that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_domainsFindFirstArgs} args - Arguments to find a Sso_domains
     * @example
     * // Get one Sso_domains
     * const sso_domains = await prisma.sso_domains.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sso_domainsFindFirstArgs>(args?: SelectSubset<T, sso_domainsFindFirstArgs<ExtArgs>>): Prisma__sso_domainsClient<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sso_domains that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_domainsFindFirstOrThrowArgs} args - Arguments to find a Sso_domains
     * @example
     * // Get one Sso_domains
     * const sso_domains = await prisma.sso_domains.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sso_domainsFindFirstOrThrowArgs>(args?: SelectSubset<T, sso_domainsFindFirstOrThrowArgs<ExtArgs>>): Prisma__sso_domainsClient<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sso_domains that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_domainsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sso_domains
     * const sso_domains = await prisma.sso_domains.findMany()
     * 
     * // Get first 10 Sso_domains
     * const sso_domains = await prisma.sso_domains.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sso_domainsWithIdOnly = await prisma.sso_domains.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sso_domainsFindManyArgs>(args?: SelectSubset<T, sso_domainsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sso_domains.
     * @param {sso_domainsCreateArgs} args - Arguments to create a Sso_domains.
     * @example
     * // Create one Sso_domains
     * const Sso_domains = await prisma.sso_domains.create({
     *   data: {
     *     // ... data to create a Sso_domains
     *   }
     * })
     * 
     */
    create<T extends sso_domainsCreateArgs>(args: SelectSubset<T, sso_domainsCreateArgs<ExtArgs>>): Prisma__sso_domainsClient<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sso_domains.
     * @param {sso_domainsCreateManyArgs} args - Arguments to create many Sso_domains.
     * @example
     * // Create many Sso_domains
     * const sso_domains = await prisma.sso_domains.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sso_domainsCreateManyArgs>(args?: SelectSubset<T, sso_domainsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sso_domains and returns the data saved in the database.
     * @param {sso_domainsCreateManyAndReturnArgs} args - Arguments to create many Sso_domains.
     * @example
     * // Create many Sso_domains
     * const sso_domains = await prisma.sso_domains.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sso_domains and only return the `id`
     * const sso_domainsWithIdOnly = await prisma.sso_domains.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends sso_domainsCreateManyAndReturnArgs>(args?: SelectSubset<T, sso_domainsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Sso_domains.
     * @param {sso_domainsDeleteArgs} args - Arguments to delete one Sso_domains.
     * @example
     * // Delete one Sso_domains
     * const Sso_domains = await prisma.sso_domains.delete({
     *   where: {
     *     // ... filter to delete one Sso_domains
     *   }
     * })
     * 
     */
    delete<T extends sso_domainsDeleteArgs>(args: SelectSubset<T, sso_domainsDeleteArgs<ExtArgs>>): Prisma__sso_domainsClient<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sso_domains.
     * @param {sso_domainsUpdateArgs} args - Arguments to update one Sso_domains.
     * @example
     * // Update one Sso_domains
     * const sso_domains = await prisma.sso_domains.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sso_domainsUpdateArgs>(args: SelectSubset<T, sso_domainsUpdateArgs<ExtArgs>>): Prisma__sso_domainsClient<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sso_domains.
     * @param {sso_domainsDeleteManyArgs} args - Arguments to filter Sso_domains to delete.
     * @example
     * // Delete a few Sso_domains
     * const { count } = await prisma.sso_domains.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sso_domainsDeleteManyArgs>(args?: SelectSubset<T, sso_domainsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sso_domains.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_domainsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sso_domains
     * const sso_domains = await prisma.sso_domains.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sso_domainsUpdateManyArgs>(args: SelectSubset<T, sso_domainsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sso_domains and returns the data updated in the database.
     * @param {sso_domainsUpdateManyAndReturnArgs} args - Arguments to update many Sso_domains.
     * @example
     * // Update many Sso_domains
     * const sso_domains = await prisma.sso_domains.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sso_domains and only return the `id`
     * const sso_domainsWithIdOnly = await prisma.sso_domains.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends sso_domainsUpdateManyAndReturnArgs>(args: SelectSubset<T, sso_domainsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Sso_domains.
     * @param {sso_domainsUpsertArgs} args - Arguments to update or create a Sso_domains.
     * @example
     * // Update or create a Sso_domains
     * const sso_domains = await prisma.sso_domains.upsert({
     *   create: {
     *     // ... data to create a Sso_domains
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sso_domains we want to update
     *   }
     * })
     */
    upsert<T extends sso_domainsUpsertArgs>(args: SelectSubset<T, sso_domainsUpsertArgs<ExtArgs>>): Prisma__sso_domainsClient<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sso_domains.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_domainsCountArgs} args - Arguments to filter Sso_domains to count.
     * @example
     * // Count the number of Sso_domains
     * const count = await prisma.sso_domains.count({
     *   where: {
     *     // ... the filter for the Sso_domains we want to count
     *   }
     * })
    **/
    count<T extends sso_domainsCountArgs>(
      args?: Subset<T, sso_domainsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sso_domainsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sso_domains.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sso_domainsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sso_domainsAggregateArgs>(args: Subset<T, Sso_domainsAggregateArgs>): Prisma.PrismaPromise<GetSso_domainsAggregateType<T>>

    /**
     * Group by Sso_domains.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_domainsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sso_domainsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sso_domainsGroupByArgs['orderBy'] }
        : { orderBy?: sso_domainsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sso_domainsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSso_domainsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sso_domains model
   */
  readonly fields: sso_domainsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sso_domains.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sso_domainsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sso_providers<T extends sso_providersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, sso_providersDefaultArgs<ExtArgs>>): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sso_domains model
   */
  interface sso_domainsFieldRefs {
    readonly id: FieldRef<"sso_domains", 'String'>
    readonly sso_provider_id: FieldRef<"sso_domains", 'String'>
    readonly domain: FieldRef<"sso_domains", 'String'>
    readonly created_at: FieldRef<"sso_domains", 'DateTime'>
    readonly updated_at: FieldRef<"sso_domains", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sso_domains findUnique
   */
  export type sso_domainsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * Filter, which sso_domains to fetch.
     */
    where: sso_domainsWhereUniqueInput
  }

  /**
   * sso_domains findUniqueOrThrow
   */
  export type sso_domainsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * Filter, which sso_domains to fetch.
     */
    where: sso_domainsWhereUniqueInput
  }

  /**
   * sso_domains findFirst
   */
  export type sso_domainsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * Filter, which sso_domains to fetch.
     */
    where?: sso_domainsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_domains to fetch.
     */
    orderBy?: sso_domainsOrderByWithRelationInput | sso_domainsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sso_domains.
     */
    cursor?: sso_domainsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_domains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_domains.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sso_domains.
     */
    distinct?: Sso_domainsScalarFieldEnum | Sso_domainsScalarFieldEnum[]
  }

  /**
   * sso_domains findFirstOrThrow
   */
  export type sso_domainsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * Filter, which sso_domains to fetch.
     */
    where?: sso_domainsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_domains to fetch.
     */
    orderBy?: sso_domainsOrderByWithRelationInput | sso_domainsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sso_domains.
     */
    cursor?: sso_domainsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_domains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_domains.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sso_domains.
     */
    distinct?: Sso_domainsScalarFieldEnum | Sso_domainsScalarFieldEnum[]
  }

  /**
   * sso_domains findMany
   */
  export type sso_domainsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * Filter, which sso_domains to fetch.
     */
    where?: sso_domainsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_domains to fetch.
     */
    orderBy?: sso_domainsOrderByWithRelationInput | sso_domainsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sso_domains.
     */
    cursor?: sso_domainsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_domains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_domains.
     */
    skip?: number
    distinct?: Sso_domainsScalarFieldEnum | Sso_domainsScalarFieldEnum[]
  }

  /**
   * sso_domains create
   */
  export type sso_domainsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * The data needed to create a sso_domains.
     */
    data: XOR<sso_domainsCreateInput, sso_domainsUncheckedCreateInput>
  }

  /**
   * sso_domains createMany
   */
  export type sso_domainsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sso_domains.
     */
    data: sso_domainsCreateManyInput | sso_domainsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sso_domains createManyAndReturn
   */
  export type sso_domainsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * The data used to create many sso_domains.
     */
    data: sso_domainsCreateManyInput | sso_domainsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * sso_domains update
   */
  export type sso_domainsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * The data needed to update a sso_domains.
     */
    data: XOR<sso_domainsUpdateInput, sso_domainsUncheckedUpdateInput>
    /**
     * Choose, which sso_domains to update.
     */
    where: sso_domainsWhereUniqueInput
  }

  /**
   * sso_domains updateMany
   */
  export type sso_domainsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sso_domains.
     */
    data: XOR<sso_domainsUpdateManyMutationInput, sso_domainsUncheckedUpdateManyInput>
    /**
     * Filter which sso_domains to update
     */
    where?: sso_domainsWhereInput
    /**
     * Limit how many sso_domains to update.
     */
    limit?: number
  }

  /**
   * sso_domains updateManyAndReturn
   */
  export type sso_domainsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * The data used to update sso_domains.
     */
    data: XOR<sso_domainsUpdateManyMutationInput, sso_domainsUncheckedUpdateManyInput>
    /**
     * Filter which sso_domains to update
     */
    where?: sso_domainsWhereInput
    /**
     * Limit how many sso_domains to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * sso_domains upsert
   */
  export type sso_domainsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * The filter to search for the sso_domains to update in case it exists.
     */
    where: sso_domainsWhereUniqueInput
    /**
     * In case the sso_domains found by the `where` argument doesn't exist, create a new sso_domains with this data.
     */
    create: XOR<sso_domainsCreateInput, sso_domainsUncheckedCreateInput>
    /**
     * In case the sso_domains was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sso_domainsUpdateInput, sso_domainsUncheckedUpdateInput>
  }

  /**
   * sso_domains delete
   */
  export type sso_domainsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * Filter which sso_domains to delete.
     */
    where: sso_domainsWhereUniqueInput
  }

  /**
   * sso_domains deleteMany
   */
  export type sso_domainsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sso_domains to delete
     */
    where?: sso_domainsWhereInput
    /**
     * Limit how many sso_domains to delete.
     */
    limit?: number
  }

  /**
   * sso_domains without action
   */
  export type sso_domainsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsInclude<ExtArgs> | null
  }


  /**
   * Model sso_providers
   */

  export type AggregateSso_providers = {
    _count: Sso_providersCountAggregateOutputType | null
    _min: Sso_providersMinAggregateOutputType | null
    _max: Sso_providersMaxAggregateOutputType | null
  }

  export type Sso_providersMinAggregateOutputType = {
    id: string | null
    resource_id: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Sso_providersMaxAggregateOutputType = {
    id: string | null
    resource_id: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Sso_providersCountAggregateOutputType = {
    id: number
    resource_id: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Sso_providersMinAggregateInputType = {
    id?: true
    resource_id?: true
    created_at?: true
    updated_at?: true
  }

  export type Sso_providersMaxAggregateInputType = {
    id?: true
    resource_id?: true
    created_at?: true
    updated_at?: true
  }

  export type Sso_providersCountAggregateInputType = {
    id?: true
    resource_id?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Sso_providersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sso_providers to aggregate.
     */
    where?: sso_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_providers to fetch.
     */
    orderBy?: sso_providersOrderByWithRelationInput | sso_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sso_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sso_providers
    **/
    _count?: true | Sso_providersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sso_providersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sso_providersMaxAggregateInputType
  }

  export type GetSso_providersAggregateType<T extends Sso_providersAggregateArgs> = {
        [P in keyof T & keyof AggregateSso_providers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSso_providers[P]>
      : GetScalarType<T[P], AggregateSso_providers[P]>
  }




  export type sso_providersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sso_providersWhereInput
    orderBy?: sso_providersOrderByWithAggregationInput | sso_providersOrderByWithAggregationInput[]
    by: Sso_providersScalarFieldEnum[] | Sso_providersScalarFieldEnum
    having?: sso_providersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sso_providersCountAggregateInputType | true
    _min?: Sso_providersMinAggregateInputType
    _max?: Sso_providersMaxAggregateInputType
  }

  export type Sso_providersGroupByOutputType = {
    id: string
    resource_id: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: Sso_providersCountAggregateOutputType | null
    _min: Sso_providersMinAggregateOutputType | null
    _max: Sso_providersMaxAggregateOutputType | null
  }

  type GetSso_providersGroupByPayload<T extends sso_providersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sso_providersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sso_providersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sso_providersGroupByOutputType[P]>
            : GetScalarType<T[P], Sso_providersGroupByOutputType[P]>
        }
      >
    >


  export type sso_providersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    resource_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    saml_providers?: boolean | sso_providers$saml_providersArgs<ExtArgs>
    saml_relay_states?: boolean | sso_providers$saml_relay_statesArgs<ExtArgs>
    sso_domains?: boolean | sso_providers$sso_domainsArgs<ExtArgs>
    _count?: boolean | Sso_providersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sso_providers"]>

  export type sso_providersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    resource_id?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["sso_providers"]>

  export type sso_providersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    resource_id?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["sso_providers"]>

  export type sso_providersSelectScalar = {
    id?: boolean
    resource_id?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type sso_providersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "resource_id" | "created_at" | "updated_at", ExtArgs["result"]["sso_providers"]>
  export type sso_providersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    saml_providers?: boolean | sso_providers$saml_providersArgs<ExtArgs>
    saml_relay_states?: boolean | sso_providers$saml_relay_statesArgs<ExtArgs>
    sso_domains?: boolean | sso_providers$sso_domainsArgs<ExtArgs>
    _count?: boolean | Sso_providersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type sso_providersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type sso_providersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $sso_providersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sso_providers"
    objects: {
      saml_providers: Prisma.$saml_providersPayload<ExtArgs>[]
      saml_relay_states: Prisma.$saml_relay_statesPayload<ExtArgs>[]
      sso_domains: Prisma.$sso_domainsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      resource_id: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["sso_providers"]>
    composites: {}
  }

  type sso_providersGetPayload<S extends boolean | null | undefined | sso_providersDefaultArgs> = $Result.GetResult<Prisma.$sso_providersPayload, S>

  type sso_providersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sso_providersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sso_providersCountAggregateInputType | true
    }

  export interface sso_providersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sso_providers'], meta: { name: 'sso_providers' } }
    /**
     * Find zero or one Sso_providers that matches the filter.
     * @param {sso_providersFindUniqueArgs} args - Arguments to find a Sso_providers
     * @example
     * // Get one Sso_providers
     * const sso_providers = await prisma.sso_providers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sso_providersFindUniqueArgs>(args: SelectSubset<T, sso_providersFindUniqueArgs<ExtArgs>>): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sso_providers that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sso_providersFindUniqueOrThrowArgs} args - Arguments to find a Sso_providers
     * @example
     * // Get one Sso_providers
     * const sso_providers = await prisma.sso_providers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sso_providersFindUniqueOrThrowArgs>(args: SelectSubset<T, sso_providersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sso_providers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_providersFindFirstArgs} args - Arguments to find a Sso_providers
     * @example
     * // Get one Sso_providers
     * const sso_providers = await prisma.sso_providers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sso_providersFindFirstArgs>(args?: SelectSubset<T, sso_providersFindFirstArgs<ExtArgs>>): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sso_providers that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_providersFindFirstOrThrowArgs} args - Arguments to find a Sso_providers
     * @example
     * // Get one Sso_providers
     * const sso_providers = await prisma.sso_providers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sso_providersFindFirstOrThrowArgs>(args?: SelectSubset<T, sso_providersFindFirstOrThrowArgs<ExtArgs>>): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sso_providers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_providersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sso_providers
     * const sso_providers = await prisma.sso_providers.findMany()
     * 
     * // Get first 10 Sso_providers
     * const sso_providers = await prisma.sso_providers.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sso_providersWithIdOnly = await prisma.sso_providers.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sso_providersFindManyArgs>(args?: SelectSubset<T, sso_providersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sso_providers.
     * @param {sso_providersCreateArgs} args - Arguments to create a Sso_providers.
     * @example
     * // Create one Sso_providers
     * const Sso_providers = await prisma.sso_providers.create({
     *   data: {
     *     // ... data to create a Sso_providers
     *   }
     * })
     * 
     */
    create<T extends sso_providersCreateArgs>(args: SelectSubset<T, sso_providersCreateArgs<ExtArgs>>): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sso_providers.
     * @param {sso_providersCreateManyArgs} args - Arguments to create many Sso_providers.
     * @example
     * // Create many Sso_providers
     * const sso_providers = await prisma.sso_providers.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sso_providersCreateManyArgs>(args?: SelectSubset<T, sso_providersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sso_providers and returns the data saved in the database.
     * @param {sso_providersCreateManyAndReturnArgs} args - Arguments to create many Sso_providers.
     * @example
     * // Create many Sso_providers
     * const sso_providers = await prisma.sso_providers.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sso_providers and only return the `id`
     * const sso_providersWithIdOnly = await prisma.sso_providers.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends sso_providersCreateManyAndReturnArgs>(args?: SelectSubset<T, sso_providersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Sso_providers.
     * @param {sso_providersDeleteArgs} args - Arguments to delete one Sso_providers.
     * @example
     * // Delete one Sso_providers
     * const Sso_providers = await prisma.sso_providers.delete({
     *   where: {
     *     // ... filter to delete one Sso_providers
     *   }
     * })
     * 
     */
    delete<T extends sso_providersDeleteArgs>(args: SelectSubset<T, sso_providersDeleteArgs<ExtArgs>>): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sso_providers.
     * @param {sso_providersUpdateArgs} args - Arguments to update one Sso_providers.
     * @example
     * // Update one Sso_providers
     * const sso_providers = await prisma.sso_providers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sso_providersUpdateArgs>(args: SelectSubset<T, sso_providersUpdateArgs<ExtArgs>>): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sso_providers.
     * @param {sso_providersDeleteManyArgs} args - Arguments to filter Sso_providers to delete.
     * @example
     * // Delete a few Sso_providers
     * const { count } = await prisma.sso_providers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sso_providersDeleteManyArgs>(args?: SelectSubset<T, sso_providersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sso_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_providersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sso_providers
     * const sso_providers = await prisma.sso_providers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sso_providersUpdateManyArgs>(args: SelectSubset<T, sso_providersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sso_providers and returns the data updated in the database.
     * @param {sso_providersUpdateManyAndReturnArgs} args - Arguments to update many Sso_providers.
     * @example
     * // Update many Sso_providers
     * const sso_providers = await prisma.sso_providers.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sso_providers and only return the `id`
     * const sso_providersWithIdOnly = await prisma.sso_providers.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends sso_providersUpdateManyAndReturnArgs>(args: SelectSubset<T, sso_providersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Sso_providers.
     * @param {sso_providersUpsertArgs} args - Arguments to update or create a Sso_providers.
     * @example
     * // Update or create a Sso_providers
     * const sso_providers = await prisma.sso_providers.upsert({
     *   create: {
     *     // ... data to create a Sso_providers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sso_providers we want to update
     *   }
     * })
     */
    upsert<T extends sso_providersUpsertArgs>(args: SelectSubset<T, sso_providersUpsertArgs<ExtArgs>>): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sso_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_providersCountArgs} args - Arguments to filter Sso_providers to count.
     * @example
     * // Count the number of Sso_providers
     * const count = await prisma.sso_providers.count({
     *   where: {
     *     // ... the filter for the Sso_providers we want to count
     *   }
     * })
    **/
    count<T extends sso_providersCountArgs>(
      args?: Subset<T, sso_providersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sso_providersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sso_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sso_providersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sso_providersAggregateArgs>(args: Subset<T, Sso_providersAggregateArgs>): Prisma.PrismaPromise<GetSso_providersAggregateType<T>>

    /**
     * Group by Sso_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_providersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sso_providersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sso_providersGroupByArgs['orderBy'] }
        : { orderBy?: sso_providersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sso_providersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSso_providersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sso_providers model
   */
  readonly fields: sso_providersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sso_providers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sso_providersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    saml_providers<T extends sso_providers$saml_providersArgs<ExtArgs> = {}>(args?: Subset<T, sso_providers$saml_providersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    saml_relay_states<T extends sso_providers$saml_relay_statesArgs<ExtArgs> = {}>(args?: Subset<T, sso_providers$saml_relay_statesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sso_domains<T extends sso_providers$sso_domainsArgs<ExtArgs> = {}>(args?: Subset<T, sso_providers$sso_domainsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sso_providers model
   */
  interface sso_providersFieldRefs {
    readonly id: FieldRef<"sso_providers", 'String'>
    readonly resource_id: FieldRef<"sso_providers", 'String'>
    readonly created_at: FieldRef<"sso_providers", 'DateTime'>
    readonly updated_at: FieldRef<"sso_providers", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sso_providers findUnique
   */
  export type sso_providersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_providers
     */
    omit?: sso_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * Filter, which sso_providers to fetch.
     */
    where: sso_providersWhereUniqueInput
  }

  /**
   * sso_providers findUniqueOrThrow
   */
  export type sso_providersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_providers
     */
    omit?: sso_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * Filter, which sso_providers to fetch.
     */
    where: sso_providersWhereUniqueInput
  }

  /**
   * sso_providers findFirst
   */
  export type sso_providersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_providers
     */
    omit?: sso_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * Filter, which sso_providers to fetch.
     */
    where?: sso_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_providers to fetch.
     */
    orderBy?: sso_providersOrderByWithRelationInput | sso_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sso_providers.
     */
    cursor?: sso_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sso_providers.
     */
    distinct?: Sso_providersScalarFieldEnum | Sso_providersScalarFieldEnum[]
  }

  /**
   * sso_providers findFirstOrThrow
   */
  export type sso_providersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_providers
     */
    omit?: sso_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * Filter, which sso_providers to fetch.
     */
    where?: sso_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_providers to fetch.
     */
    orderBy?: sso_providersOrderByWithRelationInput | sso_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sso_providers.
     */
    cursor?: sso_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sso_providers.
     */
    distinct?: Sso_providersScalarFieldEnum | Sso_providersScalarFieldEnum[]
  }

  /**
   * sso_providers findMany
   */
  export type sso_providersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_providers
     */
    omit?: sso_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * Filter, which sso_providers to fetch.
     */
    where?: sso_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_providers to fetch.
     */
    orderBy?: sso_providersOrderByWithRelationInput | sso_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sso_providers.
     */
    cursor?: sso_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_providers.
     */
    skip?: number
    distinct?: Sso_providersScalarFieldEnum | Sso_providersScalarFieldEnum[]
  }

  /**
   * sso_providers create
   */
  export type sso_providersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_providers
     */
    omit?: sso_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * The data needed to create a sso_providers.
     */
    data: XOR<sso_providersCreateInput, sso_providersUncheckedCreateInput>
  }

  /**
   * sso_providers createMany
   */
  export type sso_providersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sso_providers.
     */
    data: sso_providersCreateManyInput | sso_providersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sso_providers createManyAndReturn
   */
  export type sso_providersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sso_providers
     */
    omit?: sso_providersOmit<ExtArgs> | null
    /**
     * The data used to create many sso_providers.
     */
    data: sso_providersCreateManyInput | sso_providersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sso_providers update
   */
  export type sso_providersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_providers
     */
    omit?: sso_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * The data needed to update a sso_providers.
     */
    data: XOR<sso_providersUpdateInput, sso_providersUncheckedUpdateInput>
    /**
     * Choose, which sso_providers to update.
     */
    where: sso_providersWhereUniqueInput
  }

  /**
   * sso_providers updateMany
   */
  export type sso_providersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sso_providers.
     */
    data: XOR<sso_providersUpdateManyMutationInput, sso_providersUncheckedUpdateManyInput>
    /**
     * Filter which sso_providers to update
     */
    where?: sso_providersWhereInput
    /**
     * Limit how many sso_providers to update.
     */
    limit?: number
  }

  /**
   * sso_providers updateManyAndReturn
   */
  export type sso_providersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sso_providers
     */
    omit?: sso_providersOmit<ExtArgs> | null
    /**
     * The data used to update sso_providers.
     */
    data: XOR<sso_providersUpdateManyMutationInput, sso_providersUncheckedUpdateManyInput>
    /**
     * Filter which sso_providers to update
     */
    where?: sso_providersWhereInput
    /**
     * Limit how many sso_providers to update.
     */
    limit?: number
  }

  /**
   * sso_providers upsert
   */
  export type sso_providersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_providers
     */
    omit?: sso_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * The filter to search for the sso_providers to update in case it exists.
     */
    where: sso_providersWhereUniqueInput
    /**
     * In case the sso_providers found by the `where` argument doesn't exist, create a new sso_providers with this data.
     */
    create: XOR<sso_providersCreateInput, sso_providersUncheckedCreateInput>
    /**
     * In case the sso_providers was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sso_providersUpdateInput, sso_providersUncheckedUpdateInput>
  }

  /**
   * sso_providers delete
   */
  export type sso_providersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_providers
     */
    omit?: sso_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * Filter which sso_providers to delete.
     */
    where: sso_providersWhereUniqueInput
  }

  /**
   * sso_providers deleteMany
   */
  export type sso_providersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sso_providers to delete
     */
    where?: sso_providersWhereInput
    /**
     * Limit how many sso_providers to delete.
     */
    limit?: number
  }

  /**
   * sso_providers.saml_providers
   */
  export type sso_providers$saml_providersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersInclude<ExtArgs> | null
    where?: saml_providersWhereInput
    orderBy?: saml_providersOrderByWithRelationInput | saml_providersOrderByWithRelationInput[]
    cursor?: saml_providersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Saml_providersScalarFieldEnum | Saml_providersScalarFieldEnum[]
  }

  /**
   * sso_providers.saml_relay_states
   */
  export type sso_providers$saml_relay_statesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    where?: saml_relay_statesWhereInput
    orderBy?: saml_relay_statesOrderByWithRelationInput | saml_relay_statesOrderByWithRelationInput[]
    cursor?: saml_relay_statesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Saml_relay_statesScalarFieldEnum | Saml_relay_statesScalarFieldEnum[]
  }

  /**
   * sso_providers.sso_domains
   */
  export type sso_providers$sso_domainsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsInclude<ExtArgs> | null
    where?: sso_domainsWhereInput
    orderBy?: sso_domainsOrderByWithRelationInput | sso_domainsOrderByWithRelationInput[]
    cursor?: sso_domainsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Sso_domainsScalarFieldEnum | Sso_domainsScalarFieldEnum[]
  }

  /**
   * sso_providers without action
   */
  export type sso_providersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_providers
     */
    omit?: sso_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_providersInclude<ExtArgs> | null
  }


  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    email_change_confirm_status: number | null
  }

  export type UsersSumAggregateOutputType = {
    email_change_confirm_status: number | null
  }

  export type UsersMinAggregateOutputType = {
    instance_id: string | null
    id: string | null
    aud: string | null
    role: string | null
    email: string | null
    encrypted_password: string | null
    email_confirmed_at: Date | null
    invited_at: Date | null
    confirmation_token: string | null
    confirmation_sent_at: Date | null
    recovery_token: string | null
    recovery_sent_at: Date | null
    email_change_token_new: string | null
    email_change: string | null
    email_change_sent_at: Date | null
    last_sign_in_at: Date | null
    is_super_admin: boolean | null
    created_at: Date | null
    updated_at: Date | null
    phone: string | null
    phone_confirmed_at: Date | null
    phone_change: string | null
    phone_change_token: string | null
    phone_change_sent_at: Date | null
    confirmed_at: Date | null
    email_change_token_current: string | null
    email_change_confirm_status: number | null
    banned_until: Date | null
    reauthentication_token: string | null
    reauthentication_sent_at: Date | null
    is_sso_user: boolean | null
    deleted_at: Date | null
    is_anonymous: boolean | null
  }

  export type UsersMaxAggregateOutputType = {
    instance_id: string | null
    id: string | null
    aud: string | null
    role: string | null
    email: string | null
    encrypted_password: string | null
    email_confirmed_at: Date | null
    invited_at: Date | null
    confirmation_token: string | null
    confirmation_sent_at: Date | null
    recovery_token: string | null
    recovery_sent_at: Date | null
    email_change_token_new: string | null
    email_change: string | null
    email_change_sent_at: Date | null
    last_sign_in_at: Date | null
    is_super_admin: boolean | null
    created_at: Date | null
    updated_at: Date | null
    phone: string | null
    phone_confirmed_at: Date | null
    phone_change: string | null
    phone_change_token: string | null
    phone_change_sent_at: Date | null
    confirmed_at: Date | null
    email_change_token_current: string | null
    email_change_confirm_status: number | null
    banned_until: Date | null
    reauthentication_token: string | null
    reauthentication_sent_at: Date | null
    is_sso_user: boolean | null
    deleted_at: Date | null
    is_anonymous: boolean | null
  }

  export type UsersCountAggregateOutputType = {
    instance_id: number
    id: number
    aud: number
    role: number
    email: number
    encrypted_password: number
    email_confirmed_at: number
    invited_at: number
    confirmation_token: number
    confirmation_sent_at: number
    recovery_token: number
    recovery_sent_at: number
    email_change_token_new: number
    email_change: number
    email_change_sent_at: number
    last_sign_in_at: number
    raw_app_meta_data: number
    raw_user_meta_data: number
    is_super_admin: number
    created_at: number
    updated_at: number
    phone: number
    phone_confirmed_at: number
    phone_change: number
    phone_change_token: number
    phone_change_sent_at: number
    confirmed_at: number
    email_change_token_current: number
    email_change_confirm_status: number
    banned_until: number
    reauthentication_token: number
    reauthentication_sent_at: number
    is_sso_user: number
    deleted_at: number
    is_anonymous: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    email_change_confirm_status?: true
  }

  export type UsersSumAggregateInputType = {
    email_change_confirm_status?: true
  }

  export type UsersMinAggregateInputType = {
    instance_id?: true
    id?: true
    aud?: true
    role?: true
    email?: true
    encrypted_password?: true
    email_confirmed_at?: true
    invited_at?: true
    confirmation_token?: true
    confirmation_sent_at?: true
    recovery_token?: true
    recovery_sent_at?: true
    email_change_token_new?: true
    email_change?: true
    email_change_sent_at?: true
    last_sign_in_at?: true
    is_super_admin?: true
    created_at?: true
    updated_at?: true
    phone?: true
    phone_confirmed_at?: true
    phone_change?: true
    phone_change_token?: true
    phone_change_sent_at?: true
    confirmed_at?: true
    email_change_token_current?: true
    email_change_confirm_status?: true
    banned_until?: true
    reauthentication_token?: true
    reauthentication_sent_at?: true
    is_sso_user?: true
    deleted_at?: true
    is_anonymous?: true
  }

  export type UsersMaxAggregateInputType = {
    instance_id?: true
    id?: true
    aud?: true
    role?: true
    email?: true
    encrypted_password?: true
    email_confirmed_at?: true
    invited_at?: true
    confirmation_token?: true
    confirmation_sent_at?: true
    recovery_token?: true
    recovery_sent_at?: true
    email_change_token_new?: true
    email_change?: true
    email_change_sent_at?: true
    last_sign_in_at?: true
    is_super_admin?: true
    created_at?: true
    updated_at?: true
    phone?: true
    phone_confirmed_at?: true
    phone_change?: true
    phone_change_token?: true
    phone_change_sent_at?: true
    confirmed_at?: true
    email_change_token_current?: true
    email_change_confirm_status?: true
    banned_until?: true
    reauthentication_token?: true
    reauthentication_sent_at?: true
    is_sso_user?: true
    deleted_at?: true
    is_anonymous?: true
  }

  export type UsersCountAggregateInputType = {
    instance_id?: true
    id?: true
    aud?: true
    role?: true
    email?: true
    encrypted_password?: true
    email_confirmed_at?: true
    invited_at?: true
    confirmation_token?: true
    confirmation_sent_at?: true
    recovery_token?: true
    recovery_sent_at?: true
    email_change_token_new?: true
    email_change?: true
    email_change_sent_at?: true
    last_sign_in_at?: true
    raw_app_meta_data?: true
    raw_user_meta_data?: true
    is_super_admin?: true
    created_at?: true
    updated_at?: true
    phone?: true
    phone_confirmed_at?: true
    phone_change?: true
    phone_change_token?: true
    phone_change_sent_at?: true
    confirmed_at?: true
    email_change_token_current?: true
    email_change_confirm_status?: true
    banned_until?: true
    reauthentication_token?: true
    reauthentication_sent_at?: true
    is_sso_user?: true
    deleted_at?: true
    is_anonymous?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    instance_id: string | null
    id: string
    aud: string | null
    role: string | null
    email: string | null
    encrypted_password: string | null
    email_confirmed_at: Date | null
    invited_at: Date | null
    confirmation_token: string | null
    confirmation_sent_at: Date | null
    recovery_token: string | null
    recovery_sent_at: Date | null
    email_change_token_new: string | null
    email_change: string | null
    email_change_sent_at: Date | null
    last_sign_in_at: Date | null
    raw_app_meta_data: JsonValue | null
    raw_user_meta_data: JsonValue | null
    is_super_admin: boolean | null
    created_at: Date | null
    updated_at: Date | null
    phone: string | null
    phone_confirmed_at: Date | null
    phone_change: string | null
    phone_change_token: string | null
    phone_change_sent_at: Date | null
    confirmed_at: Date | null
    email_change_token_current: string | null
    email_change_confirm_status: number | null
    banned_until: Date | null
    reauthentication_token: string | null
    reauthentication_sent_at: Date | null
    is_sso_user: boolean
    deleted_at: Date | null
    is_anonymous: boolean
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    instance_id?: boolean
    id?: boolean
    aud?: boolean
    role?: boolean
    email?: boolean
    encrypted_password?: boolean
    email_confirmed_at?: boolean
    invited_at?: boolean
    confirmation_token?: boolean
    confirmation_sent_at?: boolean
    recovery_token?: boolean
    recovery_sent_at?: boolean
    email_change_token_new?: boolean
    email_change?: boolean
    email_change_sent_at?: boolean
    last_sign_in_at?: boolean
    raw_app_meta_data?: boolean
    raw_user_meta_data?: boolean
    is_super_admin?: boolean
    created_at?: boolean
    updated_at?: boolean
    phone?: boolean
    phone_confirmed_at?: boolean
    phone_change?: boolean
    phone_change_token?: boolean
    phone_change_sent_at?: boolean
    confirmed_at?: boolean
    email_change_token_current?: boolean
    email_change_confirm_status?: boolean
    banned_until?: boolean
    reauthentication_token?: boolean
    reauthentication_sent_at?: boolean
    is_sso_user?: boolean
    deleted_at?: boolean
    is_anonymous?: boolean
    identities?: boolean | users$identitiesArgs<ExtArgs>
    mfa_factors?: boolean | users$mfa_factorsArgs<ExtArgs>
    one_time_tokens?: boolean | users$one_time_tokensArgs<ExtArgs>
    sessions?: boolean | users$sessionsArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type usersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    instance_id?: boolean
    id?: boolean
    aud?: boolean
    role?: boolean
    email?: boolean
    encrypted_password?: boolean
    email_confirmed_at?: boolean
    invited_at?: boolean
    confirmation_token?: boolean
    confirmation_sent_at?: boolean
    recovery_token?: boolean
    recovery_sent_at?: boolean
    email_change_token_new?: boolean
    email_change?: boolean
    email_change_sent_at?: boolean
    last_sign_in_at?: boolean
    raw_app_meta_data?: boolean
    raw_user_meta_data?: boolean
    is_super_admin?: boolean
    created_at?: boolean
    updated_at?: boolean
    phone?: boolean
    phone_confirmed_at?: boolean
    phone_change?: boolean
    phone_change_token?: boolean
    phone_change_sent_at?: boolean
    confirmed_at?: boolean
    email_change_token_current?: boolean
    email_change_confirm_status?: boolean
    banned_until?: boolean
    reauthentication_token?: boolean
    reauthentication_sent_at?: boolean
    is_sso_user?: boolean
    deleted_at?: boolean
    is_anonymous?: boolean
  }, ExtArgs["result"]["users"]>

  export type usersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    instance_id?: boolean
    id?: boolean
    aud?: boolean
    role?: boolean
    email?: boolean
    encrypted_password?: boolean
    email_confirmed_at?: boolean
    invited_at?: boolean
    confirmation_token?: boolean
    confirmation_sent_at?: boolean
    recovery_token?: boolean
    recovery_sent_at?: boolean
    email_change_token_new?: boolean
    email_change?: boolean
    email_change_sent_at?: boolean
    last_sign_in_at?: boolean
    raw_app_meta_data?: boolean
    raw_user_meta_data?: boolean
    is_super_admin?: boolean
    created_at?: boolean
    updated_at?: boolean
    phone?: boolean
    phone_confirmed_at?: boolean
    phone_change?: boolean
    phone_change_token?: boolean
    phone_change_sent_at?: boolean
    confirmed_at?: boolean
    email_change_token_current?: boolean
    email_change_confirm_status?: boolean
    banned_until?: boolean
    reauthentication_token?: boolean
    reauthentication_sent_at?: boolean
    is_sso_user?: boolean
    deleted_at?: boolean
    is_anonymous?: boolean
  }, ExtArgs["result"]["users"]>

  export type usersSelectScalar = {
    instance_id?: boolean
    id?: boolean
    aud?: boolean
    role?: boolean
    email?: boolean
    encrypted_password?: boolean
    email_confirmed_at?: boolean
    invited_at?: boolean
    confirmation_token?: boolean
    confirmation_sent_at?: boolean
    recovery_token?: boolean
    recovery_sent_at?: boolean
    email_change_token_new?: boolean
    email_change?: boolean
    email_change_sent_at?: boolean
    last_sign_in_at?: boolean
    raw_app_meta_data?: boolean
    raw_user_meta_data?: boolean
    is_super_admin?: boolean
    created_at?: boolean
    updated_at?: boolean
    phone?: boolean
    phone_confirmed_at?: boolean
    phone_change?: boolean
    phone_change_token?: boolean
    phone_change_sent_at?: boolean
    confirmed_at?: boolean
    email_change_token_current?: boolean
    email_change_confirm_status?: boolean
    banned_until?: boolean
    reauthentication_token?: boolean
    reauthentication_sent_at?: boolean
    is_sso_user?: boolean
    deleted_at?: boolean
    is_anonymous?: boolean
  }

  export type usersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"instance_id" | "id" | "aud" | "role" | "email" | "encrypted_password" | "email_confirmed_at" | "invited_at" | "confirmation_token" | "confirmation_sent_at" | "recovery_token" | "recovery_sent_at" | "email_change_token_new" | "email_change" | "email_change_sent_at" | "last_sign_in_at" | "raw_app_meta_data" | "raw_user_meta_data" | "is_super_admin" | "created_at" | "updated_at" | "phone" | "phone_confirmed_at" | "phone_change" | "phone_change_token" | "phone_change_sent_at" | "confirmed_at" | "email_change_token_current" | "email_change_confirm_status" | "banned_until" | "reauthentication_token" | "reauthentication_sent_at" | "is_sso_user" | "deleted_at" | "is_anonymous", ExtArgs["result"]["users"]>
  export type usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    identities?: boolean | users$identitiesArgs<ExtArgs>
    mfa_factors?: boolean | users$mfa_factorsArgs<ExtArgs>
    one_time_tokens?: boolean | users$one_time_tokensArgs<ExtArgs>
    sessions?: boolean | users$sessionsArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type usersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type usersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {
      identities: Prisma.$identitiesPayload<ExtArgs>[]
      mfa_factors: Prisma.$mfa_factorsPayload<ExtArgs>[]
      one_time_tokens: Prisma.$one_time_tokensPayload<ExtArgs>[]
      sessions: Prisma.$sessionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      instance_id: string | null
      id: string
      aud: string | null
      role: string | null
      email: string | null
      encrypted_password: string | null
      email_confirmed_at: Date | null
      invited_at: Date | null
      confirmation_token: string | null
      confirmation_sent_at: Date | null
      recovery_token: string | null
      recovery_sent_at: Date | null
      email_change_token_new: string | null
      email_change: string | null
      email_change_sent_at: Date | null
      last_sign_in_at: Date | null
      raw_app_meta_data: Prisma.JsonValue | null
      raw_user_meta_data: Prisma.JsonValue | null
      is_super_admin: boolean | null
      created_at: Date | null
      updated_at: Date | null
      phone: string | null
      phone_confirmed_at: Date | null
      phone_change: string | null
      phone_change_token: string | null
      phone_change_sent_at: Date | null
      confirmed_at: Date | null
      email_change_token_current: string | null
      email_change_confirm_status: number | null
      banned_until: Date | null
      reauthentication_token: string | null
      reauthentication_sent_at: Date | null
      is_sso_user: boolean
      deleted_at: Date | null
      is_anonymous: boolean
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usersFindUniqueArgs>(args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs>(args: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usersFindFirstArgs>(args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs>(args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `instance_id`
     * const usersWithInstance_idOnly = await prisma.users.findMany({ select: { instance_id: true } })
     * 
     */
    findMany<T extends usersFindManyArgs>(args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends usersCreateArgs>(args: SelectSubset<T, usersCreateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {usersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usersCreateManyArgs>(args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {usersCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `instance_id`
     * const usersWithInstance_idOnly = await prisma.users.createManyAndReturn({
     *   select: { instance_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends usersCreateManyAndReturnArgs>(args?: SelectSubset<T, usersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends usersDeleteArgs>(args: SelectSubset<T, usersDeleteArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usersUpdateArgs>(args: SelectSubset<T, usersUpdateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usersDeleteManyArgs>(args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usersUpdateManyArgs>(args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {usersUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `instance_id`
     * const usersWithInstance_idOnly = await prisma.users.updateManyAndReturn({
     *   select: { instance_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends usersUpdateManyAndReturnArgs>(args: SelectSubset<T, usersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends usersUpsertArgs>(args: SelectSubset<T, usersUpsertArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    identities<T extends users$identitiesArgs<ExtArgs> = {}>(args?: Subset<T, users$identitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    mfa_factors<T extends users$mfa_factorsArgs<ExtArgs> = {}>(args?: Subset<T, users$mfa_factorsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    one_time_tokens<T extends users$one_time_tokensArgs<ExtArgs> = {}>(args?: Subset<T, users$one_time_tokensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$one_time_tokensPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sessions<T extends users$sessionsArgs<ExtArgs> = {}>(args?: Subset<T, users$sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the users model
   */
  interface usersFieldRefs {
    readonly instance_id: FieldRef<"users", 'String'>
    readonly id: FieldRef<"users", 'String'>
    readonly aud: FieldRef<"users", 'String'>
    readonly role: FieldRef<"users", 'String'>
    readonly email: FieldRef<"users", 'String'>
    readonly encrypted_password: FieldRef<"users", 'String'>
    readonly email_confirmed_at: FieldRef<"users", 'DateTime'>
    readonly invited_at: FieldRef<"users", 'DateTime'>
    readonly confirmation_token: FieldRef<"users", 'String'>
    readonly confirmation_sent_at: FieldRef<"users", 'DateTime'>
    readonly recovery_token: FieldRef<"users", 'String'>
    readonly recovery_sent_at: FieldRef<"users", 'DateTime'>
    readonly email_change_token_new: FieldRef<"users", 'String'>
    readonly email_change: FieldRef<"users", 'String'>
    readonly email_change_sent_at: FieldRef<"users", 'DateTime'>
    readonly last_sign_in_at: FieldRef<"users", 'DateTime'>
    readonly raw_app_meta_data: FieldRef<"users", 'Json'>
    readonly raw_user_meta_data: FieldRef<"users", 'Json'>
    readonly is_super_admin: FieldRef<"users", 'Boolean'>
    readonly created_at: FieldRef<"users", 'DateTime'>
    readonly updated_at: FieldRef<"users", 'DateTime'>
    readonly phone: FieldRef<"users", 'String'>
    readonly phone_confirmed_at: FieldRef<"users", 'DateTime'>
    readonly phone_change: FieldRef<"users", 'String'>
    readonly phone_change_token: FieldRef<"users", 'String'>
    readonly phone_change_sent_at: FieldRef<"users", 'DateTime'>
    readonly confirmed_at: FieldRef<"users", 'DateTime'>
    readonly email_change_token_current: FieldRef<"users", 'String'>
    readonly email_change_confirm_status: FieldRef<"users", 'Int'>
    readonly banned_until: FieldRef<"users", 'DateTime'>
    readonly reauthentication_token: FieldRef<"users", 'String'>
    readonly reauthentication_sent_at: FieldRef<"users", 'DateTime'>
    readonly is_sso_user: FieldRef<"users", 'Boolean'>
    readonly deleted_at: FieldRef<"users", 'DateTime'>
    readonly is_anonymous: FieldRef<"users", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }

  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users createManyAndReturn
   */
  export type usersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users updateManyAndReturn
   */
  export type usersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }

  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
    /**
     * Limit how many users to delete.
     */
    limit?: number
  }

  /**
   * users.identities
   */
  export type users$identitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesInclude<ExtArgs> | null
    where?: identitiesWhereInput
    orderBy?: identitiesOrderByWithRelationInput | identitiesOrderByWithRelationInput[]
    cursor?: identitiesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: IdentitiesScalarFieldEnum | IdentitiesScalarFieldEnum[]
  }

  /**
   * users.mfa_factors
   */
  export type users$mfa_factorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    where?: mfa_factorsWhereInput
    orderBy?: mfa_factorsOrderByWithRelationInput | mfa_factorsOrderByWithRelationInput[]
    cursor?: mfa_factorsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Mfa_factorsScalarFieldEnum | Mfa_factorsScalarFieldEnum[]
  }

  /**
   * users.one_time_tokens
   */
  export type users$one_time_tokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensInclude<ExtArgs> | null
    where?: one_time_tokensWhereInput
    orderBy?: one_time_tokensOrderByWithRelationInput | one_time_tokensOrderByWithRelationInput[]
    cursor?: one_time_tokensWhereUniqueInput
    take?: number
    skip?: number
    distinct?: One_time_tokensScalarFieldEnum | One_time_tokensScalarFieldEnum[]
  }

  /**
   * users.sessions
   */
  export type users$sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsInclude<ExtArgs> | null
    where?: sessionsWhereInput
    orderBy?: sessionsOrderByWithRelationInput | sessionsOrderByWithRelationInput[]
    cursor?: sessionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SessionsScalarFieldEnum | SessionsScalarFieldEnum[]
  }

  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
  }


  /**
   * Model buckets
   */

  export type AggregateBuckets = {
    _count: BucketsCountAggregateOutputType | null
    _avg: BucketsAvgAggregateOutputType | null
    _sum: BucketsSumAggregateOutputType | null
    _min: BucketsMinAggregateOutputType | null
    _max: BucketsMaxAggregateOutputType | null
  }

  export type BucketsAvgAggregateOutputType = {
    file_size_limit: number | null
  }

  export type BucketsSumAggregateOutputType = {
    file_size_limit: bigint | null
  }

  export type BucketsMinAggregateOutputType = {
    id: string | null
    name: string | null
    owner: string | null
    created_at: Date | null
    updated_at: Date | null
    public: boolean | null
    avif_autodetection: boolean | null
    file_size_limit: bigint | null
    owner_id: string | null
  }

  export type BucketsMaxAggregateOutputType = {
    id: string | null
    name: string | null
    owner: string | null
    created_at: Date | null
    updated_at: Date | null
    public: boolean | null
    avif_autodetection: boolean | null
    file_size_limit: bigint | null
    owner_id: string | null
  }

  export type BucketsCountAggregateOutputType = {
    id: number
    name: number
    owner: number
    created_at: number
    updated_at: number
    public: number
    avif_autodetection: number
    file_size_limit: number
    allowed_mime_types: number
    owner_id: number
    _all: number
  }


  export type BucketsAvgAggregateInputType = {
    file_size_limit?: true
  }

  export type BucketsSumAggregateInputType = {
    file_size_limit?: true
  }

  export type BucketsMinAggregateInputType = {
    id?: true
    name?: true
    owner?: true
    created_at?: true
    updated_at?: true
    public?: true
    avif_autodetection?: true
    file_size_limit?: true
    owner_id?: true
  }

  export type BucketsMaxAggregateInputType = {
    id?: true
    name?: true
    owner?: true
    created_at?: true
    updated_at?: true
    public?: true
    avif_autodetection?: true
    file_size_limit?: true
    owner_id?: true
  }

  export type BucketsCountAggregateInputType = {
    id?: true
    name?: true
    owner?: true
    created_at?: true
    updated_at?: true
    public?: true
    avif_autodetection?: true
    file_size_limit?: true
    allowed_mime_types?: true
    owner_id?: true
    _all?: true
  }

  export type BucketsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which buckets to aggregate.
     */
    where?: bucketsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of buckets to fetch.
     */
    orderBy?: bucketsOrderByWithRelationInput | bucketsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: bucketsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` buckets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` buckets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned buckets
    **/
    _count?: true | BucketsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BucketsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BucketsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BucketsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BucketsMaxAggregateInputType
  }

  export type GetBucketsAggregateType<T extends BucketsAggregateArgs> = {
        [P in keyof T & keyof AggregateBuckets]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBuckets[P]>
      : GetScalarType<T[P], AggregateBuckets[P]>
  }




  export type bucketsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: bucketsWhereInput
    orderBy?: bucketsOrderByWithAggregationInput | bucketsOrderByWithAggregationInput[]
    by: BucketsScalarFieldEnum[] | BucketsScalarFieldEnum
    having?: bucketsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BucketsCountAggregateInputType | true
    _avg?: BucketsAvgAggregateInputType
    _sum?: BucketsSumAggregateInputType
    _min?: BucketsMinAggregateInputType
    _max?: BucketsMaxAggregateInputType
  }

  export type BucketsGroupByOutputType = {
    id: string
    name: string
    owner: string | null
    created_at: Date | null
    updated_at: Date | null
    public: boolean | null
    avif_autodetection: boolean | null
    file_size_limit: bigint | null
    allowed_mime_types: string[]
    owner_id: string | null
    _count: BucketsCountAggregateOutputType | null
    _avg: BucketsAvgAggregateOutputType | null
    _sum: BucketsSumAggregateOutputType | null
    _min: BucketsMinAggregateOutputType | null
    _max: BucketsMaxAggregateOutputType | null
  }

  type GetBucketsGroupByPayload<T extends bucketsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BucketsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BucketsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BucketsGroupByOutputType[P]>
            : GetScalarType<T[P], BucketsGroupByOutputType[P]>
        }
      >
    >


  export type bucketsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    owner?: boolean
    created_at?: boolean
    updated_at?: boolean
    public?: boolean
    avif_autodetection?: boolean
    file_size_limit?: boolean
    allowed_mime_types?: boolean
    owner_id?: boolean
    objects?: boolean | buckets$objectsArgs<ExtArgs>
    s3_multipart_uploads?: boolean | buckets$s3_multipart_uploadsArgs<ExtArgs>
    s3_multipart_uploads_parts?: boolean | buckets$s3_multipart_uploads_partsArgs<ExtArgs>
    _count?: boolean | BucketsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["buckets"]>

  export type bucketsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    owner?: boolean
    created_at?: boolean
    updated_at?: boolean
    public?: boolean
    avif_autodetection?: boolean
    file_size_limit?: boolean
    allowed_mime_types?: boolean
    owner_id?: boolean
  }, ExtArgs["result"]["buckets"]>

  export type bucketsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    owner?: boolean
    created_at?: boolean
    updated_at?: boolean
    public?: boolean
    avif_autodetection?: boolean
    file_size_limit?: boolean
    allowed_mime_types?: boolean
    owner_id?: boolean
  }, ExtArgs["result"]["buckets"]>

  export type bucketsSelectScalar = {
    id?: boolean
    name?: boolean
    owner?: boolean
    created_at?: boolean
    updated_at?: boolean
    public?: boolean
    avif_autodetection?: boolean
    file_size_limit?: boolean
    allowed_mime_types?: boolean
    owner_id?: boolean
  }

  export type bucketsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "owner" | "created_at" | "updated_at" | "public" | "avif_autodetection" | "file_size_limit" | "allowed_mime_types" | "owner_id", ExtArgs["result"]["buckets"]>
  export type bucketsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    objects?: boolean | buckets$objectsArgs<ExtArgs>
    s3_multipart_uploads?: boolean | buckets$s3_multipart_uploadsArgs<ExtArgs>
    s3_multipart_uploads_parts?: boolean | buckets$s3_multipart_uploads_partsArgs<ExtArgs>
    _count?: boolean | BucketsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type bucketsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type bucketsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $bucketsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "buckets"
    objects: {
      objects: Prisma.$objectsPayload<ExtArgs>[]
      s3_multipart_uploads: Prisma.$s3_multipart_uploadsPayload<ExtArgs>[]
      s3_multipart_uploads_parts: Prisma.$s3_multipart_uploads_partsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      owner: string | null
      created_at: Date | null
      updated_at: Date | null
      public: boolean | null
      avif_autodetection: boolean | null
      file_size_limit: bigint | null
      allowed_mime_types: string[]
      owner_id: string | null
    }, ExtArgs["result"]["buckets"]>
    composites: {}
  }

  type bucketsGetPayload<S extends boolean | null | undefined | bucketsDefaultArgs> = $Result.GetResult<Prisma.$bucketsPayload, S>

  type bucketsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<bucketsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BucketsCountAggregateInputType | true
    }

  export interface bucketsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['buckets'], meta: { name: 'buckets' } }
    /**
     * Find zero or one Buckets that matches the filter.
     * @param {bucketsFindUniqueArgs} args - Arguments to find a Buckets
     * @example
     * // Get one Buckets
     * const buckets = await prisma.buckets.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends bucketsFindUniqueArgs>(args: SelectSubset<T, bucketsFindUniqueArgs<ExtArgs>>): Prisma__bucketsClient<$Result.GetResult<Prisma.$bucketsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Buckets that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {bucketsFindUniqueOrThrowArgs} args - Arguments to find a Buckets
     * @example
     * // Get one Buckets
     * const buckets = await prisma.buckets.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends bucketsFindUniqueOrThrowArgs>(args: SelectSubset<T, bucketsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__bucketsClient<$Result.GetResult<Prisma.$bucketsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Buckets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bucketsFindFirstArgs} args - Arguments to find a Buckets
     * @example
     * // Get one Buckets
     * const buckets = await prisma.buckets.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends bucketsFindFirstArgs>(args?: SelectSubset<T, bucketsFindFirstArgs<ExtArgs>>): Prisma__bucketsClient<$Result.GetResult<Prisma.$bucketsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Buckets that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bucketsFindFirstOrThrowArgs} args - Arguments to find a Buckets
     * @example
     * // Get one Buckets
     * const buckets = await prisma.buckets.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends bucketsFindFirstOrThrowArgs>(args?: SelectSubset<T, bucketsFindFirstOrThrowArgs<ExtArgs>>): Prisma__bucketsClient<$Result.GetResult<Prisma.$bucketsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Buckets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bucketsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Buckets
     * const buckets = await prisma.buckets.findMany()
     * 
     * // Get first 10 Buckets
     * const buckets = await prisma.buckets.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const bucketsWithIdOnly = await prisma.buckets.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends bucketsFindManyArgs>(args?: SelectSubset<T, bucketsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bucketsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Buckets.
     * @param {bucketsCreateArgs} args - Arguments to create a Buckets.
     * @example
     * // Create one Buckets
     * const Buckets = await prisma.buckets.create({
     *   data: {
     *     // ... data to create a Buckets
     *   }
     * })
     * 
     */
    create<T extends bucketsCreateArgs>(args: SelectSubset<T, bucketsCreateArgs<ExtArgs>>): Prisma__bucketsClient<$Result.GetResult<Prisma.$bucketsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Buckets.
     * @param {bucketsCreateManyArgs} args - Arguments to create many Buckets.
     * @example
     * // Create many Buckets
     * const buckets = await prisma.buckets.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends bucketsCreateManyArgs>(args?: SelectSubset<T, bucketsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Buckets and returns the data saved in the database.
     * @param {bucketsCreateManyAndReturnArgs} args - Arguments to create many Buckets.
     * @example
     * // Create many Buckets
     * const buckets = await prisma.buckets.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Buckets and only return the `id`
     * const bucketsWithIdOnly = await prisma.buckets.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends bucketsCreateManyAndReturnArgs>(args?: SelectSubset<T, bucketsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bucketsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Buckets.
     * @param {bucketsDeleteArgs} args - Arguments to delete one Buckets.
     * @example
     * // Delete one Buckets
     * const Buckets = await prisma.buckets.delete({
     *   where: {
     *     // ... filter to delete one Buckets
     *   }
     * })
     * 
     */
    delete<T extends bucketsDeleteArgs>(args: SelectSubset<T, bucketsDeleteArgs<ExtArgs>>): Prisma__bucketsClient<$Result.GetResult<Prisma.$bucketsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Buckets.
     * @param {bucketsUpdateArgs} args - Arguments to update one Buckets.
     * @example
     * // Update one Buckets
     * const buckets = await prisma.buckets.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends bucketsUpdateArgs>(args: SelectSubset<T, bucketsUpdateArgs<ExtArgs>>): Prisma__bucketsClient<$Result.GetResult<Prisma.$bucketsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Buckets.
     * @param {bucketsDeleteManyArgs} args - Arguments to filter Buckets to delete.
     * @example
     * // Delete a few Buckets
     * const { count } = await prisma.buckets.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends bucketsDeleteManyArgs>(args?: SelectSubset<T, bucketsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Buckets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bucketsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Buckets
     * const buckets = await prisma.buckets.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends bucketsUpdateManyArgs>(args: SelectSubset<T, bucketsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Buckets and returns the data updated in the database.
     * @param {bucketsUpdateManyAndReturnArgs} args - Arguments to update many Buckets.
     * @example
     * // Update many Buckets
     * const buckets = await prisma.buckets.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Buckets and only return the `id`
     * const bucketsWithIdOnly = await prisma.buckets.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends bucketsUpdateManyAndReturnArgs>(args: SelectSubset<T, bucketsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bucketsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Buckets.
     * @param {bucketsUpsertArgs} args - Arguments to update or create a Buckets.
     * @example
     * // Update or create a Buckets
     * const buckets = await prisma.buckets.upsert({
     *   create: {
     *     // ... data to create a Buckets
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Buckets we want to update
     *   }
     * })
     */
    upsert<T extends bucketsUpsertArgs>(args: SelectSubset<T, bucketsUpsertArgs<ExtArgs>>): Prisma__bucketsClient<$Result.GetResult<Prisma.$bucketsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Buckets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bucketsCountArgs} args - Arguments to filter Buckets to count.
     * @example
     * // Count the number of Buckets
     * const count = await prisma.buckets.count({
     *   where: {
     *     // ... the filter for the Buckets we want to count
     *   }
     * })
    **/
    count<T extends bucketsCountArgs>(
      args?: Subset<T, bucketsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BucketsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Buckets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BucketsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BucketsAggregateArgs>(args: Subset<T, BucketsAggregateArgs>): Prisma.PrismaPromise<GetBucketsAggregateType<T>>

    /**
     * Group by Buckets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bucketsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends bucketsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: bucketsGroupByArgs['orderBy'] }
        : { orderBy?: bucketsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, bucketsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBucketsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the buckets model
   */
  readonly fields: bucketsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for buckets.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__bucketsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    objects<T extends buckets$objectsArgs<ExtArgs> = {}>(args?: Subset<T, buckets$objectsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$objectsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    s3_multipart_uploads<T extends buckets$s3_multipart_uploadsArgs<ExtArgs> = {}>(args?: Subset<T, buckets$s3_multipart_uploadsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$s3_multipart_uploadsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    s3_multipart_uploads_parts<T extends buckets$s3_multipart_uploads_partsArgs<ExtArgs> = {}>(args?: Subset<T, buckets$s3_multipart_uploads_partsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$s3_multipart_uploads_partsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the buckets model
   */
  interface bucketsFieldRefs {
    readonly id: FieldRef<"buckets", 'String'>
    readonly name: FieldRef<"buckets", 'String'>
    readonly owner: FieldRef<"buckets", 'String'>
    readonly created_at: FieldRef<"buckets", 'DateTime'>
    readonly updated_at: FieldRef<"buckets", 'DateTime'>
    readonly public: FieldRef<"buckets", 'Boolean'>
    readonly avif_autodetection: FieldRef<"buckets", 'Boolean'>
    readonly file_size_limit: FieldRef<"buckets", 'BigInt'>
    readonly allowed_mime_types: FieldRef<"buckets", 'String[]'>
    readonly owner_id: FieldRef<"buckets", 'String'>
  }
    

  // Custom InputTypes
  /**
   * buckets findUnique
   */
  export type bucketsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buckets
     */
    select?: bucketsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buckets
     */
    omit?: bucketsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bucketsInclude<ExtArgs> | null
    /**
     * Filter, which buckets to fetch.
     */
    where: bucketsWhereUniqueInput
  }

  /**
   * buckets findUniqueOrThrow
   */
  export type bucketsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buckets
     */
    select?: bucketsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buckets
     */
    omit?: bucketsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bucketsInclude<ExtArgs> | null
    /**
     * Filter, which buckets to fetch.
     */
    where: bucketsWhereUniqueInput
  }

  /**
   * buckets findFirst
   */
  export type bucketsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buckets
     */
    select?: bucketsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buckets
     */
    omit?: bucketsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bucketsInclude<ExtArgs> | null
    /**
     * Filter, which buckets to fetch.
     */
    where?: bucketsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of buckets to fetch.
     */
    orderBy?: bucketsOrderByWithRelationInput | bucketsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for buckets.
     */
    cursor?: bucketsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` buckets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` buckets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of buckets.
     */
    distinct?: BucketsScalarFieldEnum | BucketsScalarFieldEnum[]
  }

  /**
   * buckets findFirstOrThrow
   */
  export type bucketsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buckets
     */
    select?: bucketsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buckets
     */
    omit?: bucketsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bucketsInclude<ExtArgs> | null
    /**
     * Filter, which buckets to fetch.
     */
    where?: bucketsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of buckets to fetch.
     */
    orderBy?: bucketsOrderByWithRelationInput | bucketsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for buckets.
     */
    cursor?: bucketsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` buckets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` buckets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of buckets.
     */
    distinct?: BucketsScalarFieldEnum | BucketsScalarFieldEnum[]
  }

  /**
   * buckets findMany
   */
  export type bucketsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buckets
     */
    select?: bucketsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buckets
     */
    omit?: bucketsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bucketsInclude<ExtArgs> | null
    /**
     * Filter, which buckets to fetch.
     */
    where?: bucketsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of buckets to fetch.
     */
    orderBy?: bucketsOrderByWithRelationInput | bucketsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing buckets.
     */
    cursor?: bucketsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` buckets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` buckets.
     */
    skip?: number
    distinct?: BucketsScalarFieldEnum | BucketsScalarFieldEnum[]
  }

  /**
   * buckets create
   */
  export type bucketsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buckets
     */
    select?: bucketsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buckets
     */
    omit?: bucketsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bucketsInclude<ExtArgs> | null
    /**
     * The data needed to create a buckets.
     */
    data: XOR<bucketsCreateInput, bucketsUncheckedCreateInput>
  }

  /**
   * buckets createMany
   */
  export type bucketsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many buckets.
     */
    data: bucketsCreateManyInput | bucketsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * buckets createManyAndReturn
   */
  export type bucketsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buckets
     */
    select?: bucketsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the buckets
     */
    omit?: bucketsOmit<ExtArgs> | null
    /**
     * The data used to create many buckets.
     */
    data: bucketsCreateManyInput | bucketsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * buckets update
   */
  export type bucketsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buckets
     */
    select?: bucketsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buckets
     */
    omit?: bucketsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bucketsInclude<ExtArgs> | null
    /**
     * The data needed to update a buckets.
     */
    data: XOR<bucketsUpdateInput, bucketsUncheckedUpdateInput>
    /**
     * Choose, which buckets to update.
     */
    where: bucketsWhereUniqueInput
  }

  /**
   * buckets updateMany
   */
  export type bucketsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update buckets.
     */
    data: XOR<bucketsUpdateManyMutationInput, bucketsUncheckedUpdateManyInput>
    /**
     * Filter which buckets to update
     */
    where?: bucketsWhereInput
    /**
     * Limit how many buckets to update.
     */
    limit?: number
  }

  /**
   * buckets updateManyAndReturn
   */
  export type bucketsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buckets
     */
    select?: bucketsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the buckets
     */
    omit?: bucketsOmit<ExtArgs> | null
    /**
     * The data used to update buckets.
     */
    data: XOR<bucketsUpdateManyMutationInput, bucketsUncheckedUpdateManyInput>
    /**
     * Filter which buckets to update
     */
    where?: bucketsWhereInput
    /**
     * Limit how many buckets to update.
     */
    limit?: number
  }

  /**
   * buckets upsert
   */
  export type bucketsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buckets
     */
    select?: bucketsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buckets
     */
    omit?: bucketsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bucketsInclude<ExtArgs> | null
    /**
     * The filter to search for the buckets to update in case it exists.
     */
    where: bucketsWhereUniqueInput
    /**
     * In case the buckets found by the `where` argument doesn't exist, create a new buckets with this data.
     */
    create: XOR<bucketsCreateInput, bucketsUncheckedCreateInput>
    /**
     * In case the buckets was found with the provided `where` argument, update it with this data.
     */
    update: XOR<bucketsUpdateInput, bucketsUncheckedUpdateInput>
  }

  /**
   * buckets delete
   */
  export type bucketsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buckets
     */
    select?: bucketsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buckets
     */
    omit?: bucketsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bucketsInclude<ExtArgs> | null
    /**
     * Filter which buckets to delete.
     */
    where: bucketsWhereUniqueInput
  }

  /**
   * buckets deleteMany
   */
  export type bucketsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which buckets to delete
     */
    where?: bucketsWhereInput
    /**
     * Limit how many buckets to delete.
     */
    limit?: number
  }

  /**
   * buckets.objects
   */
  export type buckets$objectsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the objects
     */
    select?: objectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the objects
     */
    omit?: objectsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: objectsInclude<ExtArgs> | null
    where?: objectsWhereInput
    orderBy?: objectsOrderByWithRelationInput | objectsOrderByWithRelationInput[]
    cursor?: objectsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ObjectsScalarFieldEnum | ObjectsScalarFieldEnum[]
  }

  /**
   * buckets.s3_multipart_uploads
   */
  export type buckets$s3_multipart_uploadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads
     */
    select?: s3_multipart_uploadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads
     */
    omit?: s3_multipart_uploadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploadsInclude<ExtArgs> | null
    where?: s3_multipart_uploadsWhereInput
    orderBy?: s3_multipart_uploadsOrderByWithRelationInput | s3_multipart_uploadsOrderByWithRelationInput[]
    cursor?: s3_multipart_uploadsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: S3_multipart_uploadsScalarFieldEnum | S3_multipart_uploadsScalarFieldEnum[]
  }

  /**
   * buckets.s3_multipart_uploads_parts
   */
  export type buckets$s3_multipart_uploads_partsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads_parts
     */
    select?: s3_multipart_uploads_partsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads_parts
     */
    omit?: s3_multipart_uploads_partsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploads_partsInclude<ExtArgs> | null
    where?: s3_multipart_uploads_partsWhereInput
    orderBy?: s3_multipart_uploads_partsOrderByWithRelationInput | s3_multipart_uploads_partsOrderByWithRelationInput[]
    cursor?: s3_multipart_uploads_partsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: S3_multipart_uploads_partsScalarFieldEnum | S3_multipart_uploads_partsScalarFieldEnum[]
  }

  /**
   * buckets without action
   */
  export type bucketsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buckets
     */
    select?: bucketsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buckets
     */
    omit?: bucketsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bucketsInclude<ExtArgs> | null
  }


  /**
   * Model migrations
   */

  export type AggregateMigrations = {
    _count: MigrationsCountAggregateOutputType | null
    _avg: MigrationsAvgAggregateOutputType | null
    _sum: MigrationsSumAggregateOutputType | null
    _min: MigrationsMinAggregateOutputType | null
    _max: MigrationsMaxAggregateOutputType | null
  }

  export type MigrationsAvgAggregateOutputType = {
    id: number | null
  }

  export type MigrationsSumAggregateOutputType = {
    id: number | null
  }

  export type MigrationsMinAggregateOutputType = {
    id: number | null
    name: string | null
    hash: string | null
    executed_at: Date | null
  }

  export type MigrationsMaxAggregateOutputType = {
    id: number | null
    name: string | null
    hash: string | null
    executed_at: Date | null
  }

  export type MigrationsCountAggregateOutputType = {
    id: number
    name: number
    hash: number
    executed_at: number
    _all: number
  }


  export type MigrationsAvgAggregateInputType = {
    id?: true
  }

  export type MigrationsSumAggregateInputType = {
    id?: true
  }

  export type MigrationsMinAggregateInputType = {
    id?: true
    name?: true
    hash?: true
    executed_at?: true
  }

  export type MigrationsMaxAggregateInputType = {
    id?: true
    name?: true
    hash?: true
    executed_at?: true
  }

  export type MigrationsCountAggregateInputType = {
    id?: true
    name?: true
    hash?: true
    executed_at?: true
    _all?: true
  }

  export type MigrationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which migrations to aggregate.
     */
    where?: migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of migrations to fetch.
     */
    orderBy?: migrationsOrderByWithRelationInput | migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned migrations
    **/
    _count?: true | MigrationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MigrationsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MigrationsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MigrationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MigrationsMaxAggregateInputType
  }

  export type GetMigrationsAggregateType<T extends MigrationsAggregateArgs> = {
        [P in keyof T & keyof AggregateMigrations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMigrations[P]>
      : GetScalarType<T[P], AggregateMigrations[P]>
  }




  export type migrationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: migrationsWhereInput
    orderBy?: migrationsOrderByWithAggregationInput | migrationsOrderByWithAggregationInput[]
    by: MigrationsScalarFieldEnum[] | MigrationsScalarFieldEnum
    having?: migrationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MigrationsCountAggregateInputType | true
    _avg?: MigrationsAvgAggregateInputType
    _sum?: MigrationsSumAggregateInputType
    _min?: MigrationsMinAggregateInputType
    _max?: MigrationsMaxAggregateInputType
  }

  export type MigrationsGroupByOutputType = {
    id: number
    name: string
    hash: string
    executed_at: Date | null
    _count: MigrationsCountAggregateOutputType | null
    _avg: MigrationsAvgAggregateOutputType | null
    _sum: MigrationsSumAggregateOutputType | null
    _min: MigrationsMinAggregateOutputType | null
    _max: MigrationsMaxAggregateOutputType | null
  }

  type GetMigrationsGroupByPayload<T extends migrationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MigrationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MigrationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MigrationsGroupByOutputType[P]>
            : GetScalarType<T[P], MigrationsGroupByOutputType[P]>
        }
      >
    >


  export type migrationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    hash?: boolean
    executed_at?: boolean
  }, ExtArgs["result"]["migrations"]>

  export type migrationsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    hash?: boolean
    executed_at?: boolean
  }, ExtArgs["result"]["migrations"]>

  export type migrationsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    hash?: boolean
    executed_at?: boolean
  }, ExtArgs["result"]["migrations"]>

  export type migrationsSelectScalar = {
    id?: boolean
    name?: boolean
    hash?: boolean
    executed_at?: boolean
  }

  export type migrationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "hash" | "executed_at", ExtArgs["result"]["migrations"]>

  export type $migrationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "migrations"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      hash: string
      executed_at: Date | null
    }, ExtArgs["result"]["migrations"]>
    composites: {}
  }

  type migrationsGetPayload<S extends boolean | null | undefined | migrationsDefaultArgs> = $Result.GetResult<Prisma.$migrationsPayload, S>

  type migrationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<migrationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MigrationsCountAggregateInputType | true
    }

  export interface migrationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['migrations'], meta: { name: 'migrations' } }
    /**
     * Find zero or one Migrations that matches the filter.
     * @param {migrationsFindUniqueArgs} args - Arguments to find a Migrations
     * @example
     * // Get one Migrations
     * const migrations = await prisma.migrations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends migrationsFindUniqueArgs>(args: SelectSubset<T, migrationsFindUniqueArgs<ExtArgs>>): Prisma__migrationsClient<$Result.GetResult<Prisma.$migrationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Migrations that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {migrationsFindUniqueOrThrowArgs} args - Arguments to find a Migrations
     * @example
     * // Get one Migrations
     * const migrations = await prisma.migrations.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends migrationsFindUniqueOrThrowArgs>(args: SelectSubset<T, migrationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__migrationsClient<$Result.GetResult<Prisma.$migrationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Migrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {migrationsFindFirstArgs} args - Arguments to find a Migrations
     * @example
     * // Get one Migrations
     * const migrations = await prisma.migrations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends migrationsFindFirstArgs>(args?: SelectSubset<T, migrationsFindFirstArgs<ExtArgs>>): Prisma__migrationsClient<$Result.GetResult<Prisma.$migrationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Migrations that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {migrationsFindFirstOrThrowArgs} args - Arguments to find a Migrations
     * @example
     * // Get one Migrations
     * const migrations = await prisma.migrations.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends migrationsFindFirstOrThrowArgs>(args?: SelectSubset<T, migrationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__migrationsClient<$Result.GetResult<Prisma.$migrationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Migrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {migrationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Migrations
     * const migrations = await prisma.migrations.findMany()
     * 
     * // Get first 10 Migrations
     * const migrations = await prisma.migrations.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const migrationsWithIdOnly = await prisma.migrations.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends migrationsFindManyArgs>(args?: SelectSubset<T, migrationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$migrationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Migrations.
     * @param {migrationsCreateArgs} args - Arguments to create a Migrations.
     * @example
     * // Create one Migrations
     * const Migrations = await prisma.migrations.create({
     *   data: {
     *     // ... data to create a Migrations
     *   }
     * })
     * 
     */
    create<T extends migrationsCreateArgs>(args: SelectSubset<T, migrationsCreateArgs<ExtArgs>>): Prisma__migrationsClient<$Result.GetResult<Prisma.$migrationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Migrations.
     * @param {migrationsCreateManyArgs} args - Arguments to create many Migrations.
     * @example
     * // Create many Migrations
     * const migrations = await prisma.migrations.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends migrationsCreateManyArgs>(args?: SelectSubset<T, migrationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Migrations and returns the data saved in the database.
     * @param {migrationsCreateManyAndReturnArgs} args - Arguments to create many Migrations.
     * @example
     * // Create many Migrations
     * const migrations = await prisma.migrations.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Migrations and only return the `id`
     * const migrationsWithIdOnly = await prisma.migrations.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends migrationsCreateManyAndReturnArgs>(args?: SelectSubset<T, migrationsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$migrationsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Migrations.
     * @param {migrationsDeleteArgs} args - Arguments to delete one Migrations.
     * @example
     * // Delete one Migrations
     * const Migrations = await prisma.migrations.delete({
     *   where: {
     *     // ... filter to delete one Migrations
     *   }
     * })
     * 
     */
    delete<T extends migrationsDeleteArgs>(args: SelectSubset<T, migrationsDeleteArgs<ExtArgs>>): Prisma__migrationsClient<$Result.GetResult<Prisma.$migrationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Migrations.
     * @param {migrationsUpdateArgs} args - Arguments to update one Migrations.
     * @example
     * // Update one Migrations
     * const migrations = await prisma.migrations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends migrationsUpdateArgs>(args: SelectSubset<T, migrationsUpdateArgs<ExtArgs>>): Prisma__migrationsClient<$Result.GetResult<Prisma.$migrationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Migrations.
     * @param {migrationsDeleteManyArgs} args - Arguments to filter Migrations to delete.
     * @example
     * // Delete a few Migrations
     * const { count } = await prisma.migrations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends migrationsDeleteManyArgs>(args?: SelectSubset<T, migrationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {migrationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Migrations
     * const migrations = await prisma.migrations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends migrationsUpdateManyArgs>(args: SelectSubset<T, migrationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Migrations and returns the data updated in the database.
     * @param {migrationsUpdateManyAndReturnArgs} args - Arguments to update many Migrations.
     * @example
     * // Update many Migrations
     * const migrations = await prisma.migrations.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Migrations and only return the `id`
     * const migrationsWithIdOnly = await prisma.migrations.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends migrationsUpdateManyAndReturnArgs>(args: SelectSubset<T, migrationsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$migrationsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Migrations.
     * @param {migrationsUpsertArgs} args - Arguments to update or create a Migrations.
     * @example
     * // Update or create a Migrations
     * const migrations = await prisma.migrations.upsert({
     *   create: {
     *     // ... data to create a Migrations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Migrations we want to update
     *   }
     * })
     */
    upsert<T extends migrationsUpsertArgs>(args: SelectSubset<T, migrationsUpsertArgs<ExtArgs>>): Prisma__migrationsClient<$Result.GetResult<Prisma.$migrationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {migrationsCountArgs} args - Arguments to filter Migrations to count.
     * @example
     * // Count the number of Migrations
     * const count = await prisma.migrations.count({
     *   where: {
     *     // ... the filter for the Migrations we want to count
     *   }
     * })
    **/
    count<T extends migrationsCountArgs>(
      args?: Subset<T, migrationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MigrationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MigrationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MigrationsAggregateArgs>(args: Subset<T, MigrationsAggregateArgs>): Prisma.PrismaPromise<GetMigrationsAggregateType<T>>

    /**
     * Group by Migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {migrationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends migrationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: migrationsGroupByArgs['orderBy'] }
        : { orderBy?: migrationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, migrationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMigrationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the migrations model
   */
  readonly fields: migrationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for migrations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__migrationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the migrations model
   */
  interface migrationsFieldRefs {
    readonly id: FieldRef<"migrations", 'Int'>
    readonly name: FieldRef<"migrations", 'String'>
    readonly hash: FieldRef<"migrations", 'String'>
    readonly executed_at: FieldRef<"migrations", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * migrations findUnique
   */
  export type migrationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the migrations
     */
    select?: migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the migrations
     */
    omit?: migrationsOmit<ExtArgs> | null
    /**
     * Filter, which migrations to fetch.
     */
    where: migrationsWhereUniqueInput
  }

  /**
   * migrations findUniqueOrThrow
   */
  export type migrationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the migrations
     */
    select?: migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the migrations
     */
    omit?: migrationsOmit<ExtArgs> | null
    /**
     * Filter, which migrations to fetch.
     */
    where: migrationsWhereUniqueInput
  }

  /**
   * migrations findFirst
   */
  export type migrationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the migrations
     */
    select?: migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the migrations
     */
    omit?: migrationsOmit<ExtArgs> | null
    /**
     * Filter, which migrations to fetch.
     */
    where?: migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of migrations to fetch.
     */
    orderBy?: migrationsOrderByWithRelationInput | migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for migrations.
     */
    cursor?: migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of migrations.
     */
    distinct?: MigrationsScalarFieldEnum | MigrationsScalarFieldEnum[]
  }

  /**
   * migrations findFirstOrThrow
   */
  export type migrationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the migrations
     */
    select?: migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the migrations
     */
    omit?: migrationsOmit<ExtArgs> | null
    /**
     * Filter, which migrations to fetch.
     */
    where?: migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of migrations to fetch.
     */
    orderBy?: migrationsOrderByWithRelationInput | migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for migrations.
     */
    cursor?: migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of migrations.
     */
    distinct?: MigrationsScalarFieldEnum | MigrationsScalarFieldEnum[]
  }

  /**
   * migrations findMany
   */
  export type migrationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the migrations
     */
    select?: migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the migrations
     */
    omit?: migrationsOmit<ExtArgs> | null
    /**
     * Filter, which migrations to fetch.
     */
    where?: migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of migrations to fetch.
     */
    orderBy?: migrationsOrderByWithRelationInput | migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing migrations.
     */
    cursor?: migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` migrations.
     */
    skip?: number
    distinct?: MigrationsScalarFieldEnum | MigrationsScalarFieldEnum[]
  }

  /**
   * migrations create
   */
  export type migrationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the migrations
     */
    select?: migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the migrations
     */
    omit?: migrationsOmit<ExtArgs> | null
    /**
     * The data needed to create a migrations.
     */
    data: XOR<migrationsCreateInput, migrationsUncheckedCreateInput>
  }

  /**
   * migrations createMany
   */
  export type migrationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many migrations.
     */
    data: migrationsCreateManyInput | migrationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * migrations createManyAndReturn
   */
  export type migrationsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the migrations
     */
    select?: migrationsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the migrations
     */
    omit?: migrationsOmit<ExtArgs> | null
    /**
     * The data used to create many migrations.
     */
    data: migrationsCreateManyInput | migrationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * migrations update
   */
  export type migrationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the migrations
     */
    select?: migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the migrations
     */
    omit?: migrationsOmit<ExtArgs> | null
    /**
     * The data needed to update a migrations.
     */
    data: XOR<migrationsUpdateInput, migrationsUncheckedUpdateInput>
    /**
     * Choose, which migrations to update.
     */
    where: migrationsWhereUniqueInput
  }

  /**
   * migrations updateMany
   */
  export type migrationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update migrations.
     */
    data: XOR<migrationsUpdateManyMutationInput, migrationsUncheckedUpdateManyInput>
    /**
     * Filter which migrations to update
     */
    where?: migrationsWhereInput
    /**
     * Limit how many migrations to update.
     */
    limit?: number
  }

  /**
   * migrations updateManyAndReturn
   */
  export type migrationsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the migrations
     */
    select?: migrationsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the migrations
     */
    omit?: migrationsOmit<ExtArgs> | null
    /**
     * The data used to update migrations.
     */
    data: XOR<migrationsUpdateManyMutationInput, migrationsUncheckedUpdateManyInput>
    /**
     * Filter which migrations to update
     */
    where?: migrationsWhereInput
    /**
     * Limit how many migrations to update.
     */
    limit?: number
  }

  /**
   * migrations upsert
   */
  export type migrationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the migrations
     */
    select?: migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the migrations
     */
    omit?: migrationsOmit<ExtArgs> | null
    /**
     * The filter to search for the migrations to update in case it exists.
     */
    where: migrationsWhereUniqueInput
    /**
     * In case the migrations found by the `where` argument doesn't exist, create a new migrations with this data.
     */
    create: XOR<migrationsCreateInput, migrationsUncheckedCreateInput>
    /**
     * In case the migrations was found with the provided `where` argument, update it with this data.
     */
    update: XOR<migrationsUpdateInput, migrationsUncheckedUpdateInput>
  }

  /**
   * migrations delete
   */
  export type migrationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the migrations
     */
    select?: migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the migrations
     */
    omit?: migrationsOmit<ExtArgs> | null
    /**
     * Filter which migrations to delete.
     */
    where: migrationsWhereUniqueInput
  }

  /**
   * migrations deleteMany
   */
  export type migrationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which migrations to delete
     */
    where?: migrationsWhereInput
    /**
     * Limit how many migrations to delete.
     */
    limit?: number
  }

  /**
   * migrations without action
   */
  export type migrationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the migrations
     */
    select?: migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the migrations
     */
    omit?: migrationsOmit<ExtArgs> | null
  }


  /**
   * Model objects
   */

  export type AggregateObjects = {
    _count: ObjectsCountAggregateOutputType | null
    _min: ObjectsMinAggregateOutputType | null
    _max: ObjectsMaxAggregateOutputType | null
  }

  export type ObjectsMinAggregateOutputType = {
    id: string | null
    bucket_id: string | null
    name: string | null
    owner: string | null
    created_at: Date | null
    updated_at: Date | null
    last_accessed_at: Date | null
    version: string | null
    owner_id: string | null
  }

  export type ObjectsMaxAggregateOutputType = {
    id: string | null
    bucket_id: string | null
    name: string | null
    owner: string | null
    created_at: Date | null
    updated_at: Date | null
    last_accessed_at: Date | null
    version: string | null
    owner_id: string | null
  }

  export type ObjectsCountAggregateOutputType = {
    id: number
    bucket_id: number
    name: number
    owner: number
    created_at: number
    updated_at: number
    last_accessed_at: number
    metadata: number
    path_tokens: number
    version: number
    owner_id: number
    user_metadata: number
    _all: number
  }


  export type ObjectsMinAggregateInputType = {
    id?: true
    bucket_id?: true
    name?: true
    owner?: true
    created_at?: true
    updated_at?: true
    last_accessed_at?: true
    version?: true
    owner_id?: true
  }

  export type ObjectsMaxAggregateInputType = {
    id?: true
    bucket_id?: true
    name?: true
    owner?: true
    created_at?: true
    updated_at?: true
    last_accessed_at?: true
    version?: true
    owner_id?: true
  }

  export type ObjectsCountAggregateInputType = {
    id?: true
    bucket_id?: true
    name?: true
    owner?: true
    created_at?: true
    updated_at?: true
    last_accessed_at?: true
    metadata?: true
    path_tokens?: true
    version?: true
    owner_id?: true
    user_metadata?: true
    _all?: true
  }

  export type ObjectsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which objects to aggregate.
     */
    where?: objectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of objects to fetch.
     */
    orderBy?: objectsOrderByWithRelationInput | objectsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: objectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` objects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` objects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned objects
    **/
    _count?: true | ObjectsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ObjectsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ObjectsMaxAggregateInputType
  }

  export type GetObjectsAggregateType<T extends ObjectsAggregateArgs> = {
        [P in keyof T & keyof AggregateObjects]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateObjects[P]>
      : GetScalarType<T[P], AggregateObjects[P]>
  }




  export type objectsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: objectsWhereInput
    orderBy?: objectsOrderByWithAggregationInput | objectsOrderByWithAggregationInput[]
    by: ObjectsScalarFieldEnum[] | ObjectsScalarFieldEnum
    having?: objectsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ObjectsCountAggregateInputType | true
    _min?: ObjectsMinAggregateInputType
    _max?: ObjectsMaxAggregateInputType
  }

  export type ObjectsGroupByOutputType = {
    id: string
    bucket_id: string | null
    name: string | null
    owner: string | null
    created_at: Date | null
    updated_at: Date | null
    last_accessed_at: Date | null
    metadata: JsonValue | null
    path_tokens: string[]
    version: string | null
    owner_id: string | null
    user_metadata: JsonValue | null
    _count: ObjectsCountAggregateOutputType | null
    _min: ObjectsMinAggregateOutputType | null
    _max: ObjectsMaxAggregateOutputType | null
  }

  type GetObjectsGroupByPayload<T extends objectsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ObjectsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ObjectsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ObjectsGroupByOutputType[P]>
            : GetScalarType<T[P], ObjectsGroupByOutputType[P]>
        }
      >
    >


  export type objectsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bucket_id?: boolean
    name?: boolean
    owner?: boolean
    created_at?: boolean
    updated_at?: boolean
    last_accessed_at?: boolean
    metadata?: boolean
    path_tokens?: boolean
    version?: boolean
    owner_id?: boolean
    user_metadata?: boolean
    buckets?: boolean | objects$bucketsArgs<ExtArgs>
  }, ExtArgs["result"]["objects"]>

  export type objectsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bucket_id?: boolean
    name?: boolean
    owner?: boolean
    created_at?: boolean
    updated_at?: boolean
    last_accessed_at?: boolean
    metadata?: boolean
    path_tokens?: boolean
    version?: boolean
    owner_id?: boolean
    user_metadata?: boolean
    buckets?: boolean | objects$bucketsArgs<ExtArgs>
  }, ExtArgs["result"]["objects"]>

  export type objectsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bucket_id?: boolean
    name?: boolean
    owner?: boolean
    created_at?: boolean
    updated_at?: boolean
    last_accessed_at?: boolean
    metadata?: boolean
    path_tokens?: boolean
    version?: boolean
    owner_id?: boolean
    user_metadata?: boolean
    buckets?: boolean | objects$bucketsArgs<ExtArgs>
  }, ExtArgs["result"]["objects"]>

  export type objectsSelectScalar = {
    id?: boolean
    bucket_id?: boolean
    name?: boolean
    owner?: boolean
    created_at?: boolean
    updated_at?: boolean
    last_accessed_at?: boolean
    metadata?: boolean
    path_tokens?: boolean
    version?: boolean
    owner_id?: boolean
    user_metadata?: boolean
  }

  export type objectsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "bucket_id" | "name" | "owner" | "created_at" | "updated_at" | "last_accessed_at" | "metadata" | "path_tokens" | "version" | "owner_id" | "user_metadata", ExtArgs["result"]["objects"]>
  export type objectsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    buckets?: boolean | objects$bucketsArgs<ExtArgs>
  }
  export type objectsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    buckets?: boolean | objects$bucketsArgs<ExtArgs>
  }
  export type objectsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    buckets?: boolean | objects$bucketsArgs<ExtArgs>
  }

  export type $objectsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "objects"
    objects: {
      buckets: Prisma.$bucketsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      bucket_id: string | null
      name: string | null
      owner: string | null
      created_at: Date | null
      updated_at: Date | null
      last_accessed_at: Date | null
      metadata: Prisma.JsonValue | null
      path_tokens: string[]
      version: string | null
      owner_id: string | null
      user_metadata: Prisma.JsonValue | null
    }, ExtArgs["result"]["objects"]>
    composites: {}
  }

  type objectsGetPayload<S extends boolean | null | undefined | objectsDefaultArgs> = $Result.GetResult<Prisma.$objectsPayload, S>

  type objectsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<objectsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ObjectsCountAggregateInputType | true
    }

  export interface objectsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['objects'], meta: { name: 'objects' } }
    /**
     * Find zero or one Objects that matches the filter.
     * @param {objectsFindUniqueArgs} args - Arguments to find a Objects
     * @example
     * // Get one Objects
     * const objects = await prisma.objects.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends objectsFindUniqueArgs>(args: SelectSubset<T, objectsFindUniqueArgs<ExtArgs>>): Prisma__objectsClient<$Result.GetResult<Prisma.$objectsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Objects that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {objectsFindUniqueOrThrowArgs} args - Arguments to find a Objects
     * @example
     * // Get one Objects
     * const objects = await prisma.objects.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends objectsFindUniqueOrThrowArgs>(args: SelectSubset<T, objectsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__objectsClient<$Result.GetResult<Prisma.$objectsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Objects that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {objectsFindFirstArgs} args - Arguments to find a Objects
     * @example
     * // Get one Objects
     * const objects = await prisma.objects.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends objectsFindFirstArgs>(args?: SelectSubset<T, objectsFindFirstArgs<ExtArgs>>): Prisma__objectsClient<$Result.GetResult<Prisma.$objectsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Objects that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {objectsFindFirstOrThrowArgs} args - Arguments to find a Objects
     * @example
     * // Get one Objects
     * const objects = await prisma.objects.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends objectsFindFirstOrThrowArgs>(args?: SelectSubset<T, objectsFindFirstOrThrowArgs<ExtArgs>>): Prisma__objectsClient<$Result.GetResult<Prisma.$objectsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Objects that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {objectsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Objects
     * const objects = await prisma.objects.findMany()
     * 
     * // Get first 10 Objects
     * const objects = await prisma.objects.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const objectsWithIdOnly = await prisma.objects.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends objectsFindManyArgs>(args?: SelectSubset<T, objectsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$objectsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Objects.
     * @param {objectsCreateArgs} args - Arguments to create a Objects.
     * @example
     * // Create one Objects
     * const Objects = await prisma.objects.create({
     *   data: {
     *     // ... data to create a Objects
     *   }
     * })
     * 
     */
    create<T extends objectsCreateArgs>(args: SelectSubset<T, objectsCreateArgs<ExtArgs>>): Prisma__objectsClient<$Result.GetResult<Prisma.$objectsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Objects.
     * @param {objectsCreateManyArgs} args - Arguments to create many Objects.
     * @example
     * // Create many Objects
     * const objects = await prisma.objects.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends objectsCreateManyArgs>(args?: SelectSubset<T, objectsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Objects and returns the data saved in the database.
     * @param {objectsCreateManyAndReturnArgs} args - Arguments to create many Objects.
     * @example
     * // Create many Objects
     * const objects = await prisma.objects.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Objects and only return the `id`
     * const objectsWithIdOnly = await prisma.objects.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends objectsCreateManyAndReturnArgs>(args?: SelectSubset<T, objectsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$objectsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Objects.
     * @param {objectsDeleteArgs} args - Arguments to delete one Objects.
     * @example
     * // Delete one Objects
     * const Objects = await prisma.objects.delete({
     *   where: {
     *     // ... filter to delete one Objects
     *   }
     * })
     * 
     */
    delete<T extends objectsDeleteArgs>(args: SelectSubset<T, objectsDeleteArgs<ExtArgs>>): Prisma__objectsClient<$Result.GetResult<Prisma.$objectsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Objects.
     * @param {objectsUpdateArgs} args - Arguments to update one Objects.
     * @example
     * // Update one Objects
     * const objects = await prisma.objects.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends objectsUpdateArgs>(args: SelectSubset<T, objectsUpdateArgs<ExtArgs>>): Prisma__objectsClient<$Result.GetResult<Prisma.$objectsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Objects.
     * @param {objectsDeleteManyArgs} args - Arguments to filter Objects to delete.
     * @example
     * // Delete a few Objects
     * const { count } = await prisma.objects.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends objectsDeleteManyArgs>(args?: SelectSubset<T, objectsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Objects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {objectsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Objects
     * const objects = await prisma.objects.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends objectsUpdateManyArgs>(args: SelectSubset<T, objectsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Objects and returns the data updated in the database.
     * @param {objectsUpdateManyAndReturnArgs} args - Arguments to update many Objects.
     * @example
     * // Update many Objects
     * const objects = await prisma.objects.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Objects and only return the `id`
     * const objectsWithIdOnly = await prisma.objects.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends objectsUpdateManyAndReturnArgs>(args: SelectSubset<T, objectsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$objectsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Objects.
     * @param {objectsUpsertArgs} args - Arguments to update or create a Objects.
     * @example
     * // Update or create a Objects
     * const objects = await prisma.objects.upsert({
     *   create: {
     *     // ... data to create a Objects
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Objects we want to update
     *   }
     * })
     */
    upsert<T extends objectsUpsertArgs>(args: SelectSubset<T, objectsUpsertArgs<ExtArgs>>): Prisma__objectsClient<$Result.GetResult<Prisma.$objectsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Objects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {objectsCountArgs} args - Arguments to filter Objects to count.
     * @example
     * // Count the number of Objects
     * const count = await prisma.objects.count({
     *   where: {
     *     // ... the filter for the Objects we want to count
     *   }
     * })
    **/
    count<T extends objectsCountArgs>(
      args?: Subset<T, objectsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ObjectsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Objects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ObjectsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ObjectsAggregateArgs>(args: Subset<T, ObjectsAggregateArgs>): Prisma.PrismaPromise<GetObjectsAggregateType<T>>

    /**
     * Group by Objects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {objectsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends objectsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: objectsGroupByArgs['orderBy'] }
        : { orderBy?: objectsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, objectsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetObjectsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the objects model
   */
  readonly fields: objectsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for objects.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__objectsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    buckets<T extends objects$bucketsArgs<ExtArgs> = {}>(args?: Subset<T, objects$bucketsArgs<ExtArgs>>): Prisma__bucketsClient<$Result.GetResult<Prisma.$bucketsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the objects model
   */
  interface objectsFieldRefs {
    readonly id: FieldRef<"objects", 'String'>
    readonly bucket_id: FieldRef<"objects", 'String'>
    readonly name: FieldRef<"objects", 'String'>
    readonly owner: FieldRef<"objects", 'String'>
    readonly created_at: FieldRef<"objects", 'DateTime'>
    readonly updated_at: FieldRef<"objects", 'DateTime'>
    readonly last_accessed_at: FieldRef<"objects", 'DateTime'>
    readonly metadata: FieldRef<"objects", 'Json'>
    readonly path_tokens: FieldRef<"objects", 'String[]'>
    readonly version: FieldRef<"objects", 'String'>
    readonly owner_id: FieldRef<"objects", 'String'>
    readonly user_metadata: FieldRef<"objects", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * objects findUnique
   */
  export type objectsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the objects
     */
    select?: objectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the objects
     */
    omit?: objectsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: objectsInclude<ExtArgs> | null
    /**
     * Filter, which objects to fetch.
     */
    where: objectsWhereUniqueInput
  }

  /**
   * objects findUniqueOrThrow
   */
  export type objectsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the objects
     */
    select?: objectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the objects
     */
    omit?: objectsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: objectsInclude<ExtArgs> | null
    /**
     * Filter, which objects to fetch.
     */
    where: objectsWhereUniqueInput
  }

  /**
   * objects findFirst
   */
  export type objectsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the objects
     */
    select?: objectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the objects
     */
    omit?: objectsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: objectsInclude<ExtArgs> | null
    /**
     * Filter, which objects to fetch.
     */
    where?: objectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of objects to fetch.
     */
    orderBy?: objectsOrderByWithRelationInput | objectsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for objects.
     */
    cursor?: objectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` objects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` objects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of objects.
     */
    distinct?: ObjectsScalarFieldEnum | ObjectsScalarFieldEnum[]
  }

  /**
   * objects findFirstOrThrow
   */
  export type objectsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the objects
     */
    select?: objectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the objects
     */
    omit?: objectsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: objectsInclude<ExtArgs> | null
    /**
     * Filter, which objects to fetch.
     */
    where?: objectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of objects to fetch.
     */
    orderBy?: objectsOrderByWithRelationInput | objectsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for objects.
     */
    cursor?: objectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` objects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` objects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of objects.
     */
    distinct?: ObjectsScalarFieldEnum | ObjectsScalarFieldEnum[]
  }

  /**
   * objects findMany
   */
  export type objectsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the objects
     */
    select?: objectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the objects
     */
    omit?: objectsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: objectsInclude<ExtArgs> | null
    /**
     * Filter, which objects to fetch.
     */
    where?: objectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of objects to fetch.
     */
    orderBy?: objectsOrderByWithRelationInput | objectsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing objects.
     */
    cursor?: objectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` objects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` objects.
     */
    skip?: number
    distinct?: ObjectsScalarFieldEnum | ObjectsScalarFieldEnum[]
  }

  /**
   * objects create
   */
  export type objectsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the objects
     */
    select?: objectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the objects
     */
    omit?: objectsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: objectsInclude<ExtArgs> | null
    /**
     * The data needed to create a objects.
     */
    data?: XOR<objectsCreateInput, objectsUncheckedCreateInput>
  }

  /**
   * objects createMany
   */
  export type objectsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many objects.
     */
    data: objectsCreateManyInput | objectsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * objects createManyAndReturn
   */
  export type objectsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the objects
     */
    select?: objectsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the objects
     */
    omit?: objectsOmit<ExtArgs> | null
    /**
     * The data used to create many objects.
     */
    data: objectsCreateManyInput | objectsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: objectsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * objects update
   */
  export type objectsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the objects
     */
    select?: objectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the objects
     */
    omit?: objectsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: objectsInclude<ExtArgs> | null
    /**
     * The data needed to update a objects.
     */
    data: XOR<objectsUpdateInput, objectsUncheckedUpdateInput>
    /**
     * Choose, which objects to update.
     */
    where: objectsWhereUniqueInput
  }

  /**
   * objects updateMany
   */
  export type objectsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update objects.
     */
    data: XOR<objectsUpdateManyMutationInput, objectsUncheckedUpdateManyInput>
    /**
     * Filter which objects to update
     */
    where?: objectsWhereInput
    /**
     * Limit how many objects to update.
     */
    limit?: number
  }

  /**
   * objects updateManyAndReturn
   */
  export type objectsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the objects
     */
    select?: objectsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the objects
     */
    omit?: objectsOmit<ExtArgs> | null
    /**
     * The data used to update objects.
     */
    data: XOR<objectsUpdateManyMutationInput, objectsUncheckedUpdateManyInput>
    /**
     * Filter which objects to update
     */
    where?: objectsWhereInput
    /**
     * Limit how many objects to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: objectsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * objects upsert
   */
  export type objectsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the objects
     */
    select?: objectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the objects
     */
    omit?: objectsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: objectsInclude<ExtArgs> | null
    /**
     * The filter to search for the objects to update in case it exists.
     */
    where: objectsWhereUniqueInput
    /**
     * In case the objects found by the `where` argument doesn't exist, create a new objects with this data.
     */
    create: XOR<objectsCreateInput, objectsUncheckedCreateInput>
    /**
     * In case the objects was found with the provided `where` argument, update it with this data.
     */
    update: XOR<objectsUpdateInput, objectsUncheckedUpdateInput>
  }

  /**
   * objects delete
   */
  export type objectsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the objects
     */
    select?: objectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the objects
     */
    omit?: objectsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: objectsInclude<ExtArgs> | null
    /**
     * Filter which objects to delete.
     */
    where: objectsWhereUniqueInput
  }

  /**
   * objects deleteMany
   */
  export type objectsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which objects to delete
     */
    where?: objectsWhereInput
    /**
     * Limit how many objects to delete.
     */
    limit?: number
  }

  /**
   * objects.buckets
   */
  export type objects$bucketsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buckets
     */
    select?: bucketsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buckets
     */
    omit?: bucketsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bucketsInclude<ExtArgs> | null
    where?: bucketsWhereInput
  }

  /**
   * objects without action
   */
  export type objectsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the objects
     */
    select?: objectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the objects
     */
    omit?: objectsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: objectsInclude<ExtArgs> | null
  }


  /**
   * Model s3_multipart_uploads
   */

  export type AggregateS3_multipart_uploads = {
    _count: S3_multipart_uploadsCountAggregateOutputType | null
    _avg: S3_multipart_uploadsAvgAggregateOutputType | null
    _sum: S3_multipart_uploadsSumAggregateOutputType | null
    _min: S3_multipart_uploadsMinAggregateOutputType | null
    _max: S3_multipart_uploadsMaxAggregateOutputType | null
  }

  export type S3_multipart_uploadsAvgAggregateOutputType = {
    in_progress_size: number | null
  }

  export type S3_multipart_uploadsSumAggregateOutputType = {
    in_progress_size: bigint | null
  }

  export type S3_multipart_uploadsMinAggregateOutputType = {
    id: string | null
    in_progress_size: bigint | null
    upload_signature: string | null
    bucket_id: string | null
    key: string | null
    version: string | null
    owner_id: string | null
    created_at: Date | null
  }

  export type S3_multipart_uploadsMaxAggregateOutputType = {
    id: string | null
    in_progress_size: bigint | null
    upload_signature: string | null
    bucket_id: string | null
    key: string | null
    version: string | null
    owner_id: string | null
    created_at: Date | null
  }

  export type S3_multipart_uploadsCountAggregateOutputType = {
    id: number
    in_progress_size: number
    upload_signature: number
    bucket_id: number
    key: number
    version: number
    owner_id: number
    created_at: number
    user_metadata: number
    _all: number
  }


  export type S3_multipart_uploadsAvgAggregateInputType = {
    in_progress_size?: true
  }

  export type S3_multipart_uploadsSumAggregateInputType = {
    in_progress_size?: true
  }

  export type S3_multipart_uploadsMinAggregateInputType = {
    id?: true
    in_progress_size?: true
    upload_signature?: true
    bucket_id?: true
    key?: true
    version?: true
    owner_id?: true
    created_at?: true
  }

  export type S3_multipart_uploadsMaxAggregateInputType = {
    id?: true
    in_progress_size?: true
    upload_signature?: true
    bucket_id?: true
    key?: true
    version?: true
    owner_id?: true
    created_at?: true
  }

  export type S3_multipart_uploadsCountAggregateInputType = {
    id?: true
    in_progress_size?: true
    upload_signature?: true
    bucket_id?: true
    key?: true
    version?: true
    owner_id?: true
    created_at?: true
    user_metadata?: true
    _all?: true
  }

  export type S3_multipart_uploadsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which s3_multipart_uploads to aggregate.
     */
    where?: s3_multipart_uploadsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of s3_multipart_uploads to fetch.
     */
    orderBy?: s3_multipart_uploadsOrderByWithRelationInput | s3_multipart_uploadsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: s3_multipart_uploadsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` s3_multipart_uploads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` s3_multipart_uploads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned s3_multipart_uploads
    **/
    _count?: true | S3_multipart_uploadsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: S3_multipart_uploadsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: S3_multipart_uploadsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: S3_multipart_uploadsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: S3_multipart_uploadsMaxAggregateInputType
  }

  export type GetS3_multipart_uploadsAggregateType<T extends S3_multipart_uploadsAggregateArgs> = {
        [P in keyof T & keyof AggregateS3_multipart_uploads]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateS3_multipart_uploads[P]>
      : GetScalarType<T[P], AggregateS3_multipart_uploads[P]>
  }




  export type s3_multipart_uploadsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: s3_multipart_uploadsWhereInput
    orderBy?: s3_multipart_uploadsOrderByWithAggregationInput | s3_multipart_uploadsOrderByWithAggregationInput[]
    by: S3_multipart_uploadsScalarFieldEnum[] | S3_multipart_uploadsScalarFieldEnum
    having?: s3_multipart_uploadsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: S3_multipart_uploadsCountAggregateInputType | true
    _avg?: S3_multipart_uploadsAvgAggregateInputType
    _sum?: S3_multipart_uploadsSumAggregateInputType
    _min?: S3_multipart_uploadsMinAggregateInputType
    _max?: S3_multipart_uploadsMaxAggregateInputType
  }

  export type S3_multipart_uploadsGroupByOutputType = {
    id: string
    in_progress_size: bigint
    upload_signature: string
    bucket_id: string
    key: string
    version: string
    owner_id: string | null
    created_at: Date
    user_metadata: JsonValue | null
    _count: S3_multipart_uploadsCountAggregateOutputType | null
    _avg: S3_multipart_uploadsAvgAggregateOutputType | null
    _sum: S3_multipart_uploadsSumAggregateOutputType | null
    _min: S3_multipart_uploadsMinAggregateOutputType | null
    _max: S3_multipart_uploadsMaxAggregateOutputType | null
  }

  type GetS3_multipart_uploadsGroupByPayload<T extends s3_multipart_uploadsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<S3_multipart_uploadsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof S3_multipart_uploadsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], S3_multipart_uploadsGroupByOutputType[P]>
            : GetScalarType<T[P], S3_multipart_uploadsGroupByOutputType[P]>
        }
      >
    >


  export type s3_multipart_uploadsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    in_progress_size?: boolean
    upload_signature?: boolean
    bucket_id?: boolean
    key?: boolean
    version?: boolean
    owner_id?: boolean
    created_at?: boolean
    user_metadata?: boolean
    buckets?: boolean | bucketsDefaultArgs<ExtArgs>
    s3_multipart_uploads_parts?: boolean | s3_multipart_uploads$s3_multipart_uploads_partsArgs<ExtArgs>
    _count?: boolean | S3_multipart_uploadsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["s3_multipart_uploads"]>

  export type s3_multipart_uploadsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    in_progress_size?: boolean
    upload_signature?: boolean
    bucket_id?: boolean
    key?: boolean
    version?: boolean
    owner_id?: boolean
    created_at?: boolean
    user_metadata?: boolean
    buckets?: boolean | bucketsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["s3_multipart_uploads"]>

  export type s3_multipart_uploadsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    in_progress_size?: boolean
    upload_signature?: boolean
    bucket_id?: boolean
    key?: boolean
    version?: boolean
    owner_id?: boolean
    created_at?: boolean
    user_metadata?: boolean
    buckets?: boolean | bucketsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["s3_multipart_uploads"]>

  export type s3_multipart_uploadsSelectScalar = {
    id?: boolean
    in_progress_size?: boolean
    upload_signature?: boolean
    bucket_id?: boolean
    key?: boolean
    version?: boolean
    owner_id?: boolean
    created_at?: boolean
    user_metadata?: boolean
  }

  export type s3_multipart_uploadsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "in_progress_size" | "upload_signature" | "bucket_id" | "key" | "version" | "owner_id" | "created_at" | "user_metadata", ExtArgs["result"]["s3_multipart_uploads"]>
  export type s3_multipart_uploadsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    buckets?: boolean | bucketsDefaultArgs<ExtArgs>
    s3_multipart_uploads_parts?: boolean | s3_multipart_uploads$s3_multipart_uploads_partsArgs<ExtArgs>
    _count?: boolean | S3_multipart_uploadsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type s3_multipart_uploadsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    buckets?: boolean | bucketsDefaultArgs<ExtArgs>
  }
  export type s3_multipart_uploadsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    buckets?: boolean | bucketsDefaultArgs<ExtArgs>
  }

  export type $s3_multipart_uploadsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "s3_multipart_uploads"
    objects: {
      buckets: Prisma.$bucketsPayload<ExtArgs>
      s3_multipart_uploads_parts: Prisma.$s3_multipart_uploads_partsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      in_progress_size: bigint
      upload_signature: string
      bucket_id: string
      key: string
      version: string
      owner_id: string | null
      created_at: Date
      user_metadata: Prisma.JsonValue | null
    }, ExtArgs["result"]["s3_multipart_uploads"]>
    composites: {}
  }

  type s3_multipart_uploadsGetPayload<S extends boolean | null | undefined | s3_multipart_uploadsDefaultArgs> = $Result.GetResult<Prisma.$s3_multipart_uploadsPayload, S>

  type s3_multipart_uploadsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<s3_multipart_uploadsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: S3_multipart_uploadsCountAggregateInputType | true
    }

  export interface s3_multipart_uploadsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['s3_multipart_uploads'], meta: { name: 's3_multipart_uploads' } }
    /**
     * Find zero or one S3_multipart_uploads that matches the filter.
     * @param {s3_multipart_uploadsFindUniqueArgs} args - Arguments to find a S3_multipart_uploads
     * @example
     * // Get one S3_multipart_uploads
     * const s3_multipart_uploads = await prisma.s3_multipart_uploads.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends s3_multipart_uploadsFindUniqueArgs>(args: SelectSubset<T, s3_multipart_uploadsFindUniqueArgs<ExtArgs>>): Prisma__s3_multipart_uploadsClient<$Result.GetResult<Prisma.$s3_multipart_uploadsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one S3_multipart_uploads that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {s3_multipart_uploadsFindUniqueOrThrowArgs} args - Arguments to find a S3_multipart_uploads
     * @example
     * // Get one S3_multipart_uploads
     * const s3_multipart_uploads = await prisma.s3_multipart_uploads.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends s3_multipart_uploadsFindUniqueOrThrowArgs>(args: SelectSubset<T, s3_multipart_uploadsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__s3_multipart_uploadsClient<$Result.GetResult<Prisma.$s3_multipart_uploadsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first S3_multipart_uploads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {s3_multipart_uploadsFindFirstArgs} args - Arguments to find a S3_multipart_uploads
     * @example
     * // Get one S3_multipart_uploads
     * const s3_multipart_uploads = await prisma.s3_multipart_uploads.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends s3_multipart_uploadsFindFirstArgs>(args?: SelectSubset<T, s3_multipart_uploadsFindFirstArgs<ExtArgs>>): Prisma__s3_multipart_uploadsClient<$Result.GetResult<Prisma.$s3_multipart_uploadsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first S3_multipart_uploads that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {s3_multipart_uploadsFindFirstOrThrowArgs} args - Arguments to find a S3_multipart_uploads
     * @example
     * // Get one S3_multipart_uploads
     * const s3_multipart_uploads = await prisma.s3_multipart_uploads.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends s3_multipart_uploadsFindFirstOrThrowArgs>(args?: SelectSubset<T, s3_multipart_uploadsFindFirstOrThrowArgs<ExtArgs>>): Prisma__s3_multipart_uploadsClient<$Result.GetResult<Prisma.$s3_multipart_uploadsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more S3_multipart_uploads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {s3_multipart_uploadsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all S3_multipart_uploads
     * const s3_multipart_uploads = await prisma.s3_multipart_uploads.findMany()
     * 
     * // Get first 10 S3_multipart_uploads
     * const s3_multipart_uploads = await prisma.s3_multipart_uploads.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const s3_multipart_uploadsWithIdOnly = await prisma.s3_multipart_uploads.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends s3_multipart_uploadsFindManyArgs>(args?: SelectSubset<T, s3_multipart_uploadsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$s3_multipart_uploadsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a S3_multipart_uploads.
     * @param {s3_multipart_uploadsCreateArgs} args - Arguments to create a S3_multipart_uploads.
     * @example
     * // Create one S3_multipart_uploads
     * const S3_multipart_uploads = await prisma.s3_multipart_uploads.create({
     *   data: {
     *     // ... data to create a S3_multipart_uploads
     *   }
     * })
     * 
     */
    create<T extends s3_multipart_uploadsCreateArgs>(args: SelectSubset<T, s3_multipart_uploadsCreateArgs<ExtArgs>>): Prisma__s3_multipart_uploadsClient<$Result.GetResult<Prisma.$s3_multipart_uploadsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many S3_multipart_uploads.
     * @param {s3_multipart_uploadsCreateManyArgs} args - Arguments to create many S3_multipart_uploads.
     * @example
     * // Create many S3_multipart_uploads
     * const s3_multipart_uploads = await prisma.s3_multipart_uploads.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends s3_multipart_uploadsCreateManyArgs>(args?: SelectSubset<T, s3_multipart_uploadsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many S3_multipart_uploads and returns the data saved in the database.
     * @param {s3_multipart_uploadsCreateManyAndReturnArgs} args - Arguments to create many S3_multipart_uploads.
     * @example
     * // Create many S3_multipart_uploads
     * const s3_multipart_uploads = await prisma.s3_multipart_uploads.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many S3_multipart_uploads and only return the `id`
     * const s3_multipart_uploadsWithIdOnly = await prisma.s3_multipart_uploads.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends s3_multipart_uploadsCreateManyAndReturnArgs>(args?: SelectSubset<T, s3_multipart_uploadsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$s3_multipart_uploadsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a S3_multipart_uploads.
     * @param {s3_multipart_uploadsDeleteArgs} args - Arguments to delete one S3_multipart_uploads.
     * @example
     * // Delete one S3_multipart_uploads
     * const S3_multipart_uploads = await prisma.s3_multipart_uploads.delete({
     *   where: {
     *     // ... filter to delete one S3_multipart_uploads
     *   }
     * })
     * 
     */
    delete<T extends s3_multipart_uploadsDeleteArgs>(args: SelectSubset<T, s3_multipart_uploadsDeleteArgs<ExtArgs>>): Prisma__s3_multipart_uploadsClient<$Result.GetResult<Prisma.$s3_multipart_uploadsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one S3_multipart_uploads.
     * @param {s3_multipart_uploadsUpdateArgs} args - Arguments to update one S3_multipart_uploads.
     * @example
     * // Update one S3_multipart_uploads
     * const s3_multipart_uploads = await prisma.s3_multipart_uploads.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends s3_multipart_uploadsUpdateArgs>(args: SelectSubset<T, s3_multipart_uploadsUpdateArgs<ExtArgs>>): Prisma__s3_multipart_uploadsClient<$Result.GetResult<Prisma.$s3_multipart_uploadsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more S3_multipart_uploads.
     * @param {s3_multipart_uploadsDeleteManyArgs} args - Arguments to filter S3_multipart_uploads to delete.
     * @example
     * // Delete a few S3_multipart_uploads
     * const { count } = await prisma.s3_multipart_uploads.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends s3_multipart_uploadsDeleteManyArgs>(args?: SelectSubset<T, s3_multipart_uploadsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more S3_multipart_uploads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {s3_multipart_uploadsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many S3_multipart_uploads
     * const s3_multipart_uploads = await prisma.s3_multipart_uploads.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends s3_multipart_uploadsUpdateManyArgs>(args: SelectSubset<T, s3_multipart_uploadsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more S3_multipart_uploads and returns the data updated in the database.
     * @param {s3_multipart_uploadsUpdateManyAndReturnArgs} args - Arguments to update many S3_multipart_uploads.
     * @example
     * // Update many S3_multipart_uploads
     * const s3_multipart_uploads = await prisma.s3_multipart_uploads.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more S3_multipart_uploads and only return the `id`
     * const s3_multipart_uploadsWithIdOnly = await prisma.s3_multipart_uploads.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends s3_multipart_uploadsUpdateManyAndReturnArgs>(args: SelectSubset<T, s3_multipart_uploadsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$s3_multipart_uploadsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one S3_multipart_uploads.
     * @param {s3_multipart_uploadsUpsertArgs} args - Arguments to update or create a S3_multipart_uploads.
     * @example
     * // Update or create a S3_multipart_uploads
     * const s3_multipart_uploads = await prisma.s3_multipart_uploads.upsert({
     *   create: {
     *     // ... data to create a S3_multipart_uploads
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the S3_multipart_uploads we want to update
     *   }
     * })
     */
    upsert<T extends s3_multipart_uploadsUpsertArgs>(args: SelectSubset<T, s3_multipart_uploadsUpsertArgs<ExtArgs>>): Prisma__s3_multipart_uploadsClient<$Result.GetResult<Prisma.$s3_multipart_uploadsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of S3_multipart_uploads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {s3_multipart_uploadsCountArgs} args - Arguments to filter S3_multipart_uploads to count.
     * @example
     * // Count the number of S3_multipart_uploads
     * const count = await prisma.s3_multipart_uploads.count({
     *   where: {
     *     // ... the filter for the S3_multipart_uploads we want to count
     *   }
     * })
    **/
    count<T extends s3_multipart_uploadsCountArgs>(
      args?: Subset<T, s3_multipart_uploadsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], S3_multipart_uploadsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a S3_multipart_uploads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {S3_multipart_uploadsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends S3_multipart_uploadsAggregateArgs>(args: Subset<T, S3_multipart_uploadsAggregateArgs>): Prisma.PrismaPromise<GetS3_multipart_uploadsAggregateType<T>>

    /**
     * Group by S3_multipart_uploads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {s3_multipart_uploadsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends s3_multipart_uploadsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: s3_multipart_uploadsGroupByArgs['orderBy'] }
        : { orderBy?: s3_multipart_uploadsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, s3_multipart_uploadsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetS3_multipart_uploadsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the s3_multipart_uploads model
   */
  readonly fields: s3_multipart_uploadsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for s3_multipart_uploads.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__s3_multipart_uploadsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    buckets<T extends bucketsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, bucketsDefaultArgs<ExtArgs>>): Prisma__bucketsClient<$Result.GetResult<Prisma.$bucketsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    s3_multipart_uploads_parts<T extends s3_multipart_uploads$s3_multipart_uploads_partsArgs<ExtArgs> = {}>(args?: Subset<T, s3_multipart_uploads$s3_multipart_uploads_partsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$s3_multipart_uploads_partsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the s3_multipart_uploads model
   */
  interface s3_multipart_uploadsFieldRefs {
    readonly id: FieldRef<"s3_multipart_uploads", 'String'>
    readonly in_progress_size: FieldRef<"s3_multipart_uploads", 'BigInt'>
    readonly upload_signature: FieldRef<"s3_multipart_uploads", 'String'>
    readonly bucket_id: FieldRef<"s3_multipart_uploads", 'String'>
    readonly key: FieldRef<"s3_multipart_uploads", 'String'>
    readonly version: FieldRef<"s3_multipart_uploads", 'String'>
    readonly owner_id: FieldRef<"s3_multipart_uploads", 'String'>
    readonly created_at: FieldRef<"s3_multipart_uploads", 'DateTime'>
    readonly user_metadata: FieldRef<"s3_multipart_uploads", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * s3_multipart_uploads findUnique
   */
  export type s3_multipart_uploadsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads
     */
    select?: s3_multipart_uploadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads
     */
    omit?: s3_multipart_uploadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploadsInclude<ExtArgs> | null
    /**
     * Filter, which s3_multipart_uploads to fetch.
     */
    where: s3_multipart_uploadsWhereUniqueInput
  }

  /**
   * s3_multipart_uploads findUniqueOrThrow
   */
  export type s3_multipart_uploadsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads
     */
    select?: s3_multipart_uploadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads
     */
    omit?: s3_multipart_uploadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploadsInclude<ExtArgs> | null
    /**
     * Filter, which s3_multipart_uploads to fetch.
     */
    where: s3_multipart_uploadsWhereUniqueInput
  }

  /**
   * s3_multipart_uploads findFirst
   */
  export type s3_multipart_uploadsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads
     */
    select?: s3_multipart_uploadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads
     */
    omit?: s3_multipart_uploadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploadsInclude<ExtArgs> | null
    /**
     * Filter, which s3_multipart_uploads to fetch.
     */
    where?: s3_multipart_uploadsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of s3_multipart_uploads to fetch.
     */
    orderBy?: s3_multipart_uploadsOrderByWithRelationInput | s3_multipart_uploadsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for s3_multipart_uploads.
     */
    cursor?: s3_multipart_uploadsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` s3_multipart_uploads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` s3_multipart_uploads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of s3_multipart_uploads.
     */
    distinct?: S3_multipart_uploadsScalarFieldEnum | S3_multipart_uploadsScalarFieldEnum[]
  }

  /**
   * s3_multipart_uploads findFirstOrThrow
   */
  export type s3_multipart_uploadsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads
     */
    select?: s3_multipart_uploadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads
     */
    omit?: s3_multipart_uploadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploadsInclude<ExtArgs> | null
    /**
     * Filter, which s3_multipart_uploads to fetch.
     */
    where?: s3_multipart_uploadsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of s3_multipart_uploads to fetch.
     */
    orderBy?: s3_multipart_uploadsOrderByWithRelationInput | s3_multipart_uploadsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for s3_multipart_uploads.
     */
    cursor?: s3_multipart_uploadsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` s3_multipart_uploads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` s3_multipart_uploads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of s3_multipart_uploads.
     */
    distinct?: S3_multipart_uploadsScalarFieldEnum | S3_multipart_uploadsScalarFieldEnum[]
  }

  /**
   * s3_multipart_uploads findMany
   */
  export type s3_multipart_uploadsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads
     */
    select?: s3_multipart_uploadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads
     */
    omit?: s3_multipart_uploadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploadsInclude<ExtArgs> | null
    /**
     * Filter, which s3_multipart_uploads to fetch.
     */
    where?: s3_multipart_uploadsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of s3_multipart_uploads to fetch.
     */
    orderBy?: s3_multipart_uploadsOrderByWithRelationInput | s3_multipart_uploadsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing s3_multipart_uploads.
     */
    cursor?: s3_multipart_uploadsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` s3_multipart_uploads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` s3_multipart_uploads.
     */
    skip?: number
    distinct?: S3_multipart_uploadsScalarFieldEnum | S3_multipart_uploadsScalarFieldEnum[]
  }

  /**
   * s3_multipart_uploads create
   */
  export type s3_multipart_uploadsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads
     */
    select?: s3_multipart_uploadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads
     */
    omit?: s3_multipart_uploadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploadsInclude<ExtArgs> | null
    /**
     * The data needed to create a s3_multipart_uploads.
     */
    data: XOR<s3_multipart_uploadsCreateInput, s3_multipart_uploadsUncheckedCreateInput>
  }

  /**
   * s3_multipart_uploads createMany
   */
  export type s3_multipart_uploadsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many s3_multipart_uploads.
     */
    data: s3_multipart_uploadsCreateManyInput | s3_multipart_uploadsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * s3_multipart_uploads createManyAndReturn
   */
  export type s3_multipart_uploadsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads
     */
    select?: s3_multipart_uploadsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads
     */
    omit?: s3_multipart_uploadsOmit<ExtArgs> | null
    /**
     * The data used to create many s3_multipart_uploads.
     */
    data: s3_multipart_uploadsCreateManyInput | s3_multipart_uploadsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploadsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * s3_multipart_uploads update
   */
  export type s3_multipart_uploadsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads
     */
    select?: s3_multipart_uploadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads
     */
    omit?: s3_multipart_uploadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploadsInclude<ExtArgs> | null
    /**
     * The data needed to update a s3_multipart_uploads.
     */
    data: XOR<s3_multipart_uploadsUpdateInput, s3_multipart_uploadsUncheckedUpdateInput>
    /**
     * Choose, which s3_multipart_uploads to update.
     */
    where: s3_multipart_uploadsWhereUniqueInput
  }

  /**
   * s3_multipart_uploads updateMany
   */
  export type s3_multipart_uploadsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update s3_multipart_uploads.
     */
    data: XOR<s3_multipart_uploadsUpdateManyMutationInput, s3_multipart_uploadsUncheckedUpdateManyInput>
    /**
     * Filter which s3_multipart_uploads to update
     */
    where?: s3_multipart_uploadsWhereInput
    /**
     * Limit how many s3_multipart_uploads to update.
     */
    limit?: number
  }

  /**
   * s3_multipart_uploads updateManyAndReturn
   */
  export type s3_multipart_uploadsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads
     */
    select?: s3_multipart_uploadsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads
     */
    omit?: s3_multipart_uploadsOmit<ExtArgs> | null
    /**
     * The data used to update s3_multipart_uploads.
     */
    data: XOR<s3_multipart_uploadsUpdateManyMutationInput, s3_multipart_uploadsUncheckedUpdateManyInput>
    /**
     * Filter which s3_multipart_uploads to update
     */
    where?: s3_multipart_uploadsWhereInput
    /**
     * Limit how many s3_multipart_uploads to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploadsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * s3_multipart_uploads upsert
   */
  export type s3_multipart_uploadsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads
     */
    select?: s3_multipart_uploadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads
     */
    omit?: s3_multipart_uploadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploadsInclude<ExtArgs> | null
    /**
     * The filter to search for the s3_multipart_uploads to update in case it exists.
     */
    where: s3_multipart_uploadsWhereUniqueInput
    /**
     * In case the s3_multipart_uploads found by the `where` argument doesn't exist, create a new s3_multipart_uploads with this data.
     */
    create: XOR<s3_multipart_uploadsCreateInput, s3_multipart_uploadsUncheckedCreateInput>
    /**
     * In case the s3_multipart_uploads was found with the provided `where` argument, update it with this data.
     */
    update: XOR<s3_multipart_uploadsUpdateInput, s3_multipart_uploadsUncheckedUpdateInput>
  }

  /**
   * s3_multipart_uploads delete
   */
  export type s3_multipart_uploadsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads
     */
    select?: s3_multipart_uploadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads
     */
    omit?: s3_multipart_uploadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploadsInclude<ExtArgs> | null
    /**
     * Filter which s3_multipart_uploads to delete.
     */
    where: s3_multipart_uploadsWhereUniqueInput
  }

  /**
   * s3_multipart_uploads deleteMany
   */
  export type s3_multipart_uploadsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which s3_multipart_uploads to delete
     */
    where?: s3_multipart_uploadsWhereInput
    /**
     * Limit how many s3_multipart_uploads to delete.
     */
    limit?: number
  }

  /**
   * s3_multipart_uploads.s3_multipart_uploads_parts
   */
  export type s3_multipart_uploads$s3_multipart_uploads_partsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads_parts
     */
    select?: s3_multipart_uploads_partsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads_parts
     */
    omit?: s3_multipart_uploads_partsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploads_partsInclude<ExtArgs> | null
    where?: s3_multipart_uploads_partsWhereInput
    orderBy?: s3_multipart_uploads_partsOrderByWithRelationInput | s3_multipart_uploads_partsOrderByWithRelationInput[]
    cursor?: s3_multipart_uploads_partsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: S3_multipart_uploads_partsScalarFieldEnum | S3_multipart_uploads_partsScalarFieldEnum[]
  }

  /**
   * s3_multipart_uploads without action
   */
  export type s3_multipart_uploadsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads
     */
    select?: s3_multipart_uploadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads
     */
    omit?: s3_multipart_uploadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploadsInclude<ExtArgs> | null
  }


  /**
   * Model s3_multipart_uploads_parts
   */

  export type AggregateS3_multipart_uploads_parts = {
    _count: S3_multipart_uploads_partsCountAggregateOutputType | null
    _avg: S3_multipart_uploads_partsAvgAggregateOutputType | null
    _sum: S3_multipart_uploads_partsSumAggregateOutputType | null
    _min: S3_multipart_uploads_partsMinAggregateOutputType | null
    _max: S3_multipart_uploads_partsMaxAggregateOutputType | null
  }

  export type S3_multipart_uploads_partsAvgAggregateOutputType = {
    size: number | null
    part_number: number | null
  }

  export type S3_multipart_uploads_partsSumAggregateOutputType = {
    size: bigint | null
    part_number: number | null
  }

  export type S3_multipart_uploads_partsMinAggregateOutputType = {
    id: string | null
    upload_id: string | null
    size: bigint | null
    part_number: number | null
    bucket_id: string | null
    key: string | null
    etag: string | null
    owner_id: string | null
    version: string | null
    created_at: Date | null
  }

  export type S3_multipart_uploads_partsMaxAggregateOutputType = {
    id: string | null
    upload_id: string | null
    size: bigint | null
    part_number: number | null
    bucket_id: string | null
    key: string | null
    etag: string | null
    owner_id: string | null
    version: string | null
    created_at: Date | null
  }

  export type S3_multipart_uploads_partsCountAggregateOutputType = {
    id: number
    upload_id: number
    size: number
    part_number: number
    bucket_id: number
    key: number
    etag: number
    owner_id: number
    version: number
    created_at: number
    _all: number
  }


  export type S3_multipart_uploads_partsAvgAggregateInputType = {
    size?: true
    part_number?: true
  }

  export type S3_multipart_uploads_partsSumAggregateInputType = {
    size?: true
    part_number?: true
  }

  export type S3_multipart_uploads_partsMinAggregateInputType = {
    id?: true
    upload_id?: true
    size?: true
    part_number?: true
    bucket_id?: true
    key?: true
    etag?: true
    owner_id?: true
    version?: true
    created_at?: true
  }

  export type S3_multipart_uploads_partsMaxAggregateInputType = {
    id?: true
    upload_id?: true
    size?: true
    part_number?: true
    bucket_id?: true
    key?: true
    etag?: true
    owner_id?: true
    version?: true
    created_at?: true
  }

  export type S3_multipart_uploads_partsCountAggregateInputType = {
    id?: true
    upload_id?: true
    size?: true
    part_number?: true
    bucket_id?: true
    key?: true
    etag?: true
    owner_id?: true
    version?: true
    created_at?: true
    _all?: true
  }

  export type S3_multipart_uploads_partsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which s3_multipart_uploads_parts to aggregate.
     */
    where?: s3_multipart_uploads_partsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of s3_multipart_uploads_parts to fetch.
     */
    orderBy?: s3_multipart_uploads_partsOrderByWithRelationInput | s3_multipart_uploads_partsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: s3_multipart_uploads_partsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` s3_multipart_uploads_parts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` s3_multipart_uploads_parts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned s3_multipart_uploads_parts
    **/
    _count?: true | S3_multipart_uploads_partsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: S3_multipart_uploads_partsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: S3_multipart_uploads_partsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: S3_multipart_uploads_partsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: S3_multipart_uploads_partsMaxAggregateInputType
  }

  export type GetS3_multipart_uploads_partsAggregateType<T extends S3_multipart_uploads_partsAggregateArgs> = {
        [P in keyof T & keyof AggregateS3_multipart_uploads_parts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateS3_multipart_uploads_parts[P]>
      : GetScalarType<T[P], AggregateS3_multipart_uploads_parts[P]>
  }




  export type s3_multipart_uploads_partsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: s3_multipart_uploads_partsWhereInput
    orderBy?: s3_multipart_uploads_partsOrderByWithAggregationInput | s3_multipart_uploads_partsOrderByWithAggregationInput[]
    by: S3_multipart_uploads_partsScalarFieldEnum[] | S3_multipart_uploads_partsScalarFieldEnum
    having?: s3_multipart_uploads_partsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: S3_multipart_uploads_partsCountAggregateInputType | true
    _avg?: S3_multipart_uploads_partsAvgAggregateInputType
    _sum?: S3_multipart_uploads_partsSumAggregateInputType
    _min?: S3_multipart_uploads_partsMinAggregateInputType
    _max?: S3_multipart_uploads_partsMaxAggregateInputType
  }

  export type S3_multipart_uploads_partsGroupByOutputType = {
    id: string
    upload_id: string
    size: bigint
    part_number: number
    bucket_id: string
    key: string
    etag: string
    owner_id: string | null
    version: string
    created_at: Date
    _count: S3_multipart_uploads_partsCountAggregateOutputType | null
    _avg: S3_multipart_uploads_partsAvgAggregateOutputType | null
    _sum: S3_multipart_uploads_partsSumAggregateOutputType | null
    _min: S3_multipart_uploads_partsMinAggregateOutputType | null
    _max: S3_multipart_uploads_partsMaxAggregateOutputType | null
  }

  type GetS3_multipart_uploads_partsGroupByPayload<T extends s3_multipart_uploads_partsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<S3_multipart_uploads_partsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof S3_multipart_uploads_partsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], S3_multipart_uploads_partsGroupByOutputType[P]>
            : GetScalarType<T[P], S3_multipart_uploads_partsGroupByOutputType[P]>
        }
      >
    >


  export type s3_multipart_uploads_partsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    upload_id?: boolean
    size?: boolean
    part_number?: boolean
    bucket_id?: boolean
    key?: boolean
    etag?: boolean
    owner_id?: boolean
    version?: boolean
    created_at?: boolean
    buckets?: boolean | bucketsDefaultArgs<ExtArgs>
    s3_multipart_uploads?: boolean | s3_multipart_uploadsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["s3_multipart_uploads_parts"]>

  export type s3_multipart_uploads_partsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    upload_id?: boolean
    size?: boolean
    part_number?: boolean
    bucket_id?: boolean
    key?: boolean
    etag?: boolean
    owner_id?: boolean
    version?: boolean
    created_at?: boolean
    buckets?: boolean | bucketsDefaultArgs<ExtArgs>
    s3_multipart_uploads?: boolean | s3_multipart_uploadsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["s3_multipart_uploads_parts"]>

  export type s3_multipart_uploads_partsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    upload_id?: boolean
    size?: boolean
    part_number?: boolean
    bucket_id?: boolean
    key?: boolean
    etag?: boolean
    owner_id?: boolean
    version?: boolean
    created_at?: boolean
    buckets?: boolean | bucketsDefaultArgs<ExtArgs>
    s3_multipart_uploads?: boolean | s3_multipart_uploadsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["s3_multipart_uploads_parts"]>

  export type s3_multipart_uploads_partsSelectScalar = {
    id?: boolean
    upload_id?: boolean
    size?: boolean
    part_number?: boolean
    bucket_id?: boolean
    key?: boolean
    etag?: boolean
    owner_id?: boolean
    version?: boolean
    created_at?: boolean
  }

  export type s3_multipart_uploads_partsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "upload_id" | "size" | "part_number" | "bucket_id" | "key" | "etag" | "owner_id" | "version" | "created_at", ExtArgs["result"]["s3_multipart_uploads_parts"]>
  export type s3_multipart_uploads_partsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    buckets?: boolean | bucketsDefaultArgs<ExtArgs>
    s3_multipart_uploads?: boolean | s3_multipart_uploadsDefaultArgs<ExtArgs>
  }
  export type s3_multipart_uploads_partsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    buckets?: boolean | bucketsDefaultArgs<ExtArgs>
    s3_multipart_uploads?: boolean | s3_multipart_uploadsDefaultArgs<ExtArgs>
  }
  export type s3_multipart_uploads_partsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    buckets?: boolean | bucketsDefaultArgs<ExtArgs>
    s3_multipart_uploads?: boolean | s3_multipart_uploadsDefaultArgs<ExtArgs>
  }

  export type $s3_multipart_uploads_partsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "s3_multipart_uploads_parts"
    objects: {
      buckets: Prisma.$bucketsPayload<ExtArgs>
      s3_multipart_uploads: Prisma.$s3_multipart_uploadsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      upload_id: string
      size: bigint
      part_number: number
      bucket_id: string
      key: string
      etag: string
      owner_id: string | null
      version: string
      created_at: Date
    }, ExtArgs["result"]["s3_multipart_uploads_parts"]>
    composites: {}
  }

  type s3_multipart_uploads_partsGetPayload<S extends boolean | null | undefined | s3_multipart_uploads_partsDefaultArgs> = $Result.GetResult<Prisma.$s3_multipart_uploads_partsPayload, S>

  type s3_multipart_uploads_partsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<s3_multipart_uploads_partsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: S3_multipart_uploads_partsCountAggregateInputType | true
    }

  export interface s3_multipart_uploads_partsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['s3_multipart_uploads_parts'], meta: { name: 's3_multipart_uploads_parts' } }
    /**
     * Find zero or one S3_multipart_uploads_parts that matches the filter.
     * @param {s3_multipart_uploads_partsFindUniqueArgs} args - Arguments to find a S3_multipart_uploads_parts
     * @example
     * // Get one S3_multipart_uploads_parts
     * const s3_multipart_uploads_parts = await prisma.s3_multipart_uploads_parts.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends s3_multipart_uploads_partsFindUniqueArgs>(args: SelectSubset<T, s3_multipart_uploads_partsFindUniqueArgs<ExtArgs>>): Prisma__s3_multipart_uploads_partsClient<$Result.GetResult<Prisma.$s3_multipart_uploads_partsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one S3_multipart_uploads_parts that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {s3_multipart_uploads_partsFindUniqueOrThrowArgs} args - Arguments to find a S3_multipart_uploads_parts
     * @example
     * // Get one S3_multipart_uploads_parts
     * const s3_multipart_uploads_parts = await prisma.s3_multipart_uploads_parts.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends s3_multipart_uploads_partsFindUniqueOrThrowArgs>(args: SelectSubset<T, s3_multipart_uploads_partsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__s3_multipart_uploads_partsClient<$Result.GetResult<Prisma.$s3_multipart_uploads_partsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first S3_multipart_uploads_parts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {s3_multipart_uploads_partsFindFirstArgs} args - Arguments to find a S3_multipart_uploads_parts
     * @example
     * // Get one S3_multipart_uploads_parts
     * const s3_multipart_uploads_parts = await prisma.s3_multipart_uploads_parts.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends s3_multipart_uploads_partsFindFirstArgs>(args?: SelectSubset<T, s3_multipart_uploads_partsFindFirstArgs<ExtArgs>>): Prisma__s3_multipart_uploads_partsClient<$Result.GetResult<Prisma.$s3_multipart_uploads_partsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first S3_multipart_uploads_parts that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {s3_multipart_uploads_partsFindFirstOrThrowArgs} args - Arguments to find a S3_multipart_uploads_parts
     * @example
     * // Get one S3_multipart_uploads_parts
     * const s3_multipart_uploads_parts = await prisma.s3_multipart_uploads_parts.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends s3_multipart_uploads_partsFindFirstOrThrowArgs>(args?: SelectSubset<T, s3_multipart_uploads_partsFindFirstOrThrowArgs<ExtArgs>>): Prisma__s3_multipart_uploads_partsClient<$Result.GetResult<Prisma.$s3_multipart_uploads_partsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more S3_multipart_uploads_parts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {s3_multipart_uploads_partsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all S3_multipart_uploads_parts
     * const s3_multipart_uploads_parts = await prisma.s3_multipart_uploads_parts.findMany()
     * 
     * // Get first 10 S3_multipart_uploads_parts
     * const s3_multipart_uploads_parts = await prisma.s3_multipart_uploads_parts.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const s3_multipart_uploads_partsWithIdOnly = await prisma.s3_multipart_uploads_parts.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends s3_multipart_uploads_partsFindManyArgs>(args?: SelectSubset<T, s3_multipart_uploads_partsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$s3_multipart_uploads_partsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a S3_multipart_uploads_parts.
     * @param {s3_multipart_uploads_partsCreateArgs} args - Arguments to create a S3_multipart_uploads_parts.
     * @example
     * // Create one S3_multipart_uploads_parts
     * const S3_multipart_uploads_parts = await prisma.s3_multipart_uploads_parts.create({
     *   data: {
     *     // ... data to create a S3_multipart_uploads_parts
     *   }
     * })
     * 
     */
    create<T extends s3_multipart_uploads_partsCreateArgs>(args: SelectSubset<T, s3_multipart_uploads_partsCreateArgs<ExtArgs>>): Prisma__s3_multipart_uploads_partsClient<$Result.GetResult<Prisma.$s3_multipart_uploads_partsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many S3_multipart_uploads_parts.
     * @param {s3_multipart_uploads_partsCreateManyArgs} args - Arguments to create many S3_multipart_uploads_parts.
     * @example
     * // Create many S3_multipart_uploads_parts
     * const s3_multipart_uploads_parts = await prisma.s3_multipart_uploads_parts.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends s3_multipart_uploads_partsCreateManyArgs>(args?: SelectSubset<T, s3_multipart_uploads_partsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many S3_multipart_uploads_parts and returns the data saved in the database.
     * @param {s3_multipart_uploads_partsCreateManyAndReturnArgs} args - Arguments to create many S3_multipart_uploads_parts.
     * @example
     * // Create many S3_multipart_uploads_parts
     * const s3_multipart_uploads_parts = await prisma.s3_multipart_uploads_parts.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many S3_multipart_uploads_parts and only return the `id`
     * const s3_multipart_uploads_partsWithIdOnly = await prisma.s3_multipart_uploads_parts.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends s3_multipart_uploads_partsCreateManyAndReturnArgs>(args?: SelectSubset<T, s3_multipart_uploads_partsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$s3_multipart_uploads_partsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a S3_multipart_uploads_parts.
     * @param {s3_multipart_uploads_partsDeleteArgs} args - Arguments to delete one S3_multipart_uploads_parts.
     * @example
     * // Delete one S3_multipart_uploads_parts
     * const S3_multipart_uploads_parts = await prisma.s3_multipart_uploads_parts.delete({
     *   where: {
     *     // ... filter to delete one S3_multipart_uploads_parts
     *   }
     * })
     * 
     */
    delete<T extends s3_multipart_uploads_partsDeleteArgs>(args: SelectSubset<T, s3_multipart_uploads_partsDeleteArgs<ExtArgs>>): Prisma__s3_multipart_uploads_partsClient<$Result.GetResult<Prisma.$s3_multipart_uploads_partsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one S3_multipart_uploads_parts.
     * @param {s3_multipart_uploads_partsUpdateArgs} args - Arguments to update one S3_multipart_uploads_parts.
     * @example
     * // Update one S3_multipart_uploads_parts
     * const s3_multipart_uploads_parts = await prisma.s3_multipart_uploads_parts.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends s3_multipart_uploads_partsUpdateArgs>(args: SelectSubset<T, s3_multipart_uploads_partsUpdateArgs<ExtArgs>>): Prisma__s3_multipart_uploads_partsClient<$Result.GetResult<Prisma.$s3_multipart_uploads_partsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more S3_multipart_uploads_parts.
     * @param {s3_multipart_uploads_partsDeleteManyArgs} args - Arguments to filter S3_multipart_uploads_parts to delete.
     * @example
     * // Delete a few S3_multipart_uploads_parts
     * const { count } = await prisma.s3_multipart_uploads_parts.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends s3_multipart_uploads_partsDeleteManyArgs>(args?: SelectSubset<T, s3_multipart_uploads_partsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more S3_multipart_uploads_parts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {s3_multipart_uploads_partsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many S3_multipart_uploads_parts
     * const s3_multipart_uploads_parts = await prisma.s3_multipart_uploads_parts.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends s3_multipart_uploads_partsUpdateManyArgs>(args: SelectSubset<T, s3_multipart_uploads_partsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more S3_multipart_uploads_parts and returns the data updated in the database.
     * @param {s3_multipart_uploads_partsUpdateManyAndReturnArgs} args - Arguments to update many S3_multipart_uploads_parts.
     * @example
     * // Update many S3_multipart_uploads_parts
     * const s3_multipart_uploads_parts = await prisma.s3_multipart_uploads_parts.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more S3_multipart_uploads_parts and only return the `id`
     * const s3_multipart_uploads_partsWithIdOnly = await prisma.s3_multipart_uploads_parts.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends s3_multipart_uploads_partsUpdateManyAndReturnArgs>(args: SelectSubset<T, s3_multipart_uploads_partsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$s3_multipart_uploads_partsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one S3_multipart_uploads_parts.
     * @param {s3_multipart_uploads_partsUpsertArgs} args - Arguments to update or create a S3_multipart_uploads_parts.
     * @example
     * // Update or create a S3_multipart_uploads_parts
     * const s3_multipart_uploads_parts = await prisma.s3_multipart_uploads_parts.upsert({
     *   create: {
     *     // ... data to create a S3_multipart_uploads_parts
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the S3_multipart_uploads_parts we want to update
     *   }
     * })
     */
    upsert<T extends s3_multipart_uploads_partsUpsertArgs>(args: SelectSubset<T, s3_multipart_uploads_partsUpsertArgs<ExtArgs>>): Prisma__s3_multipart_uploads_partsClient<$Result.GetResult<Prisma.$s3_multipart_uploads_partsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of S3_multipart_uploads_parts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {s3_multipart_uploads_partsCountArgs} args - Arguments to filter S3_multipart_uploads_parts to count.
     * @example
     * // Count the number of S3_multipart_uploads_parts
     * const count = await prisma.s3_multipart_uploads_parts.count({
     *   where: {
     *     // ... the filter for the S3_multipart_uploads_parts we want to count
     *   }
     * })
    **/
    count<T extends s3_multipart_uploads_partsCountArgs>(
      args?: Subset<T, s3_multipart_uploads_partsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], S3_multipart_uploads_partsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a S3_multipart_uploads_parts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {S3_multipart_uploads_partsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends S3_multipart_uploads_partsAggregateArgs>(args: Subset<T, S3_multipart_uploads_partsAggregateArgs>): Prisma.PrismaPromise<GetS3_multipart_uploads_partsAggregateType<T>>

    /**
     * Group by S3_multipart_uploads_parts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {s3_multipart_uploads_partsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends s3_multipart_uploads_partsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: s3_multipart_uploads_partsGroupByArgs['orderBy'] }
        : { orderBy?: s3_multipart_uploads_partsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, s3_multipart_uploads_partsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetS3_multipart_uploads_partsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the s3_multipart_uploads_parts model
   */
  readonly fields: s3_multipart_uploads_partsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for s3_multipart_uploads_parts.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__s3_multipart_uploads_partsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    buckets<T extends bucketsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, bucketsDefaultArgs<ExtArgs>>): Prisma__bucketsClient<$Result.GetResult<Prisma.$bucketsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    s3_multipart_uploads<T extends s3_multipart_uploadsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, s3_multipart_uploadsDefaultArgs<ExtArgs>>): Prisma__s3_multipart_uploadsClient<$Result.GetResult<Prisma.$s3_multipart_uploadsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the s3_multipart_uploads_parts model
   */
  interface s3_multipart_uploads_partsFieldRefs {
    readonly id: FieldRef<"s3_multipart_uploads_parts", 'String'>
    readonly upload_id: FieldRef<"s3_multipart_uploads_parts", 'String'>
    readonly size: FieldRef<"s3_multipart_uploads_parts", 'BigInt'>
    readonly part_number: FieldRef<"s3_multipart_uploads_parts", 'Int'>
    readonly bucket_id: FieldRef<"s3_multipart_uploads_parts", 'String'>
    readonly key: FieldRef<"s3_multipart_uploads_parts", 'String'>
    readonly etag: FieldRef<"s3_multipart_uploads_parts", 'String'>
    readonly owner_id: FieldRef<"s3_multipart_uploads_parts", 'String'>
    readonly version: FieldRef<"s3_multipart_uploads_parts", 'String'>
    readonly created_at: FieldRef<"s3_multipart_uploads_parts", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * s3_multipart_uploads_parts findUnique
   */
  export type s3_multipart_uploads_partsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads_parts
     */
    select?: s3_multipart_uploads_partsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads_parts
     */
    omit?: s3_multipart_uploads_partsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploads_partsInclude<ExtArgs> | null
    /**
     * Filter, which s3_multipart_uploads_parts to fetch.
     */
    where: s3_multipart_uploads_partsWhereUniqueInput
  }

  /**
   * s3_multipart_uploads_parts findUniqueOrThrow
   */
  export type s3_multipart_uploads_partsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads_parts
     */
    select?: s3_multipart_uploads_partsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads_parts
     */
    omit?: s3_multipart_uploads_partsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploads_partsInclude<ExtArgs> | null
    /**
     * Filter, which s3_multipart_uploads_parts to fetch.
     */
    where: s3_multipart_uploads_partsWhereUniqueInput
  }

  /**
   * s3_multipart_uploads_parts findFirst
   */
  export type s3_multipart_uploads_partsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads_parts
     */
    select?: s3_multipart_uploads_partsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads_parts
     */
    omit?: s3_multipart_uploads_partsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploads_partsInclude<ExtArgs> | null
    /**
     * Filter, which s3_multipart_uploads_parts to fetch.
     */
    where?: s3_multipart_uploads_partsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of s3_multipart_uploads_parts to fetch.
     */
    orderBy?: s3_multipart_uploads_partsOrderByWithRelationInput | s3_multipart_uploads_partsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for s3_multipart_uploads_parts.
     */
    cursor?: s3_multipart_uploads_partsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` s3_multipart_uploads_parts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` s3_multipart_uploads_parts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of s3_multipart_uploads_parts.
     */
    distinct?: S3_multipart_uploads_partsScalarFieldEnum | S3_multipart_uploads_partsScalarFieldEnum[]
  }

  /**
   * s3_multipart_uploads_parts findFirstOrThrow
   */
  export type s3_multipart_uploads_partsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads_parts
     */
    select?: s3_multipart_uploads_partsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads_parts
     */
    omit?: s3_multipart_uploads_partsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploads_partsInclude<ExtArgs> | null
    /**
     * Filter, which s3_multipart_uploads_parts to fetch.
     */
    where?: s3_multipart_uploads_partsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of s3_multipart_uploads_parts to fetch.
     */
    orderBy?: s3_multipart_uploads_partsOrderByWithRelationInput | s3_multipart_uploads_partsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for s3_multipart_uploads_parts.
     */
    cursor?: s3_multipart_uploads_partsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` s3_multipart_uploads_parts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` s3_multipart_uploads_parts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of s3_multipart_uploads_parts.
     */
    distinct?: S3_multipart_uploads_partsScalarFieldEnum | S3_multipart_uploads_partsScalarFieldEnum[]
  }

  /**
   * s3_multipart_uploads_parts findMany
   */
  export type s3_multipart_uploads_partsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads_parts
     */
    select?: s3_multipart_uploads_partsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads_parts
     */
    omit?: s3_multipart_uploads_partsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploads_partsInclude<ExtArgs> | null
    /**
     * Filter, which s3_multipart_uploads_parts to fetch.
     */
    where?: s3_multipart_uploads_partsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of s3_multipart_uploads_parts to fetch.
     */
    orderBy?: s3_multipart_uploads_partsOrderByWithRelationInput | s3_multipart_uploads_partsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing s3_multipart_uploads_parts.
     */
    cursor?: s3_multipart_uploads_partsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` s3_multipart_uploads_parts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` s3_multipart_uploads_parts.
     */
    skip?: number
    distinct?: S3_multipart_uploads_partsScalarFieldEnum | S3_multipart_uploads_partsScalarFieldEnum[]
  }

  /**
   * s3_multipart_uploads_parts create
   */
  export type s3_multipart_uploads_partsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads_parts
     */
    select?: s3_multipart_uploads_partsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads_parts
     */
    omit?: s3_multipart_uploads_partsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploads_partsInclude<ExtArgs> | null
    /**
     * The data needed to create a s3_multipart_uploads_parts.
     */
    data: XOR<s3_multipart_uploads_partsCreateInput, s3_multipart_uploads_partsUncheckedCreateInput>
  }

  /**
   * s3_multipart_uploads_parts createMany
   */
  export type s3_multipart_uploads_partsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many s3_multipart_uploads_parts.
     */
    data: s3_multipart_uploads_partsCreateManyInput | s3_multipart_uploads_partsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * s3_multipart_uploads_parts createManyAndReturn
   */
  export type s3_multipart_uploads_partsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads_parts
     */
    select?: s3_multipart_uploads_partsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads_parts
     */
    omit?: s3_multipart_uploads_partsOmit<ExtArgs> | null
    /**
     * The data used to create many s3_multipart_uploads_parts.
     */
    data: s3_multipart_uploads_partsCreateManyInput | s3_multipart_uploads_partsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploads_partsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * s3_multipart_uploads_parts update
   */
  export type s3_multipart_uploads_partsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads_parts
     */
    select?: s3_multipart_uploads_partsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads_parts
     */
    omit?: s3_multipart_uploads_partsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploads_partsInclude<ExtArgs> | null
    /**
     * The data needed to update a s3_multipart_uploads_parts.
     */
    data: XOR<s3_multipart_uploads_partsUpdateInput, s3_multipart_uploads_partsUncheckedUpdateInput>
    /**
     * Choose, which s3_multipart_uploads_parts to update.
     */
    where: s3_multipart_uploads_partsWhereUniqueInput
  }

  /**
   * s3_multipart_uploads_parts updateMany
   */
  export type s3_multipart_uploads_partsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update s3_multipart_uploads_parts.
     */
    data: XOR<s3_multipart_uploads_partsUpdateManyMutationInput, s3_multipart_uploads_partsUncheckedUpdateManyInput>
    /**
     * Filter which s3_multipart_uploads_parts to update
     */
    where?: s3_multipart_uploads_partsWhereInput
    /**
     * Limit how many s3_multipart_uploads_parts to update.
     */
    limit?: number
  }

  /**
   * s3_multipart_uploads_parts updateManyAndReturn
   */
  export type s3_multipart_uploads_partsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads_parts
     */
    select?: s3_multipart_uploads_partsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads_parts
     */
    omit?: s3_multipart_uploads_partsOmit<ExtArgs> | null
    /**
     * The data used to update s3_multipart_uploads_parts.
     */
    data: XOR<s3_multipart_uploads_partsUpdateManyMutationInput, s3_multipart_uploads_partsUncheckedUpdateManyInput>
    /**
     * Filter which s3_multipart_uploads_parts to update
     */
    where?: s3_multipart_uploads_partsWhereInput
    /**
     * Limit how many s3_multipart_uploads_parts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploads_partsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * s3_multipart_uploads_parts upsert
   */
  export type s3_multipart_uploads_partsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads_parts
     */
    select?: s3_multipart_uploads_partsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads_parts
     */
    omit?: s3_multipart_uploads_partsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploads_partsInclude<ExtArgs> | null
    /**
     * The filter to search for the s3_multipart_uploads_parts to update in case it exists.
     */
    where: s3_multipart_uploads_partsWhereUniqueInput
    /**
     * In case the s3_multipart_uploads_parts found by the `where` argument doesn't exist, create a new s3_multipart_uploads_parts with this data.
     */
    create: XOR<s3_multipart_uploads_partsCreateInput, s3_multipart_uploads_partsUncheckedCreateInput>
    /**
     * In case the s3_multipart_uploads_parts was found with the provided `where` argument, update it with this data.
     */
    update: XOR<s3_multipart_uploads_partsUpdateInput, s3_multipart_uploads_partsUncheckedUpdateInput>
  }

  /**
   * s3_multipart_uploads_parts delete
   */
  export type s3_multipart_uploads_partsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads_parts
     */
    select?: s3_multipart_uploads_partsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads_parts
     */
    omit?: s3_multipart_uploads_partsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploads_partsInclude<ExtArgs> | null
    /**
     * Filter which s3_multipart_uploads_parts to delete.
     */
    where: s3_multipart_uploads_partsWhereUniqueInput
  }

  /**
   * s3_multipart_uploads_parts deleteMany
   */
  export type s3_multipart_uploads_partsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which s3_multipart_uploads_parts to delete
     */
    where?: s3_multipart_uploads_partsWhereInput
    /**
     * Limit how many s3_multipart_uploads_parts to delete.
     */
    limit?: number
  }

  /**
   * s3_multipart_uploads_parts without action
   */
  export type s3_multipart_uploads_partsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the s3_multipart_uploads_parts
     */
    select?: s3_multipart_uploads_partsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the s3_multipart_uploads_parts
     */
    omit?: s3_multipart_uploads_partsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: s3_multipart_uploads_partsInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserProfilesScalarFieldEnum: {
    id: 'id',
    username: 'username',
    fullName: 'fullName',
    email: 'email',
    phone: 'phone',
    avatarUrl: 'avatarUrl',
    website: 'website',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserProfilesScalarFieldEnum = (typeof UserProfilesScalarFieldEnum)[keyof typeof UserProfilesScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    department: 'department',
    email: 'email',
    name: 'name',
    jobTitle: 'jobTitle',
    location: 'location',
    personalEmail: 'personalEmail',
    reportsToId: 'reportsToId',
    type: 'type',
    status: 'status'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const UserHistoryScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    action: 'action',
    field: 'field',
    newValue: 'newValue',
    oldValue: 'oldValue',
    updatedBy: 'updatedBy',
    updatedOn: 'updatedOn'
  };

  export type UserHistoryScalarFieldEnum = (typeof UserHistoryScalarFieldEnum)[keyof typeof UserHistoryScalarFieldEnum]


  export const AccountRepScalarFieldEnum: {
    id: 'id',
    softwareId: 'softwareId',
    email: 'email',
    name: 'name',
    phone: 'phone'
  };

  export type AccountRepScalarFieldEnum = (typeof AccountRepScalarFieldEnum)[keyof typeof AccountRepScalarFieldEnum]


  export const SoftwareScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    category: 'category',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    userCount: 'userCount',
    notes: 'notes',
    notesLastUpdatedById: 'notesLastUpdatedById',
    accountRep: 'accountRep',
    amount: 'amount',
    currency: 'currency',
    licenseType: 'licenseType',
    paymentDueDate: 'paymentDueDate',
    paymentFrequency: 'paymentFrequency',
    paymentMethod: 'paymentMethod',
    pricePerUser: 'pricePerUser',
    updatedById: 'updatedById',
    website: 'website'
  };

  export type SoftwareScalarFieldEnum = (typeof SoftwareScalarFieldEnum)[keyof typeof SoftwareScalarFieldEnum]


  export const SoftwareHistoryScalarFieldEnum: {
    id: 'id',
    softwareId: 'softwareId',
    action: 'action',
    field: 'field',
    newValue: 'newValue',
    oldValue: 'oldValue',
    updatedBy: 'updatedBy',
    updatedOn: 'updatedOn'
  };

  export type SoftwareHistoryScalarFieldEnum = (typeof SoftwareHistoryScalarFieldEnum)[keyof typeof SoftwareHistoryScalarFieldEnum]


  export const UserSoftwareScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    softwareId: 'softwareId',
    grantedById: 'grantedById',
    accessLevel: 'accessLevel',
    role: 'role',
    assignedAt: 'assignedAt'
  };

  export type UserSoftwareScalarFieldEnum = (typeof UserSoftwareScalarFieldEnum)[keyof typeof UserSoftwareScalarFieldEnum]


  export const SharedAccountScalarFieldEnum: {
    id: 'id',
    email: 'email',
    name: 'name',
    normalizedName: 'normalizedName',
    location: 'location',
    type: 'type',
    active: 'active',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    updatedById: 'updatedById',
    userCount: 'userCount'
  };

  export type SharedAccountScalarFieldEnum = (typeof SharedAccountScalarFieldEnum)[keyof typeof SharedAccountScalarFieldEnum]


  export const SharedAccountHistoryScalarFieldEnum: {
    id: 'id',
    sharedAccountId: 'sharedAccountId',
    action: 'action',
    field: 'field',
    newValue: 'newValue',
    oldValue: 'oldValue',
    updatedBy: 'updatedBy',
    updatedOn: 'updatedOn'
  };

  export type SharedAccountHistoryScalarFieldEnum = (typeof SharedAccountHistoryScalarFieldEnum)[keyof typeof SharedAccountHistoryScalarFieldEnum]


  export const SoftwareAccessScalarFieldEnum: {
    id: 'id',
    sharedAccountId: 'sharedAccountId',
    softwareId: 'softwareId',
    access: 'access',
    lastEdited: 'lastEdited',
    lastEditedBy: 'lastEditedBy',
    permissions: 'permissions',
    uid: 'uid'
  };

  export type SoftwareAccessScalarFieldEnum = (typeof SoftwareAccessScalarFieldEnum)[keyof typeof SoftwareAccessScalarFieldEnum]


  export const Audit_log_entriesScalarFieldEnum: {
    instance_id: 'instance_id',
    id: 'id',
    payload: 'payload',
    created_at: 'created_at',
    ip_address: 'ip_address'
  };

  export type Audit_log_entriesScalarFieldEnum = (typeof Audit_log_entriesScalarFieldEnum)[keyof typeof Audit_log_entriesScalarFieldEnum]


  export const Flow_stateScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    auth_code: 'auth_code',
    code_challenge_method: 'code_challenge_method',
    code_challenge: 'code_challenge',
    provider_type: 'provider_type',
    provider_access_token: 'provider_access_token',
    provider_refresh_token: 'provider_refresh_token',
    created_at: 'created_at',
    updated_at: 'updated_at',
    authentication_method: 'authentication_method',
    auth_code_issued_at: 'auth_code_issued_at'
  };

  export type Flow_stateScalarFieldEnum = (typeof Flow_stateScalarFieldEnum)[keyof typeof Flow_stateScalarFieldEnum]


  export const IdentitiesScalarFieldEnum: {
    provider_id: 'provider_id',
    user_id: 'user_id',
    identity_data: 'identity_data',
    provider: 'provider',
    last_sign_in_at: 'last_sign_in_at',
    created_at: 'created_at',
    updated_at: 'updated_at',
    email: 'email',
    id: 'id'
  };

  export type IdentitiesScalarFieldEnum = (typeof IdentitiesScalarFieldEnum)[keyof typeof IdentitiesScalarFieldEnum]


  export const InstancesScalarFieldEnum: {
    id: 'id',
    uuid: 'uuid',
    raw_base_config: 'raw_base_config',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type InstancesScalarFieldEnum = (typeof InstancesScalarFieldEnum)[keyof typeof InstancesScalarFieldEnum]


  export const Mfa_amr_claimsScalarFieldEnum: {
    session_id: 'session_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    authentication_method: 'authentication_method',
    id: 'id'
  };

  export type Mfa_amr_claimsScalarFieldEnum = (typeof Mfa_amr_claimsScalarFieldEnum)[keyof typeof Mfa_amr_claimsScalarFieldEnum]


  export const Mfa_challengesScalarFieldEnum: {
    id: 'id',
    factor_id: 'factor_id',
    created_at: 'created_at',
    verified_at: 'verified_at',
    ip_address: 'ip_address',
    otp_code: 'otp_code',
    web_authn_session_data: 'web_authn_session_data'
  };

  export type Mfa_challengesScalarFieldEnum = (typeof Mfa_challengesScalarFieldEnum)[keyof typeof Mfa_challengesScalarFieldEnum]


  export const Mfa_factorsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    friendly_name: 'friendly_name',
    factor_type: 'factor_type',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at',
    secret: 'secret',
    phone: 'phone',
    last_challenged_at: 'last_challenged_at',
    web_authn_credential: 'web_authn_credential',
    web_authn_aaguid: 'web_authn_aaguid'
  };

  export type Mfa_factorsScalarFieldEnum = (typeof Mfa_factorsScalarFieldEnum)[keyof typeof Mfa_factorsScalarFieldEnum]


  export const One_time_tokensScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    token_type: 'token_type',
    token_hash: 'token_hash',
    relates_to: 'relates_to',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type One_time_tokensScalarFieldEnum = (typeof One_time_tokensScalarFieldEnum)[keyof typeof One_time_tokensScalarFieldEnum]


  export const Refresh_tokensScalarFieldEnum: {
    instance_id: 'instance_id',
    id: 'id',
    token: 'token',
    user_id: 'user_id',
    revoked: 'revoked',
    created_at: 'created_at',
    updated_at: 'updated_at',
    parent: 'parent',
    session_id: 'session_id'
  };

  export type Refresh_tokensScalarFieldEnum = (typeof Refresh_tokensScalarFieldEnum)[keyof typeof Refresh_tokensScalarFieldEnum]


  export const Saml_providersScalarFieldEnum: {
    id: 'id',
    sso_provider_id: 'sso_provider_id',
    entity_id: 'entity_id',
    metadata_xml: 'metadata_xml',
    metadata_url: 'metadata_url',
    attribute_mapping: 'attribute_mapping',
    created_at: 'created_at',
    updated_at: 'updated_at',
    name_id_format: 'name_id_format'
  };

  export type Saml_providersScalarFieldEnum = (typeof Saml_providersScalarFieldEnum)[keyof typeof Saml_providersScalarFieldEnum]


  export const Saml_relay_statesScalarFieldEnum: {
    id: 'id',
    sso_provider_id: 'sso_provider_id',
    request_id: 'request_id',
    for_email: 'for_email',
    redirect_to: 'redirect_to',
    created_at: 'created_at',
    updated_at: 'updated_at',
    flow_state_id: 'flow_state_id'
  };

  export type Saml_relay_statesScalarFieldEnum = (typeof Saml_relay_statesScalarFieldEnum)[keyof typeof Saml_relay_statesScalarFieldEnum]


  export const Schema_migrationsScalarFieldEnum: {
    version: 'version'
  };

  export type Schema_migrationsScalarFieldEnum = (typeof Schema_migrationsScalarFieldEnum)[keyof typeof Schema_migrationsScalarFieldEnum]


  export const SessionsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    factor_id: 'factor_id',
    aal: 'aal',
    not_after: 'not_after',
    refreshed_at: 'refreshed_at',
    user_agent: 'user_agent',
    ip: 'ip',
    tag: 'tag'
  };

  export type SessionsScalarFieldEnum = (typeof SessionsScalarFieldEnum)[keyof typeof SessionsScalarFieldEnum]


  export const Sso_domainsScalarFieldEnum: {
    id: 'id',
    sso_provider_id: 'sso_provider_id',
    domain: 'domain',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Sso_domainsScalarFieldEnum = (typeof Sso_domainsScalarFieldEnum)[keyof typeof Sso_domainsScalarFieldEnum]


  export const Sso_providersScalarFieldEnum: {
    id: 'id',
    resource_id: 'resource_id',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Sso_providersScalarFieldEnum = (typeof Sso_providersScalarFieldEnum)[keyof typeof Sso_providersScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    instance_id: 'instance_id',
    id: 'id',
    aud: 'aud',
    role: 'role',
    email: 'email',
    encrypted_password: 'encrypted_password',
    email_confirmed_at: 'email_confirmed_at',
    invited_at: 'invited_at',
    confirmation_token: 'confirmation_token',
    confirmation_sent_at: 'confirmation_sent_at',
    recovery_token: 'recovery_token',
    recovery_sent_at: 'recovery_sent_at',
    email_change_token_new: 'email_change_token_new',
    email_change: 'email_change',
    email_change_sent_at: 'email_change_sent_at',
    last_sign_in_at: 'last_sign_in_at',
    raw_app_meta_data: 'raw_app_meta_data',
    raw_user_meta_data: 'raw_user_meta_data',
    is_super_admin: 'is_super_admin',
    created_at: 'created_at',
    updated_at: 'updated_at',
    phone: 'phone',
    phone_confirmed_at: 'phone_confirmed_at',
    phone_change: 'phone_change',
    phone_change_token: 'phone_change_token',
    phone_change_sent_at: 'phone_change_sent_at',
    confirmed_at: 'confirmed_at',
    email_change_token_current: 'email_change_token_current',
    email_change_confirm_status: 'email_change_confirm_status',
    banned_until: 'banned_until',
    reauthentication_token: 'reauthentication_token',
    reauthentication_sent_at: 'reauthentication_sent_at',
    is_sso_user: 'is_sso_user',
    deleted_at: 'deleted_at',
    is_anonymous: 'is_anonymous'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const BucketsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    owner: 'owner',
    created_at: 'created_at',
    updated_at: 'updated_at',
    public: 'public',
    avif_autodetection: 'avif_autodetection',
    file_size_limit: 'file_size_limit',
    allowed_mime_types: 'allowed_mime_types',
    owner_id: 'owner_id'
  };

  export type BucketsScalarFieldEnum = (typeof BucketsScalarFieldEnum)[keyof typeof BucketsScalarFieldEnum]


  export const MigrationsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    hash: 'hash',
    executed_at: 'executed_at'
  };

  export type MigrationsScalarFieldEnum = (typeof MigrationsScalarFieldEnum)[keyof typeof MigrationsScalarFieldEnum]


  export const ObjectsScalarFieldEnum: {
    id: 'id',
    bucket_id: 'bucket_id',
    name: 'name',
    owner: 'owner',
    created_at: 'created_at',
    updated_at: 'updated_at',
    last_accessed_at: 'last_accessed_at',
    metadata: 'metadata',
    path_tokens: 'path_tokens',
    version: 'version',
    owner_id: 'owner_id',
    user_metadata: 'user_metadata'
  };

  export type ObjectsScalarFieldEnum = (typeof ObjectsScalarFieldEnum)[keyof typeof ObjectsScalarFieldEnum]


  export const S3_multipart_uploadsScalarFieldEnum: {
    id: 'id',
    in_progress_size: 'in_progress_size',
    upload_signature: 'upload_signature',
    bucket_id: 'bucket_id',
    key: 'key',
    version: 'version',
    owner_id: 'owner_id',
    created_at: 'created_at',
    user_metadata: 'user_metadata'
  };

  export type S3_multipart_uploadsScalarFieldEnum = (typeof S3_multipart_uploadsScalarFieldEnum)[keyof typeof S3_multipart_uploadsScalarFieldEnum]


  export const S3_multipart_uploads_partsScalarFieldEnum: {
    id: 'id',
    upload_id: 'upload_id',
    size: 'size',
    part_number: 'part_number',
    bucket_id: 'bucket_id',
    key: 'key',
    etag: 'etag',
    owner_id: 'owner_id',
    version: 'version',
    created_at: 'created_at'
  };

  export type S3_multipart_uploads_partsScalarFieldEnum = (typeof S3_multipart_uploads_partsScalarFieldEnum)[keyof typeof S3_multipart_uploads_partsScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'PaymentFrequency'
   */
  export type EnumPaymentFrequencyFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentFrequency'>
    


  /**
   * Reference to a field of type 'PaymentFrequency[]'
   */
  export type ListEnumPaymentFrequencyFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentFrequency[]'>
    


  /**
   * Reference to a field of type 'PaymentMethod'
   */
  export type EnumPaymentMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentMethod'>
    


  /**
   * Reference to a field of type 'PaymentMethod[]'
   */
  export type ListEnumPaymentMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentMethod[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'code_challenge_method'
   */
  export type Enumcode_challenge_methodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'code_challenge_method'>
    


  /**
   * Reference to a field of type 'code_challenge_method[]'
   */
  export type ListEnumcode_challenge_methodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'code_challenge_method[]'>
    


  /**
   * Reference to a field of type 'factor_type'
   */
  export type Enumfactor_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'factor_type'>
    


  /**
   * Reference to a field of type 'factor_type[]'
   */
  export type ListEnumfactor_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'factor_type[]'>
    


  /**
   * Reference to a field of type 'factor_status'
   */
  export type Enumfactor_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'factor_status'>
    


  /**
   * Reference to a field of type 'factor_status[]'
   */
  export type ListEnumfactor_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'factor_status[]'>
    


  /**
   * Reference to a field of type 'one_time_token_type'
   */
  export type Enumone_time_token_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'one_time_token_type'>
    


  /**
   * Reference to a field of type 'one_time_token_type[]'
   */
  export type ListEnumone_time_token_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'one_time_token_type[]'>
    


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'BigInt[]'
   */
  export type ListBigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt[]'>
    


  /**
   * Reference to a field of type 'aal_level'
   */
  export type Enumaal_levelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'aal_level'>
    


  /**
   * Reference to a field of type 'aal_level[]'
   */
  export type ListEnumaal_levelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'aal_level[]'>
    
  /**
   * Deep Input Types
   */


  export type UserProfilesWhereInput = {
    AND?: UserProfilesWhereInput | UserProfilesWhereInput[]
    OR?: UserProfilesWhereInput[]
    NOT?: UserProfilesWhereInput | UserProfilesWhereInput[]
    id?: UuidFilter<"UserProfiles"> | string
    username?: StringNullableFilter<"UserProfiles"> | string | null
    fullName?: StringNullableFilter<"UserProfiles"> | string | null
    email?: StringNullableFilter<"UserProfiles"> | string | null
    phone?: StringNullableFilter<"UserProfiles"> | string | null
    avatarUrl?: StringNullableFilter<"UserProfiles"> | string | null
    website?: StringNullableFilter<"UserProfiles"> | string | null
    createdAt?: DateTimeFilter<"UserProfiles"> | Date | string
    updatedAt?: DateTimeFilter<"UserProfiles"> | Date | string
    UserSoftware?: UserSoftwareListRelationFilter
    Software?: SoftwareListRelationFilter
  }

  export type UserProfilesOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrderInput | SortOrder
    fullName?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    avatarUrl?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    UserSoftware?: UserSoftwareOrderByRelationAggregateInput
    Software?: SoftwareOrderByRelationAggregateInput
  }

  export type UserProfilesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    username?: string
    AND?: UserProfilesWhereInput | UserProfilesWhereInput[]
    OR?: UserProfilesWhereInput[]
    NOT?: UserProfilesWhereInput | UserProfilesWhereInput[]
    fullName?: StringNullableFilter<"UserProfiles"> | string | null
    email?: StringNullableFilter<"UserProfiles"> | string | null
    phone?: StringNullableFilter<"UserProfiles"> | string | null
    avatarUrl?: StringNullableFilter<"UserProfiles"> | string | null
    website?: StringNullableFilter<"UserProfiles"> | string | null
    createdAt?: DateTimeFilter<"UserProfiles"> | Date | string
    updatedAt?: DateTimeFilter<"UserProfiles"> | Date | string
    UserSoftware?: UserSoftwareListRelationFilter
    Software?: SoftwareListRelationFilter
  }, "id" | "username">

  export type UserProfilesOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrderInput | SortOrder
    fullName?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    avatarUrl?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserProfilesCountOrderByAggregateInput
    _max?: UserProfilesMaxOrderByAggregateInput
    _min?: UserProfilesMinOrderByAggregateInput
  }

  export type UserProfilesScalarWhereWithAggregatesInput = {
    AND?: UserProfilesScalarWhereWithAggregatesInput | UserProfilesScalarWhereWithAggregatesInput[]
    OR?: UserProfilesScalarWhereWithAggregatesInput[]
    NOT?: UserProfilesScalarWhereWithAggregatesInput | UserProfilesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"UserProfiles"> | string
    username?: StringNullableWithAggregatesFilter<"UserProfiles"> | string | null
    fullName?: StringNullableWithAggregatesFilter<"UserProfiles"> | string | null
    email?: StringNullableWithAggregatesFilter<"UserProfiles"> | string | null
    phone?: StringNullableWithAggregatesFilter<"UserProfiles"> | string | null
    avatarUrl?: StringNullableWithAggregatesFilter<"UserProfiles"> | string | null
    website?: StringNullableWithAggregatesFilter<"UserProfiles"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"UserProfiles"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"UserProfiles"> | Date | string
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    department?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    name?: StringFilter<"User"> | string
    jobTitle?: StringNullableFilter<"User"> | string | null
    location?: StringNullableFilter<"User"> | string | null
    personalEmail?: StringNullableFilter<"User"> | string | null
    reportsToId?: StringNullableFilter<"User"> | string | null
    type?: StringNullableFilter<"User"> | string | null
    status?: StringFilter<"User"> | string
    SharedAccount?: SharedAccountListRelationFilter
    softwareNotes?: SoftwareListRelationFilter
    Software?: SoftwareListRelationFilter
    reportsTo?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    subordinates?: UserListRelationFilter
    histories?: UserHistoryListRelationFilter
    software?: UserSoftwareListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    department?: SortOrder
    email?: SortOrder
    name?: SortOrder
    jobTitle?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    personalEmail?: SortOrderInput | SortOrder
    reportsToId?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    status?: SortOrder
    SharedAccount?: SharedAccountOrderByRelationAggregateInput
    softwareNotes?: SoftwareOrderByRelationAggregateInput
    Software?: SoftwareOrderByRelationAggregateInput
    reportsTo?: UserOrderByWithRelationInput
    subordinates?: UserOrderByRelationAggregateInput
    histories?: UserHistoryOrderByRelationAggregateInput
    software?: UserSoftwareOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    name?: string
    personalEmail?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    department?: StringFilter<"User"> | string
    jobTitle?: StringNullableFilter<"User"> | string | null
    location?: StringNullableFilter<"User"> | string | null
    reportsToId?: StringNullableFilter<"User"> | string | null
    type?: StringNullableFilter<"User"> | string | null
    status?: StringFilter<"User"> | string
    SharedAccount?: SharedAccountListRelationFilter
    softwareNotes?: SoftwareListRelationFilter
    Software?: SoftwareListRelationFilter
    reportsTo?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    subordinates?: UserListRelationFilter
    histories?: UserHistoryListRelationFilter
    software?: UserSoftwareListRelationFilter
  }, "id" | "email" | "name" | "personalEmail">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    department?: SortOrder
    email?: SortOrder
    name?: SortOrder
    jobTitle?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    personalEmail?: SortOrderInput | SortOrder
    reportsToId?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    status?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    department?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    name?: StringWithAggregatesFilter<"User"> | string
    jobTitle?: StringNullableWithAggregatesFilter<"User"> | string | null
    location?: StringNullableWithAggregatesFilter<"User"> | string | null
    personalEmail?: StringNullableWithAggregatesFilter<"User"> | string | null
    reportsToId?: StringNullableWithAggregatesFilter<"User"> | string | null
    type?: StringNullableWithAggregatesFilter<"User"> | string | null
    status?: StringWithAggregatesFilter<"User"> | string
  }

  export type UserHistoryWhereInput = {
    AND?: UserHistoryWhereInput | UserHistoryWhereInput[]
    OR?: UserHistoryWhereInput[]
    NOT?: UserHistoryWhereInput | UserHistoryWhereInput[]
    id?: StringFilter<"UserHistory"> | string
    userId?: StringFilter<"UserHistory"> | string
    action?: StringFilter<"UserHistory"> | string
    field?: StringFilter<"UserHistory"> | string
    newValue?: StringNullableFilter<"UserHistory"> | string | null
    oldValue?: StringNullableFilter<"UserHistory"> | string | null
    updatedBy?: StringFilter<"UserHistory"> | string
    updatedOn?: DateTimeFilter<"UserHistory"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type UserHistoryOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    field?: SortOrder
    newValue?: SortOrderInput | SortOrder
    oldValue?: SortOrderInput | SortOrder
    updatedBy?: SortOrder
    updatedOn?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type UserHistoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: UserHistoryWhereInput | UserHistoryWhereInput[]
    OR?: UserHistoryWhereInput[]
    NOT?: UserHistoryWhereInput | UserHistoryWhereInput[]
    userId?: StringFilter<"UserHistory"> | string
    action?: StringFilter<"UserHistory"> | string
    field?: StringFilter<"UserHistory"> | string
    newValue?: StringNullableFilter<"UserHistory"> | string | null
    oldValue?: StringNullableFilter<"UserHistory"> | string | null
    updatedBy?: StringFilter<"UserHistory"> | string
    updatedOn?: DateTimeFilter<"UserHistory"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type UserHistoryOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    field?: SortOrder
    newValue?: SortOrderInput | SortOrder
    oldValue?: SortOrderInput | SortOrder
    updatedBy?: SortOrder
    updatedOn?: SortOrder
    _count?: UserHistoryCountOrderByAggregateInput
    _max?: UserHistoryMaxOrderByAggregateInput
    _min?: UserHistoryMinOrderByAggregateInput
  }

  export type UserHistoryScalarWhereWithAggregatesInput = {
    AND?: UserHistoryScalarWhereWithAggregatesInput | UserHistoryScalarWhereWithAggregatesInput[]
    OR?: UserHistoryScalarWhereWithAggregatesInput[]
    NOT?: UserHistoryScalarWhereWithAggregatesInput | UserHistoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UserHistory"> | string
    userId?: StringWithAggregatesFilter<"UserHistory"> | string
    action?: StringWithAggregatesFilter<"UserHistory"> | string
    field?: StringWithAggregatesFilter<"UserHistory"> | string
    newValue?: StringNullableWithAggregatesFilter<"UserHistory"> | string | null
    oldValue?: StringNullableWithAggregatesFilter<"UserHistory"> | string | null
    updatedBy?: StringWithAggregatesFilter<"UserHistory"> | string
    updatedOn?: DateTimeWithAggregatesFilter<"UserHistory"> | Date | string
  }

  export type AccountRepWhereInput = {
    AND?: AccountRepWhereInput | AccountRepWhereInput[]
    OR?: AccountRepWhereInput[]
    NOT?: AccountRepWhereInput | AccountRepWhereInput[]
    id?: StringFilter<"AccountRep"> | string
    softwareId?: StringFilter<"AccountRep"> | string
    email?: StringFilter<"AccountRep"> | string
    name?: StringFilter<"AccountRep"> | string
    phone?: StringFilter<"AccountRep"> | string
    software?: XOR<SoftwareScalarRelationFilter, SoftwareWhereInput>
  }

  export type AccountRepOrderByWithRelationInput = {
    id?: SortOrder
    softwareId?: SortOrder
    email?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    software?: SoftwareOrderByWithRelationInput
  }

  export type AccountRepWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AccountRepWhereInput | AccountRepWhereInput[]
    OR?: AccountRepWhereInput[]
    NOT?: AccountRepWhereInput | AccountRepWhereInput[]
    softwareId?: StringFilter<"AccountRep"> | string
    email?: StringFilter<"AccountRep"> | string
    name?: StringFilter<"AccountRep"> | string
    phone?: StringFilter<"AccountRep"> | string
    software?: XOR<SoftwareScalarRelationFilter, SoftwareWhereInput>
  }, "id">

  export type AccountRepOrderByWithAggregationInput = {
    id?: SortOrder
    softwareId?: SortOrder
    email?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    _count?: AccountRepCountOrderByAggregateInput
    _max?: AccountRepMaxOrderByAggregateInput
    _min?: AccountRepMinOrderByAggregateInput
  }

  export type AccountRepScalarWhereWithAggregatesInput = {
    AND?: AccountRepScalarWhereWithAggregatesInput | AccountRepScalarWhereWithAggregatesInput[]
    OR?: AccountRepScalarWhereWithAggregatesInput[]
    NOT?: AccountRepScalarWhereWithAggregatesInput | AccountRepScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AccountRep"> | string
    softwareId?: StringWithAggregatesFilter<"AccountRep"> | string
    email?: StringWithAggregatesFilter<"AccountRep"> | string
    name?: StringWithAggregatesFilter<"AccountRep"> | string
    phone?: StringWithAggregatesFilter<"AccountRep"> | string
  }

  export type SoftwareWhereInput = {
    AND?: SoftwareWhereInput | SoftwareWhereInput[]
    OR?: SoftwareWhereInput[]
    NOT?: SoftwareWhereInput | SoftwareWhereInput[]
    id?: StringFilter<"Software"> | string
    name?: StringFilter<"Software"> | string
    description?: StringNullableFilter<"Software"> | string | null
    category?: StringNullableFilter<"Software"> | string | null
    status?: StringNullableFilter<"Software"> | string | null
    createdAt?: DateTimeFilter<"Software"> | Date | string
    updatedAt?: DateTimeFilter<"Software"> | Date | string
    userCount?: IntNullableFilter<"Software"> | number | null
    notes?: StringNullableFilter<"Software"> | string | null
    notesLastUpdatedById?: StringFilter<"Software"> | string
    accountRep?: StringNullableFilter<"Software"> | string | null
    amount?: FloatNullableFilter<"Software"> | number | null
    currency?: StringNullableFilter<"Software"> | string | null
    licenseType?: StringNullableFilter<"Software"> | string | null
    paymentDueDate?: DateTimeNullableFilter<"Software"> | Date | string | null
    paymentFrequency?: EnumPaymentFrequencyFilter<"Software"> | $Enums.PaymentFrequency
    paymentMethod?: EnumPaymentMethodFilter<"Software"> | $Enums.PaymentMethod
    pricePerUser?: FloatNullableFilter<"Software"> | number | null
    updatedById?: StringNullableFilter<"Software"> | string | null
    website?: StringNullableFilter<"Software"> | string | null
    accountReps?: AccountRepListRelationFilter
    notesLastUpdatedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    SoftwareAccess?: SoftwareAccessListRelationFilter
    histories?: SoftwareHistoryListRelationFilter
    UserSoftware?: UserSoftwareListRelationFilter
    Assigned?: UserProfilesListRelationFilter
  }

  export type SoftwareOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userCount?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    notesLastUpdatedById?: SortOrder
    accountRep?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    currency?: SortOrderInput | SortOrder
    licenseType?: SortOrderInput | SortOrder
    paymentDueDate?: SortOrderInput | SortOrder
    paymentFrequency?: SortOrder
    paymentMethod?: SortOrder
    pricePerUser?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    accountReps?: AccountRepOrderByRelationAggregateInput
    notesLastUpdatedBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    SoftwareAccess?: SoftwareAccessOrderByRelationAggregateInput
    histories?: SoftwareHistoryOrderByRelationAggregateInput
    UserSoftware?: UserSoftwareOrderByRelationAggregateInput
    Assigned?: UserProfilesOrderByRelationAggregateInput
  }

  export type SoftwareWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SoftwareWhereInput | SoftwareWhereInput[]
    OR?: SoftwareWhereInput[]
    NOT?: SoftwareWhereInput | SoftwareWhereInput[]
    name?: StringFilter<"Software"> | string
    description?: StringNullableFilter<"Software"> | string | null
    category?: StringNullableFilter<"Software"> | string | null
    status?: StringNullableFilter<"Software"> | string | null
    createdAt?: DateTimeFilter<"Software"> | Date | string
    updatedAt?: DateTimeFilter<"Software"> | Date | string
    userCount?: IntNullableFilter<"Software"> | number | null
    notes?: StringNullableFilter<"Software"> | string | null
    notesLastUpdatedById?: StringFilter<"Software"> | string
    accountRep?: StringNullableFilter<"Software"> | string | null
    amount?: FloatNullableFilter<"Software"> | number | null
    currency?: StringNullableFilter<"Software"> | string | null
    licenseType?: StringNullableFilter<"Software"> | string | null
    paymentDueDate?: DateTimeNullableFilter<"Software"> | Date | string | null
    paymentFrequency?: EnumPaymentFrequencyFilter<"Software"> | $Enums.PaymentFrequency
    paymentMethod?: EnumPaymentMethodFilter<"Software"> | $Enums.PaymentMethod
    pricePerUser?: FloatNullableFilter<"Software"> | number | null
    updatedById?: StringNullableFilter<"Software"> | string | null
    website?: StringNullableFilter<"Software"> | string | null
    accountReps?: AccountRepListRelationFilter
    notesLastUpdatedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    SoftwareAccess?: SoftwareAccessListRelationFilter
    histories?: SoftwareHistoryListRelationFilter
    UserSoftware?: UserSoftwareListRelationFilter
    Assigned?: UserProfilesListRelationFilter
  }, "id">

  export type SoftwareOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userCount?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    notesLastUpdatedById?: SortOrder
    accountRep?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    currency?: SortOrderInput | SortOrder
    licenseType?: SortOrderInput | SortOrder
    paymentDueDate?: SortOrderInput | SortOrder
    paymentFrequency?: SortOrder
    paymentMethod?: SortOrder
    pricePerUser?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    _count?: SoftwareCountOrderByAggregateInput
    _avg?: SoftwareAvgOrderByAggregateInput
    _max?: SoftwareMaxOrderByAggregateInput
    _min?: SoftwareMinOrderByAggregateInput
    _sum?: SoftwareSumOrderByAggregateInput
  }

  export type SoftwareScalarWhereWithAggregatesInput = {
    AND?: SoftwareScalarWhereWithAggregatesInput | SoftwareScalarWhereWithAggregatesInput[]
    OR?: SoftwareScalarWhereWithAggregatesInput[]
    NOT?: SoftwareScalarWhereWithAggregatesInput | SoftwareScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Software"> | string
    name?: StringWithAggregatesFilter<"Software"> | string
    description?: StringNullableWithAggregatesFilter<"Software"> | string | null
    category?: StringNullableWithAggregatesFilter<"Software"> | string | null
    status?: StringNullableWithAggregatesFilter<"Software"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Software"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Software"> | Date | string
    userCount?: IntNullableWithAggregatesFilter<"Software"> | number | null
    notes?: StringNullableWithAggregatesFilter<"Software"> | string | null
    notesLastUpdatedById?: StringWithAggregatesFilter<"Software"> | string
    accountRep?: StringNullableWithAggregatesFilter<"Software"> | string | null
    amount?: FloatNullableWithAggregatesFilter<"Software"> | number | null
    currency?: StringNullableWithAggregatesFilter<"Software"> | string | null
    licenseType?: StringNullableWithAggregatesFilter<"Software"> | string | null
    paymentDueDate?: DateTimeNullableWithAggregatesFilter<"Software"> | Date | string | null
    paymentFrequency?: EnumPaymentFrequencyWithAggregatesFilter<"Software"> | $Enums.PaymentFrequency
    paymentMethod?: EnumPaymentMethodWithAggregatesFilter<"Software"> | $Enums.PaymentMethod
    pricePerUser?: FloatNullableWithAggregatesFilter<"Software"> | number | null
    updatedById?: StringNullableWithAggregatesFilter<"Software"> | string | null
    website?: StringNullableWithAggregatesFilter<"Software"> | string | null
  }

  export type SoftwareHistoryWhereInput = {
    AND?: SoftwareHistoryWhereInput | SoftwareHistoryWhereInput[]
    OR?: SoftwareHistoryWhereInput[]
    NOT?: SoftwareHistoryWhereInput | SoftwareHistoryWhereInput[]
    id?: StringFilter<"SoftwareHistory"> | string
    softwareId?: StringFilter<"SoftwareHistory"> | string
    action?: StringFilter<"SoftwareHistory"> | string
    field?: StringFilter<"SoftwareHistory"> | string
    newValue?: StringNullableFilter<"SoftwareHistory"> | string | null
    oldValue?: StringNullableFilter<"SoftwareHistory"> | string | null
    updatedBy?: StringFilter<"SoftwareHistory"> | string
    updatedOn?: DateTimeFilter<"SoftwareHistory"> | Date | string
    software?: XOR<SoftwareScalarRelationFilter, SoftwareWhereInput>
  }

  export type SoftwareHistoryOrderByWithRelationInput = {
    id?: SortOrder
    softwareId?: SortOrder
    action?: SortOrder
    field?: SortOrder
    newValue?: SortOrderInput | SortOrder
    oldValue?: SortOrderInput | SortOrder
    updatedBy?: SortOrder
    updatedOn?: SortOrder
    software?: SoftwareOrderByWithRelationInput
  }

  export type SoftwareHistoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SoftwareHistoryWhereInput | SoftwareHistoryWhereInput[]
    OR?: SoftwareHistoryWhereInput[]
    NOT?: SoftwareHistoryWhereInput | SoftwareHistoryWhereInput[]
    softwareId?: StringFilter<"SoftwareHistory"> | string
    action?: StringFilter<"SoftwareHistory"> | string
    field?: StringFilter<"SoftwareHistory"> | string
    newValue?: StringNullableFilter<"SoftwareHistory"> | string | null
    oldValue?: StringNullableFilter<"SoftwareHistory"> | string | null
    updatedBy?: StringFilter<"SoftwareHistory"> | string
    updatedOn?: DateTimeFilter<"SoftwareHistory"> | Date | string
    software?: XOR<SoftwareScalarRelationFilter, SoftwareWhereInput>
  }, "id">

  export type SoftwareHistoryOrderByWithAggregationInput = {
    id?: SortOrder
    softwareId?: SortOrder
    action?: SortOrder
    field?: SortOrder
    newValue?: SortOrderInput | SortOrder
    oldValue?: SortOrderInput | SortOrder
    updatedBy?: SortOrder
    updatedOn?: SortOrder
    _count?: SoftwareHistoryCountOrderByAggregateInput
    _max?: SoftwareHistoryMaxOrderByAggregateInput
    _min?: SoftwareHistoryMinOrderByAggregateInput
  }

  export type SoftwareHistoryScalarWhereWithAggregatesInput = {
    AND?: SoftwareHistoryScalarWhereWithAggregatesInput | SoftwareHistoryScalarWhereWithAggregatesInput[]
    OR?: SoftwareHistoryScalarWhereWithAggregatesInput[]
    NOT?: SoftwareHistoryScalarWhereWithAggregatesInput | SoftwareHistoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SoftwareHistory"> | string
    softwareId?: StringWithAggregatesFilter<"SoftwareHistory"> | string
    action?: StringWithAggregatesFilter<"SoftwareHistory"> | string
    field?: StringWithAggregatesFilter<"SoftwareHistory"> | string
    newValue?: StringNullableWithAggregatesFilter<"SoftwareHistory"> | string | null
    oldValue?: StringNullableWithAggregatesFilter<"SoftwareHistory"> | string | null
    updatedBy?: StringWithAggregatesFilter<"SoftwareHistory"> | string
    updatedOn?: DateTimeWithAggregatesFilter<"SoftwareHistory"> | Date | string
  }

  export type UserSoftwareWhereInput = {
    AND?: UserSoftwareWhereInput | UserSoftwareWhereInput[]
    OR?: UserSoftwareWhereInput[]
    NOT?: UserSoftwareWhereInput | UserSoftwareWhereInput[]
    id?: StringFilter<"UserSoftware"> | string
    userId?: StringFilter<"UserSoftware"> | string
    softwareId?: StringFilter<"UserSoftware"> | string
    grantedById?: UuidFilter<"UserSoftware"> | string
    accessLevel?: StringFilter<"UserSoftware"> | string
    role?: StringFilter<"UserSoftware"> | string
    assignedAt?: DateTimeFilter<"UserSoftware"> | Date | string
    grantedBy?: XOR<UserProfilesScalarRelationFilter, UserProfilesWhereInput>
    software?: XOR<SoftwareScalarRelationFilter, SoftwareWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type UserSoftwareOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    softwareId?: SortOrder
    grantedById?: SortOrder
    accessLevel?: SortOrder
    role?: SortOrder
    assignedAt?: SortOrder
    grantedBy?: UserProfilesOrderByWithRelationInput
    software?: SoftwareOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type UserSoftwareWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_softwareId?: UserSoftwareUserIdSoftwareIdCompoundUniqueInput
    AND?: UserSoftwareWhereInput | UserSoftwareWhereInput[]
    OR?: UserSoftwareWhereInput[]
    NOT?: UserSoftwareWhereInput | UserSoftwareWhereInput[]
    userId?: StringFilter<"UserSoftware"> | string
    softwareId?: StringFilter<"UserSoftware"> | string
    grantedById?: UuidFilter<"UserSoftware"> | string
    accessLevel?: StringFilter<"UserSoftware"> | string
    role?: StringFilter<"UserSoftware"> | string
    assignedAt?: DateTimeFilter<"UserSoftware"> | Date | string
    grantedBy?: XOR<UserProfilesScalarRelationFilter, UserProfilesWhereInput>
    software?: XOR<SoftwareScalarRelationFilter, SoftwareWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "userId_softwareId">

  export type UserSoftwareOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    softwareId?: SortOrder
    grantedById?: SortOrder
    accessLevel?: SortOrder
    role?: SortOrder
    assignedAt?: SortOrder
    _count?: UserSoftwareCountOrderByAggregateInput
    _max?: UserSoftwareMaxOrderByAggregateInput
    _min?: UserSoftwareMinOrderByAggregateInput
  }

  export type UserSoftwareScalarWhereWithAggregatesInput = {
    AND?: UserSoftwareScalarWhereWithAggregatesInput | UserSoftwareScalarWhereWithAggregatesInput[]
    OR?: UserSoftwareScalarWhereWithAggregatesInput[]
    NOT?: UserSoftwareScalarWhereWithAggregatesInput | UserSoftwareScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UserSoftware"> | string
    userId?: StringWithAggregatesFilter<"UserSoftware"> | string
    softwareId?: StringWithAggregatesFilter<"UserSoftware"> | string
    grantedById?: UuidWithAggregatesFilter<"UserSoftware"> | string
    accessLevel?: StringWithAggregatesFilter<"UserSoftware"> | string
    role?: StringWithAggregatesFilter<"UserSoftware"> | string
    assignedAt?: DateTimeWithAggregatesFilter<"UserSoftware"> | Date | string
  }

  export type SharedAccountWhereInput = {
    AND?: SharedAccountWhereInput | SharedAccountWhereInput[]
    OR?: SharedAccountWhereInput[]
    NOT?: SharedAccountWhereInput | SharedAccountWhereInput[]
    id?: StringFilter<"SharedAccount"> | string
    email?: StringFilter<"SharedAccount"> | string
    name?: StringFilter<"SharedAccount"> | string
    normalizedName?: StringFilter<"SharedAccount"> | string
    location?: StringNullableFilter<"SharedAccount"> | string | null
    type?: StringNullableFilter<"SharedAccount"> | string | null
    active?: BoolFilter<"SharedAccount"> | boolean
    createdAt?: DateTimeFilter<"SharedAccount"> | Date | string
    updatedAt?: DateTimeFilter<"SharedAccount"> | Date | string
    updatedById?: StringFilter<"SharedAccount"> | string
    userCount?: IntFilter<"SharedAccount"> | number
    updatedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
    histories?: SharedAccountHistoryListRelationFilter
    softwareAccesses?: SoftwareAccessListRelationFilter
  }

  export type SharedAccountOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    normalizedName?: SortOrder
    location?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    updatedById?: SortOrder
    userCount?: SortOrder
    updatedBy?: UserOrderByWithRelationInput
    histories?: SharedAccountHistoryOrderByRelationAggregateInput
    softwareAccesses?: SoftwareAccessOrderByRelationAggregateInput
  }

  export type SharedAccountWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: SharedAccountWhereInput | SharedAccountWhereInput[]
    OR?: SharedAccountWhereInput[]
    NOT?: SharedAccountWhereInput | SharedAccountWhereInput[]
    name?: StringFilter<"SharedAccount"> | string
    normalizedName?: StringFilter<"SharedAccount"> | string
    location?: StringNullableFilter<"SharedAccount"> | string | null
    type?: StringNullableFilter<"SharedAccount"> | string | null
    active?: BoolFilter<"SharedAccount"> | boolean
    createdAt?: DateTimeFilter<"SharedAccount"> | Date | string
    updatedAt?: DateTimeFilter<"SharedAccount"> | Date | string
    updatedById?: StringFilter<"SharedAccount"> | string
    userCount?: IntFilter<"SharedAccount"> | number
    updatedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
    histories?: SharedAccountHistoryListRelationFilter
    softwareAccesses?: SoftwareAccessListRelationFilter
  }, "id" | "email">

  export type SharedAccountOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    normalizedName?: SortOrder
    location?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    updatedById?: SortOrder
    userCount?: SortOrder
    _count?: SharedAccountCountOrderByAggregateInput
    _avg?: SharedAccountAvgOrderByAggregateInput
    _max?: SharedAccountMaxOrderByAggregateInput
    _min?: SharedAccountMinOrderByAggregateInput
    _sum?: SharedAccountSumOrderByAggregateInput
  }

  export type SharedAccountScalarWhereWithAggregatesInput = {
    AND?: SharedAccountScalarWhereWithAggregatesInput | SharedAccountScalarWhereWithAggregatesInput[]
    OR?: SharedAccountScalarWhereWithAggregatesInput[]
    NOT?: SharedAccountScalarWhereWithAggregatesInput | SharedAccountScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SharedAccount"> | string
    email?: StringWithAggregatesFilter<"SharedAccount"> | string
    name?: StringWithAggregatesFilter<"SharedAccount"> | string
    normalizedName?: StringWithAggregatesFilter<"SharedAccount"> | string
    location?: StringNullableWithAggregatesFilter<"SharedAccount"> | string | null
    type?: StringNullableWithAggregatesFilter<"SharedAccount"> | string | null
    active?: BoolWithAggregatesFilter<"SharedAccount"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"SharedAccount"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"SharedAccount"> | Date | string
    updatedById?: StringWithAggregatesFilter<"SharedAccount"> | string
    userCount?: IntWithAggregatesFilter<"SharedAccount"> | number
  }

  export type SharedAccountHistoryWhereInput = {
    AND?: SharedAccountHistoryWhereInput | SharedAccountHistoryWhereInput[]
    OR?: SharedAccountHistoryWhereInput[]
    NOT?: SharedAccountHistoryWhereInput | SharedAccountHistoryWhereInput[]
    id?: StringFilter<"SharedAccountHistory"> | string
    sharedAccountId?: StringFilter<"SharedAccountHistory"> | string
    action?: StringFilter<"SharedAccountHistory"> | string
    field?: StringFilter<"SharedAccountHistory"> | string
    newValue?: StringNullableFilter<"SharedAccountHistory"> | string | null
    oldValue?: StringNullableFilter<"SharedAccountHistory"> | string | null
    updatedBy?: StringFilter<"SharedAccountHistory"> | string
    updatedOn?: DateTimeFilter<"SharedAccountHistory"> | Date | string
    sharedAccount?: XOR<SharedAccountScalarRelationFilter, SharedAccountWhereInput>
  }

  export type SharedAccountHistoryOrderByWithRelationInput = {
    id?: SortOrder
    sharedAccountId?: SortOrder
    action?: SortOrder
    field?: SortOrder
    newValue?: SortOrderInput | SortOrder
    oldValue?: SortOrderInput | SortOrder
    updatedBy?: SortOrder
    updatedOn?: SortOrder
    sharedAccount?: SharedAccountOrderByWithRelationInput
  }

  export type SharedAccountHistoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SharedAccountHistoryWhereInput | SharedAccountHistoryWhereInput[]
    OR?: SharedAccountHistoryWhereInput[]
    NOT?: SharedAccountHistoryWhereInput | SharedAccountHistoryWhereInput[]
    sharedAccountId?: StringFilter<"SharedAccountHistory"> | string
    action?: StringFilter<"SharedAccountHistory"> | string
    field?: StringFilter<"SharedAccountHistory"> | string
    newValue?: StringNullableFilter<"SharedAccountHistory"> | string | null
    oldValue?: StringNullableFilter<"SharedAccountHistory"> | string | null
    updatedBy?: StringFilter<"SharedAccountHistory"> | string
    updatedOn?: DateTimeFilter<"SharedAccountHistory"> | Date | string
    sharedAccount?: XOR<SharedAccountScalarRelationFilter, SharedAccountWhereInput>
  }, "id">

  export type SharedAccountHistoryOrderByWithAggregationInput = {
    id?: SortOrder
    sharedAccountId?: SortOrder
    action?: SortOrder
    field?: SortOrder
    newValue?: SortOrderInput | SortOrder
    oldValue?: SortOrderInput | SortOrder
    updatedBy?: SortOrder
    updatedOn?: SortOrder
    _count?: SharedAccountHistoryCountOrderByAggregateInput
    _max?: SharedAccountHistoryMaxOrderByAggregateInput
    _min?: SharedAccountHistoryMinOrderByAggregateInput
  }

  export type SharedAccountHistoryScalarWhereWithAggregatesInput = {
    AND?: SharedAccountHistoryScalarWhereWithAggregatesInput | SharedAccountHistoryScalarWhereWithAggregatesInput[]
    OR?: SharedAccountHistoryScalarWhereWithAggregatesInput[]
    NOT?: SharedAccountHistoryScalarWhereWithAggregatesInput | SharedAccountHistoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SharedAccountHistory"> | string
    sharedAccountId?: StringWithAggregatesFilter<"SharedAccountHistory"> | string
    action?: StringWithAggregatesFilter<"SharedAccountHistory"> | string
    field?: StringWithAggregatesFilter<"SharedAccountHistory"> | string
    newValue?: StringNullableWithAggregatesFilter<"SharedAccountHistory"> | string | null
    oldValue?: StringNullableWithAggregatesFilter<"SharedAccountHistory"> | string | null
    updatedBy?: StringWithAggregatesFilter<"SharedAccountHistory"> | string
    updatedOn?: DateTimeWithAggregatesFilter<"SharedAccountHistory"> | Date | string
  }

  export type SoftwareAccessWhereInput = {
    AND?: SoftwareAccessWhereInput | SoftwareAccessWhereInput[]
    OR?: SoftwareAccessWhereInput[]
    NOT?: SoftwareAccessWhereInput | SoftwareAccessWhereInput[]
    id?: StringFilter<"SoftwareAccess"> | string
    sharedAccountId?: StringFilter<"SoftwareAccess"> | string
    softwareId?: StringFilter<"SoftwareAccess"> | string
    access?: BoolFilter<"SoftwareAccess"> | boolean
    lastEdited?: DateTimeFilter<"SoftwareAccess"> | Date | string
    lastEditedBy?: StringFilter<"SoftwareAccess"> | string
    permissions?: StringNullableListFilter<"SoftwareAccess">
    uid?: StringFilter<"SoftwareAccess"> | string
    sharedAccount?: XOR<SharedAccountScalarRelationFilter, SharedAccountWhereInput>
    software?: XOR<SoftwareScalarRelationFilter, SoftwareWhereInput>
  }

  export type SoftwareAccessOrderByWithRelationInput = {
    id?: SortOrder
    sharedAccountId?: SortOrder
    softwareId?: SortOrder
    access?: SortOrder
    lastEdited?: SortOrder
    lastEditedBy?: SortOrder
    permissions?: SortOrder
    uid?: SortOrder
    sharedAccount?: SharedAccountOrderByWithRelationInput
    software?: SoftwareOrderByWithRelationInput
  }

  export type SoftwareAccessWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SoftwareAccessWhereInput | SoftwareAccessWhereInput[]
    OR?: SoftwareAccessWhereInput[]
    NOT?: SoftwareAccessWhereInput | SoftwareAccessWhereInput[]
    sharedAccountId?: StringFilter<"SoftwareAccess"> | string
    softwareId?: StringFilter<"SoftwareAccess"> | string
    access?: BoolFilter<"SoftwareAccess"> | boolean
    lastEdited?: DateTimeFilter<"SoftwareAccess"> | Date | string
    lastEditedBy?: StringFilter<"SoftwareAccess"> | string
    permissions?: StringNullableListFilter<"SoftwareAccess">
    uid?: StringFilter<"SoftwareAccess"> | string
    sharedAccount?: XOR<SharedAccountScalarRelationFilter, SharedAccountWhereInput>
    software?: XOR<SoftwareScalarRelationFilter, SoftwareWhereInput>
  }, "id">

  export type SoftwareAccessOrderByWithAggregationInput = {
    id?: SortOrder
    sharedAccountId?: SortOrder
    softwareId?: SortOrder
    access?: SortOrder
    lastEdited?: SortOrder
    lastEditedBy?: SortOrder
    permissions?: SortOrder
    uid?: SortOrder
    _count?: SoftwareAccessCountOrderByAggregateInput
    _max?: SoftwareAccessMaxOrderByAggregateInput
    _min?: SoftwareAccessMinOrderByAggregateInput
  }

  export type SoftwareAccessScalarWhereWithAggregatesInput = {
    AND?: SoftwareAccessScalarWhereWithAggregatesInput | SoftwareAccessScalarWhereWithAggregatesInput[]
    OR?: SoftwareAccessScalarWhereWithAggregatesInput[]
    NOT?: SoftwareAccessScalarWhereWithAggregatesInput | SoftwareAccessScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SoftwareAccess"> | string
    sharedAccountId?: StringWithAggregatesFilter<"SoftwareAccess"> | string
    softwareId?: StringWithAggregatesFilter<"SoftwareAccess"> | string
    access?: BoolWithAggregatesFilter<"SoftwareAccess"> | boolean
    lastEdited?: DateTimeWithAggregatesFilter<"SoftwareAccess"> | Date | string
    lastEditedBy?: StringWithAggregatesFilter<"SoftwareAccess"> | string
    permissions?: StringNullableListFilter<"SoftwareAccess">
    uid?: StringWithAggregatesFilter<"SoftwareAccess"> | string
  }

  export type audit_log_entriesWhereInput = {
    AND?: audit_log_entriesWhereInput | audit_log_entriesWhereInput[]
    OR?: audit_log_entriesWhereInput[]
    NOT?: audit_log_entriesWhereInput | audit_log_entriesWhereInput[]
    instance_id?: UuidNullableFilter<"audit_log_entries"> | string | null
    id?: UuidFilter<"audit_log_entries"> | string
    payload?: JsonNullableFilter<"audit_log_entries">
    created_at?: DateTimeNullableFilter<"audit_log_entries"> | Date | string | null
    ip_address?: StringFilter<"audit_log_entries"> | string
  }

  export type audit_log_entriesOrderByWithRelationInput = {
    instance_id?: SortOrderInput | SortOrder
    id?: SortOrder
    payload?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    ip_address?: SortOrder
  }

  export type audit_log_entriesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: audit_log_entriesWhereInput | audit_log_entriesWhereInput[]
    OR?: audit_log_entriesWhereInput[]
    NOT?: audit_log_entriesWhereInput | audit_log_entriesWhereInput[]
    instance_id?: UuidNullableFilter<"audit_log_entries"> | string | null
    payload?: JsonNullableFilter<"audit_log_entries">
    created_at?: DateTimeNullableFilter<"audit_log_entries"> | Date | string | null
    ip_address?: StringFilter<"audit_log_entries"> | string
  }, "id">

  export type audit_log_entriesOrderByWithAggregationInput = {
    instance_id?: SortOrderInput | SortOrder
    id?: SortOrder
    payload?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    ip_address?: SortOrder
    _count?: audit_log_entriesCountOrderByAggregateInput
    _max?: audit_log_entriesMaxOrderByAggregateInput
    _min?: audit_log_entriesMinOrderByAggregateInput
  }

  export type audit_log_entriesScalarWhereWithAggregatesInput = {
    AND?: audit_log_entriesScalarWhereWithAggregatesInput | audit_log_entriesScalarWhereWithAggregatesInput[]
    OR?: audit_log_entriesScalarWhereWithAggregatesInput[]
    NOT?: audit_log_entriesScalarWhereWithAggregatesInput | audit_log_entriesScalarWhereWithAggregatesInput[]
    instance_id?: UuidNullableWithAggregatesFilter<"audit_log_entries"> | string | null
    id?: UuidWithAggregatesFilter<"audit_log_entries"> | string
    payload?: JsonNullableWithAggregatesFilter<"audit_log_entries">
    created_at?: DateTimeNullableWithAggregatesFilter<"audit_log_entries"> | Date | string | null
    ip_address?: StringWithAggregatesFilter<"audit_log_entries"> | string
  }

  export type flow_stateWhereInput = {
    AND?: flow_stateWhereInput | flow_stateWhereInput[]
    OR?: flow_stateWhereInput[]
    NOT?: flow_stateWhereInput | flow_stateWhereInput[]
    id?: UuidFilter<"flow_state"> | string
    user_id?: UuidNullableFilter<"flow_state"> | string | null
    auth_code?: StringFilter<"flow_state"> | string
    code_challenge_method?: Enumcode_challenge_methodFilter<"flow_state"> | $Enums.code_challenge_method
    code_challenge?: StringFilter<"flow_state"> | string
    provider_type?: StringFilter<"flow_state"> | string
    provider_access_token?: StringNullableFilter<"flow_state"> | string | null
    provider_refresh_token?: StringNullableFilter<"flow_state"> | string | null
    created_at?: DateTimeNullableFilter<"flow_state"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"flow_state"> | Date | string | null
    authentication_method?: StringFilter<"flow_state"> | string
    auth_code_issued_at?: DateTimeNullableFilter<"flow_state"> | Date | string | null
    saml_relay_states?: Saml_relay_statesListRelationFilter
  }

  export type flow_stateOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    auth_code?: SortOrder
    code_challenge_method?: SortOrder
    code_challenge?: SortOrder
    provider_type?: SortOrder
    provider_access_token?: SortOrderInput | SortOrder
    provider_refresh_token?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    authentication_method?: SortOrder
    auth_code_issued_at?: SortOrderInput | SortOrder
    saml_relay_states?: saml_relay_statesOrderByRelationAggregateInput
  }

  export type flow_stateWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: flow_stateWhereInput | flow_stateWhereInput[]
    OR?: flow_stateWhereInput[]
    NOT?: flow_stateWhereInput | flow_stateWhereInput[]
    user_id?: UuidNullableFilter<"flow_state"> | string | null
    auth_code?: StringFilter<"flow_state"> | string
    code_challenge_method?: Enumcode_challenge_methodFilter<"flow_state"> | $Enums.code_challenge_method
    code_challenge?: StringFilter<"flow_state"> | string
    provider_type?: StringFilter<"flow_state"> | string
    provider_access_token?: StringNullableFilter<"flow_state"> | string | null
    provider_refresh_token?: StringNullableFilter<"flow_state"> | string | null
    created_at?: DateTimeNullableFilter<"flow_state"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"flow_state"> | Date | string | null
    authentication_method?: StringFilter<"flow_state"> | string
    auth_code_issued_at?: DateTimeNullableFilter<"flow_state"> | Date | string | null
    saml_relay_states?: Saml_relay_statesListRelationFilter
  }, "id">

  export type flow_stateOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    auth_code?: SortOrder
    code_challenge_method?: SortOrder
    code_challenge?: SortOrder
    provider_type?: SortOrder
    provider_access_token?: SortOrderInput | SortOrder
    provider_refresh_token?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    authentication_method?: SortOrder
    auth_code_issued_at?: SortOrderInput | SortOrder
    _count?: flow_stateCountOrderByAggregateInput
    _max?: flow_stateMaxOrderByAggregateInput
    _min?: flow_stateMinOrderByAggregateInput
  }

  export type flow_stateScalarWhereWithAggregatesInput = {
    AND?: flow_stateScalarWhereWithAggregatesInput | flow_stateScalarWhereWithAggregatesInput[]
    OR?: flow_stateScalarWhereWithAggregatesInput[]
    NOT?: flow_stateScalarWhereWithAggregatesInput | flow_stateScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"flow_state"> | string
    user_id?: UuidNullableWithAggregatesFilter<"flow_state"> | string | null
    auth_code?: StringWithAggregatesFilter<"flow_state"> | string
    code_challenge_method?: Enumcode_challenge_methodWithAggregatesFilter<"flow_state"> | $Enums.code_challenge_method
    code_challenge?: StringWithAggregatesFilter<"flow_state"> | string
    provider_type?: StringWithAggregatesFilter<"flow_state"> | string
    provider_access_token?: StringNullableWithAggregatesFilter<"flow_state"> | string | null
    provider_refresh_token?: StringNullableWithAggregatesFilter<"flow_state"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"flow_state"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"flow_state"> | Date | string | null
    authentication_method?: StringWithAggregatesFilter<"flow_state"> | string
    auth_code_issued_at?: DateTimeNullableWithAggregatesFilter<"flow_state"> | Date | string | null
  }

  export type identitiesWhereInput = {
    AND?: identitiesWhereInput | identitiesWhereInput[]
    OR?: identitiesWhereInput[]
    NOT?: identitiesWhereInput | identitiesWhereInput[]
    provider_id?: StringFilter<"identities"> | string
    user_id?: UuidFilter<"identities"> | string
    identity_data?: JsonFilter<"identities">
    provider?: StringFilter<"identities"> | string
    last_sign_in_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    created_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    email?: StringNullableFilter<"identities"> | string | null
    id?: UuidFilter<"identities"> | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type identitiesOrderByWithRelationInput = {
    provider_id?: SortOrder
    user_id?: SortOrder
    identity_data?: SortOrder
    provider?: SortOrder
    last_sign_in_at?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    id?: SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type identitiesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    provider_id_provider?: identitiesProvider_idProviderCompoundUniqueInput
    AND?: identitiesWhereInput | identitiesWhereInput[]
    OR?: identitiesWhereInput[]
    NOT?: identitiesWhereInput | identitiesWhereInput[]
    provider_id?: StringFilter<"identities"> | string
    user_id?: UuidFilter<"identities"> | string
    identity_data?: JsonFilter<"identities">
    provider?: StringFilter<"identities"> | string
    last_sign_in_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    created_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    email?: StringNullableFilter<"identities"> | string | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id" | "provider_id_provider">

  export type identitiesOrderByWithAggregationInput = {
    provider_id?: SortOrder
    user_id?: SortOrder
    identity_data?: SortOrder
    provider?: SortOrder
    last_sign_in_at?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    id?: SortOrder
    _count?: identitiesCountOrderByAggregateInput
    _max?: identitiesMaxOrderByAggregateInput
    _min?: identitiesMinOrderByAggregateInput
  }

  export type identitiesScalarWhereWithAggregatesInput = {
    AND?: identitiesScalarWhereWithAggregatesInput | identitiesScalarWhereWithAggregatesInput[]
    OR?: identitiesScalarWhereWithAggregatesInput[]
    NOT?: identitiesScalarWhereWithAggregatesInput | identitiesScalarWhereWithAggregatesInput[]
    provider_id?: StringWithAggregatesFilter<"identities"> | string
    user_id?: UuidWithAggregatesFilter<"identities"> | string
    identity_data?: JsonWithAggregatesFilter<"identities">
    provider?: StringWithAggregatesFilter<"identities"> | string
    last_sign_in_at?: DateTimeNullableWithAggregatesFilter<"identities"> | Date | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"identities"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"identities"> | Date | string | null
    email?: StringNullableWithAggregatesFilter<"identities"> | string | null
    id?: UuidWithAggregatesFilter<"identities"> | string
  }

  export type instancesWhereInput = {
    AND?: instancesWhereInput | instancesWhereInput[]
    OR?: instancesWhereInput[]
    NOT?: instancesWhereInput | instancesWhereInput[]
    id?: UuidFilter<"instances"> | string
    uuid?: UuidNullableFilter<"instances"> | string | null
    raw_base_config?: StringNullableFilter<"instances"> | string | null
    created_at?: DateTimeNullableFilter<"instances"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"instances"> | Date | string | null
  }

  export type instancesOrderByWithRelationInput = {
    id?: SortOrder
    uuid?: SortOrderInput | SortOrder
    raw_base_config?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
  }

  export type instancesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: instancesWhereInput | instancesWhereInput[]
    OR?: instancesWhereInput[]
    NOT?: instancesWhereInput | instancesWhereInput[]
    uuid?: UuidNullableFilter<"instances"> | string | null
    raw_base_config?: StringNullableFilter<"instances"> | string | null
    created_at?: DateTimeNullableFilter<"instances"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"instances"> | Date | string | null
  }, "id">

  export type instancesOrderByWithAggregationInput = {
    id?: SortOrder
    uuid?: SortOrderInput | SortOrder
    raw_base_config?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: instancesCountOrderByAggregateInput
    _max?: instancesMaxOrderByAggregateInput
    _min?: instancesMinOrderByAggregateInput
  }

  export type instancesScalarWhereWithAggregatesInput = {
    AND?: instancesScalarWhereWithAggregatesInput | instancesScalarWhereWithAggregatesInput[]
    OR?: instancesScalarWhereWithAggregatesInput[]
    NOT?: instancesScalarWhereWithAggregatesInput | instancesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"instances"> | string
    uuid?: UuidNullableWithAggregatesFilter<"instances"> | string | null
    raw_base_config?: StringNullableWithAggregatesFilter<"instances"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"instances"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"instances"> | Date | string | null
  }

  export type mfa_amr_claimsWhereInput = {
    AND?: mfa_amr_claimsWhereInput | mfa_amr_claimsWhereInput[]
    OR?: mfa_amr_claimsWhereInput[]
    NOT?: mfa_amr_claimsWhereInput | mfa_amr_claimsWhereInput[]
    session_id?: UuidFilter<"mfa_amr_claims"> | string
    created_at?: DateTimeFilter<"mfa_amr_claims"> | Date | string
    updated_at?: DateTimeFilter<"mfa_amr_claims"> | Date | string
    authentication_method?: StringFilter<"mfa_amr_claims"> | string
    id?: UuidFilter<"mfa_amr_claims"> | string
    sessions?: XOR<SessionsScalarRelationFilter, sessionsWhereInput>
  }

  export type mfa_amr_claimsOrderByWithRelationInput = {
    session_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    authentication_method?: SortOrder
    id?: SortOrder
    sessions?: sessionsOrderByWithRelationInput
  }

  export type mfa_amr_claimsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    session_id_authentication_method?: mfa_amr_claimsSession_idAuthentication_methodCompoundUniqueInput
    AND?: mfa_amr_claimsWhereInput | mfa_amr_claimsWhereInput[]
    OR?: mfa_amr_claimsWhereInput[]
    NOT?: mfa_amr_claimsWhereInput | mfa_amr_claimsWhereInput[]
    session_id?: UuidFilter<"mfa_amr_claims"> | string
    created_at?: DateTimeFilter<"mfa_amr_claims"> | Date | string
    updated_at?: DateTimeFilter<"mfa_amr_claims"> | Date | string
    authentication_method?: StringFilter<"mfa_amr_claims"> | string
    sessions?: XOR<SessionsScalarRelationFilter, sessionsWhereInput>
  }, "id" | "session_id_authentication_method">

  export type mfa_amr_claimsOrderByWithAggregationInput = {
    session_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    authentication_method?: SortOrder
    id?: SortOrder
    _count?: mfa_amr_claimsCountOrderByAggregateInput
    _max?: mfa_amr_claimsMaxOrderByAggregateInput
    _min?: mfa_amr_claimsMinOrderByAggregateInput
  }

  export type mfa_amr_claimsScalarWhereWithAggregatesInput = {
    AND?: mfa_amr_claimsScalarWhereWithAggregatesInput | mfa_amr_claimsScalarWhereWithAggregatesInput[]
    OR?: mfa_amr_claimsScalarWhereWithAggregatesInput[]
    NOT?: mfa_amr_claimsScalarWhereWithAggregatesInput | mfa_amr_claimsScalarWhereWithAggregatesInput[]
    session_id?: UuidWithAggregatesFilter<"mfa_amr_claims"> | string
    created_at?: DateTimeWithAggregatesFilter<"mfa_amr_claims"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"mfa_amr_claims"> | Date | string
    authentication_method?: StringWithAggregatesFilter<"mfa_amr_claims"> | string
    id?: UuidWithAggregatesFilter<"mfa_amr_claims"> | string
  }

  export type mfa_challengesWhereInput = {
    AND?: mfa_challengesWhereInput | mfa_challengesWhereInput[]
    OR?: mfa_challengesWhereInput[]
    NOT?: mfa_challengesWhereInput | mfa_challengesWhereInput[]
    id?: UuidFilter<"mfa_challenges"> | string
    factor_id?: UuidFilter<"mfa_challenges"> | string
    created_at?: DateTimeFilter<"mfa_challenges"> | Date | string
    verified_at?: DateTimeNullableFilter<"mfa_challenges"> | Date | string | null
    ip_address?: StringFilter<"mfa_challenges"> | string
    otp_code?: StringNullableFilter<"mfa_challenges"> | string | null
    web_authn_session_data?: JsonNullableFilter<"mfa_challenges">
    mfa_factors?: XOR<Mfa_factorsScalarRelationFilter, mfa_factorsWhereInput>
  }

  export type mfa_challengesOrderByWithRelationInput = {
    id?: SortOrder
    factor_id?: SortOrder
    created_at?: SortOrder
    verified_at?: SortOrderInput | SortOrder
    ip_address?: SortOrder
    otp_code?: SortOrderInput | SortOrder
    web_authn_session_data?: SortOrderInput | SortOrder
    mfa_factors?: mfa_factorsOrderByWithRelationInput
  }

  export type mfa_challengesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: mfa_challengesWhereInput | mfa_challengesWhereInput[]
    OR?: mfa_challengesWhereInput[]
    NOT?: mfa_challengesWhereInput | mfa_challengesWhereInput[]
    factor_id?: UuidFilter<"mfa_challenges"> | string
    created_at?: DateTimeFilter<"mfa_challenges"> | Date | string
    verified_at?: DateTimeNullableFilter<"mfa_challenges"> | Date | string | null
    ip_address?: StringFilter<"mfa_challenges"> | string
    otp_code?: StringNullableFilter<"mfa_challenges"> | string | null
    web_authn_session_data?: JsonNullableFilter<"mfa_challenges">
    mfa_factors?: XOR<Mfa_factorsScalarRelationFilter, mfa_factorsWhereInput>
  }, "id">

  export type mfa_challengesOrderByWithAggregationInput = {
    id?: SortOrder
    factor_id?: SortOrder
    created_at?: SortOrder
    verified_at?: SortOrderInput | SortOrder
    ip_address?: SortOrder
    otp_code?: SortOrderInput | SortOrder
    web_authn_session_data?: SortOrderInput | SortOrder
    _count?: mfa_challengesCountOrderByAggregateInput
    _max?: mfa_challengesMaxOrderByAggregateInput
    _min?: mfa_challengesMinOrderByAggregateInput
  }

  export type mfa_challengesScalarWhereWithAggregatesInput = {
    AND?: mfa_challengesScalarWhereWithAggregatesInput | mfa_challengesScalarWhereWithAggregatesInput[]
    OR?: mfa_challengesScalarWhereWithAggregatesInput[]
    NOT?: mfa_challengesScalarWhereWithAggregatesInput | mfa_challengesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"mfa_challenges"> | string
    factor_id?: UuidWithAggregatesFilter<"mfa_challenges"> | string
    created_at?: DateTimeWithAggregatesFilter<"mfa_challenges"> | Date | string
    verified_at?: DateTimeNullableWithAggregatesFilter<"mfa_challenges"> | Date | string | null
    ip_address?: StringWithAggregatesFilter<"mfa_challenges"> | string
    otp_code?: StringNullableWithAggregatesFilter<"mfa_challenges"> | string | null
    web_authn_session_data?: JsonNullableWithAggregatesFilter<"mfa_challenges">
  }

  export type mfa_factorsWhereInput = {
    AND?: mfa_factorsWhereInput | mfa_factorsWhereInput[]
    OR?: mfa_factorsWhereInput[]
    NOT?: mfa_factorsWhereInput | mfa_factorsWhereInput[]
    id?: UuidFilter<"mfa_factors"> | string
    user_id?: UuidFilter<"mfa_factors"> | string
    friendly_name?: StringNullableFilter<"mfa_factors"> | string | null
    factor_type?: Enumfactor_typeFilter<"mfa_factors"> | $Enums.factor_type
    status?: Enumfactor_statusFilter<"mfa_factors"> | $Enums.factor_status
    created_at?: DateTimeFilter<"mfa_factors"> | Date | string
    updated_at?: DateTimeFilter<"mfa_factors"> | Date | string
    secret?: StringNullableFilter<"mfa_factors"> | string | null
    phone?: StringNullableFilter<"mfa_factors"> | string | null
    last_challenged_at?: DateTimeNullableFilter<"mfa_factors"> | Date | string | null
    web_authn_credential?: JsonNullableFilter<"mfa_factors">
    web_authn_aaguid?: UuidNullableFilter<"mfa_factors"> | string | null
    mfa_challenges?: Mfa_challengesListRelationFilter
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type mfa_factorsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    friendly_name?: SortOrderInput | SortOrder
    factor_type?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    secret?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    last_challenged_at?: SortOrderInput | SortOrder
    web_authn_credential?: SortOrderInput | SortOrder
    web_authn_aaguid?: SortOrderInput | SortOrder
    mfa_challenges?: mfa_challengesOrderByRelationAggregateInput
    users?: usersOrderByWithRelationInput
  }

  export type mfa_factorsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    last_challenged_at?: Date | string
    user_id_phone?: mfa_factorsUser_idPhoneCompoundUniqueInput
    AND?: mfa_factorsWhereInput | mfa_factorsWhereInput[]
    OR?: mfa_factorsWhereInput[]
    NOT?: mfa_factorsWhereInput | mfa_factorsWhereInput[]
    user_id?: UuidFilter<"mfa_factors"> | string
    friendly_name?: StringNullableFilter<"mfa_factors"> | string | null
    factor_type?: Enumfactor_typeFilter<"mfa_factors"> | $Enums.factor_type
    status?: Enumfactor_statusFilter<"mfa_factors"> | $Enums.factor_status
    created_at?: DateTimeFilter<"mfa_factors"> | Date | string
    updated_at?: DateTimeFilter<"mfa_factors"> | Date | string
    secret?: StringNullableFilter<"mfa_factors"> | string | null
    phone?: StringNullableFilter<"mfa_factors"> | string | null
    web_authn_credential?: JsonNullableFilter<"mfa_factors">
    web_authn_aaguid?: UuidNullableFilter<"mfa_factors"> | string | null
    mfa_challenges?: Mfa_challengesListRelationFilter
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id" | "last_challenged_at" | "user_id_phone">

  export type mfa_factorsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    friendly_name?: SortOrderInput | SortOrder
    factor_type?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    secret?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    last_challenged_at?: SortOrderInput | SortOrder
    web_authn_credential?: SortOrderInput | SortOrder
    web_authn_aaguid?: SortOrderInput | SortOrder
    _count?: mfa_factorsCountOrderByAggregateInput
    _max?: mfa_factorsMaxOrderByAggregateInput
    _min?: mfa_factorsMinOrderByAggregateInput
  }

  export type mfa_factorsScalarWhereWithAggregatesInput = {
    AND?: mfa_factorsScalarWhereWithAggregatesInput | mfa_factorsScalarWhereWithAggregatesInput[]
    OR?: mfa_factorsScalarWhereWithAggregatesInput[]
    NOT?: mfa_factorsScalarWhereWithAggregatesInput | mfa_factorsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"mfa_factors"> | string
    user_id?: UuidWithAggregatesFilter<"mfa_factors"> | string
    friendly_name?: StringNullableWithAggregatesFilter<"mfa_factors"> | string | null
    factor_type?: Enumfactor_typeWithAggregatesFilter<"mfa_factors"> | $Enums.factor_type
    status?: Enumfactor_statusWithAggregatesFilter<"mfa_factors"> | $Enums.factor_status
    created_at?: DateTimeWithAggregatesFilter<"mfa_factors"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"mfa_factors"> | Date | string
    secret?: StringNullableWithAggregatesFilter<"mfa_factors"> | string | null
    phone?: StringNullableWithAggregatesFilter<"mfa_factors"> | string | null
    last_challenged_at?: DateTimeNullableWithAggregatesFilter<"mfa_factors"> | Date | string | null
    web_authn_credential?: JsonNullableWithAggregatesFilter<"mfa_factors">
    web_authn_aaguid?: UuidNullableWithAggregatesFilter<"mfa_factors"> | string | null
  }

  export type one_time_tokensWhereInput = {
    AND?: one_time_tokensWhereInput | one_time_tokensWhereInput[]
    OR?: one_time_tokensWhereInput[]
    NOT?: one_time_tokensWhereInput | one_time_tokensWhereInput[]
    id?: UuidFilter<"one_time_tokens"> | string
    user_id?: UuidFilter<"one_time_tokens"> | string
    token_type?: Enumone_time_token_typeFilter<"one_time_tokens"> | $Enums.one_time_token_type
    token_hash?: StringFilter<"one_time_tokens"> | string
    relates_to?: StringFilter<"one_time_tokens"> | string
    created_at?: DateTimeFilter<"one_time_tokens"> | Date | string
    updated_at?: DateTimeFilter<"one_time_tokens"> | Date | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type one_time_tokensOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    token_type?: SortOrder
    token_hash?: SortOrder
    relates_to?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type one_time_tokensWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    user_id_token_type?: one_time_tokensUser_idToken_typeCompoundUniqueInput
    AND?: one_time_tokensWhereInput | one_time_tokensWhereInput[]
    OR?: one_time_tokensWhereInput[]
    NOT?: one_time_tokensWhereInput | one_time_tokensWhereInput[]
    user_id?: UuidFilter<"one_time_tokens"> | string
    token_type?: Enumone_time_token_typeFilter<"one_time_tokens"> | $Enums.one_time_token_type
    token_hash?: StringFilter<"one_time_tokens"> | string
    relates_to?: StringFilter<"one_time_tokens"> | string
    created_at?: DateTimeFilter<"one_time_tokens"> | Date | string
    updated_at?: DateTimeFilter<"one_time_tokens"> | Date | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id" | "user_id_token_type">

  export type one_time_tokensOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    token_type?: SortOrder
    token_hash?: SortOrder
    relates_to?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: one_time_tokensCountOrderByAggregateInput
    _max?: one_time_tokensMaxOrderByAggregateInput
    _min?: one_time_tokensMinOrderByAggregateInput
  }

  export type one_time_tokensScalarWhereWithAggregatesInput = {
    AND?: one_time_tokensScalarWhereWithAggregatesInput | one_time_tokensScalarWhereWithAggregatesInput[]
    OR?: one_time_tokensScalarWhereWithAggregatesInput[]
    NOT?: one_time_tokensScalarWhereWithAggregatesInput | one_time_tokensScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"one_time_tokens"> | string
    user_id?: UuidWithAggregatesFilter<"one_time_tokens"> | string
    token_type?: Enumone_time_token_typeWithAggregatesFilter<"one_time_tokens"> | $Enums.one_time_token_type
    token_hash?: StringWithAggregatesFilter<"one_time_tokens"> | string
    relates_to?: StringWithAggregatesFilter<"one_time_tokens"> | string
    created_at?: DateTimeWithAggregatesFilter<"one_time_tokens"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"one_time_tokens"> | Date | string
  }

  export type refresh_tokensWhereInput = {
    AND?: refresh_tokensWhereInput | refresh_tokensWhereInput[]
    OR?: refresh_tokensWhereInput[]
    NOT?: refresh_tokensWhereInput | refresh_tokensWhereInput[]
    instance_id?: UuidNullableFilter<"refresh_tokens"> | string | null
    id?: BigIntFilter<"refresh_tokens"> | bigint | number
    token?: StringNullableFilter<"refresh_tokens"> | string | null
    user_id?: StringNullableFilter<"refresh_tokens"> | string | null
    revoked?: BoolNullableFilter<"refresh_tokens"> | boolean | null
    created_at?: DateTimeNullableFilter<"refresh_tokens"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"refresh_tokens"> | Date | string | null
    parent?: StringNullableFilter<"refresh_tokens"> | string | null
    session_id?: UuidNullableFilter<"refresh_tokens"> | string | null
    sessions?: XOR<SessionsNullableScalarRelationFilter, sessionsWhereInput> | null
  }

  export type refresh_tokensOrderByWithRelationInput = {
    instance_id?: SortOrderInput | SortOrder
    id?: SortOrder
    token?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    revoked?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    parent?: SortOrderInput | SortOrder
    session_id?: SortOrderInput | SortOrder
    sessions?: sessionsOrderByWithRelationInput
  }

  export type refresh_tokensWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    token?: string
    AND?: refresh_tokensWhereInput | refresh_tokensWhereInput[]
    OR?: refresh_tokensWhereInput[]
    NOT?: refresh_tokensWhereInput | refresh_tokensWhereInput[]
    instance_id?: UuidNullableFilter<"refresh_tokens"> | string | null
    user_id?: StringNullableFilter<"refresh_tokens"> | string | null
    revoked?: BoolNullableFilter<"refresh_tokens"> | boolean | null
    created_at?: DateTimeNullableFilter<"refresh_tokens"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"refresh_tokens"> | Date | string | null
    parent?: StringNullableFilter<"refresh_tokens"> | string | null
    session_id?: UuidNullableFilter<"refresh_tokens"> | string | null
    sessions?: XOR<SessionsNullableScalarRelationFilter, sessionsWhereInput> | null
  }, "id" | "token">

  export type refresh_tokensOrderByWithAggregationInput = {
    instance_id?: SortOrderInput | SortOrder
    id?: SortOrder
    token?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    revoked?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    parent?: SortOrderInput | SortOrder
    session_id?: SortOrderInput | SortOrder
    _count?: refresh_tokensCountOrderByAggregateInput
    _avg?: refresh_tokensAvgOrderByAggregateInput
    _max?: refresh_tokensMaxOrderByAggregateInput
    _min?: refresh_tokensMinOrderByAggregateInput
    _sum?: refresh_tokensSumOrderByAggregateInput
  }

  export type refresh_tokensScalarWhereWithAggregatesInput = {
    AND?: refresh_tokensScalarWhereWithAggregatesInput | refresh_tokensScalarWhereWithAggregatesInput[]
    OR?: refresh_tokensScalarWhereWithAggregatesInput[]
    NOT?: refresh_tokensScalarWhereWithAggregatesInput | refresh_tokensScalarWhereWithAggregatesInput[]
    instance_id?: UuidNullableWithAggregatesFilter<"refresh_tokens"> | string | null
    id?: BigIntWithAggregatesFilter<"refresh_tokens"> | bigint | number
    token?: StringNullableWithAggregatesFilter<"refresh_tokens"> | string | null
    user_id?: StringNullableWithAggregatesFilter<"refresh_tokens"> | string | null
    revoked?: BoolNullableWithAggregatesFilter<"refresh_tokens"> | boolean | null
    created_at?: DateTimeNullableWithAggregatesFilter<"refresh_tokens"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"refresh_tokens"> | Date | string | null
    parent?: StringNullableWithAggregatesFilter<"refresh_tokens"> | string | null
    session_id?: UuidNullableWithAggregatesFilter<"refresh_tokens"> | string | null
  }

  export type saml_providersWhereInput = {
    AND?: saml_providersWhereInput | saml_providersWhereInput[]
    OR?: saml_providersWhereInput[]
    NOT?: saml_providersWhereInput | saml_providersWhereInput[]
    id?: UuidFilter<"saml_providers"> | string
    sso_provider_id?: UuidFilter<"saml_providers"> | string
    entity_id?: StringFilter<"saml_providers"> | string
    metadata_xml?: StringFilter<"saml_providers"> | string
    metadata_url?: StringNullableFilter<"saml_providers"> | string | null
    attribute_mapping?: JsonNullableFilter<"saml_providers">
    created_at?: DateTimeNullableFilter<"saml_providers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"saml_providers"> | Date | string | null
    name_id_format?: StringNullableFilter<"saml_providers"> | string | null
    sso_providers?: XOR<Sso_providersScalarRelationFilter, sso_providersWhereInput>
  }

  export type saml_providersOrderByWithRelationInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    entity_id?: SortOrder
    metadata_xml?: SortOrder
    metadata_url?: SortOrderInput | SortOrder
    attribute_mapping?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    name_id_format?: SortOrderInput | SortOrder
    sso_providers?: sso_providersOrderByWithRelationInput
  }

  export type saml_providersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    entity_id?: string
    AND?: saml_providersWhereInput | saml_providersWhereInput[]
    OR?: saml_providersWhereInput[]
    NOT?: saml_providersWhereInput | saml_providersWhereInput[]
    sso_provider_id?: UuidFilter<"saml_providers"> | string
    metadata_xml?: StringFilter<"saml_providers"> | string
    metadata_url?: StringNullableFilter<"saml_providers"> | string | null
    attribute_mapping?: JsonNullableFilter<"saml_providers">
    created_at?: DateTimeNullableFilter<"saml_providers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"saml_providers"> | Date | string | null
    name_id_format?: StringNullableFilter<"saml_providers"> | string | null
    sso_providers?: XOR<Sso_providersScalarRelationFilter, sso_providersWhereInput>
  }, "id" | "entity_id">

  export type saml_providersOrderByWithAggregationInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    entity_id?: SortOrder
    metadata_xml?: SortOrder
    metadata_url?: SortOrderInput | SortOrder
    attribute_mapping?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    name_id_format?: SortOrderInput | SortOrder
    _count?: saml_providersCountOrderByAggregateInput
    _max?: saml_providersMaxOrderByAggregateInput
    _min?: saml_providersMinOrderByAggregateInput
  }

  export type saml_providersScalarWhereWithAggregatesInput = {
    AND?: saml_providersScalarWhereWithAggregatesInput | saml_providersScalarWhereWithAggregatesInput[]
    OR?: saml_providersScalarWhereWithAggregatesInput[]
    NOT?: saml_providersScalarWhereWithAggregatesInput | saml_providersScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"saml_providers"> | string
    sso_provider_id?: UuidWithAggregatesFilter<"saml_providers"> | string
    entity_id?: StringWithAggregatesFilter<"saml_providers"> | string
    metadata_xml?: StringWithAggregatesFilter<"saml_providers"> | string
    metadata_url?: StringNullableWithAggregatesFilter<"saml_providers"> | string | null
    attribute_mapping?: JsonNullableWithAggregatesFilter<"saml_providers">
    created_at?: DateTimeNullableWithAggregatesFilter<"saml_providers"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"saml_providers"> | Date | string | null
    name_id_format?: StringNullableWithAggregatesFilter<"saml_providers"> | string | null
  }

  export type saml_relay_statesWhereInput = {
    AND?: saml_relay_statesWhereInput | saml_relay_statesWhereInput[]
    OR?: saml_relay_statesWhereInput[]
    NOT?: saml_relay_statesWhereInput | saml_relay_statesWhereInput[]
    id?: UuidFilter<"saml_relay_states"> | string
    sso_provider_id?: UuidFilter<"saml_relay_states"> | string
    request_id?: StringFilter<"saml_relay_states"> | string
    for_email?: StringNullableFilter<"saml_relay_states"> | string | null
    redirect_to?: StringNullableFilter<"saml_relay_states"> | string | null
    created_at?: DateTimeNullableFilter<"saml_relay_states"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"saml_relay_states"> | Date | string | null
    flow_state_id?: UuidNullableFilter<"saml_relay_states"> | string | null
    flow_state?: XOR<Flow_stateNullableScalarRelationFilter, flow_stateWhereInput> | null
    sso_providers?: XOR<Sso_providersScalarRelationFilter, sso_providersWhereInput>
  }

  export type saml_relay_statesOrderByWithRelationInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    request_id?: SortOrder
    for_email?: SortOrderInput | SortOrder
    redirect_to?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    flow_state_id?: SortOrderInput | SortOrder
    flow_state?: flow_stateOrderByWithRelationInput
    sso_providers?: sso_providersOrderByWithRelationInput
  }

  export type saml_relay_statesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: saml_relay_statesWhereInput | saml_relay_statesWhereInput[]
    OR?: saml_relay_statesWhereInput[]
    NOT?: saml_relay_statesWhereInput | saml_relay_statesWhereInput[]
    sso_provider_id?: UuidFilter<"saml_relay_states"> | string
    request_id?: StringFilter<"saml_relay_states"> | string
    for_email?: StringNullableFilter<"saml_relay_states"> | string | null
    redirect_to?: StringNullableFilter<"saml_relay_states"> | string | null
    created_at?: DateTimeNullableFilter<"saml_relay_states"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"saml_relay_states"> | Date | string | null
    flow_state_id?: UuidNullableFilter<"saml_relay_states"> | string | null
    flow_state?: XOR<Flow_stateNullableScalarRelationFilter, flow_stateWhereInput> | null
    sso_providers?: XOR<Sso_providersScalarRelationFilter, sso_providersWhereInput>
  }, "id">

  export type saml_relay_statesOrderByWithAggregationInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    request_id?: SortOrder
    for_email?: SortOrderInput | SortOrder
    redirect_to?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    flow_state_id?: SortOrderInput | SortOrder
    _count?: saml_relay_statesCountOrderByAggregateInput
    _max?: saml_relay_statesMaxOrderByAggregateInput
    _min?: saml_relay_statesMinOrderByAggregateInput
  }

  export type saml_relay_statesScalarWhereWithAggregatesInput = {
    AND?: saml_relay_statesScalarWhereWithAggregatesInput | saml_relay_statesScalarWhereWithAggregatesInput[]
    OR?: saml_relay_statesScalarWhereWithAggregatesInput[]
    NOT?: saml_relay_statesScalarWhereWithAggregatesInput | saml_relay_statesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"saml_relay_states"> | string
    sso_provider_id?: UuidWithAggregatesFilter<"saml_relay_states"> | string
    request_id?: StringWithAggregatesFilter<"saml_relay_states"> | string
    for_email?: StringNullableWithAggregatesFilter<"saml_relay_states"> | string | null
    redirect_to?: StringNullableWithAggregatesFilter<"saml_relay_states"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"saml_relay_states"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"saml_relay_states"> | Date | string | null
    flow_state_id?: UuidNullableWithAggregatesFilter<"saml_relay_states"> | string | null
  }

  export type schema_migrationsWhereInput = {
    AND?: schema_migrationsWhereInput | schema_migrationsWhereInput[]
    OR?: schema_migrationsWhereInput[]
    NOT?: schema_migrationsWhereInput | schema_migrationsWhereInput[]
    version?: StringFilter<"schema_migrations"> | string
  }

  export type schema_migrationsOrderByWithRelationInput = {
    version?: SortOrder
  }

  export type schema_migrationsWhereUniqueInput = Prisma.AtLeast<{
    version?: string
    AND?: schema_migrationsWhereInput | schema_migrationsWhereInput[]
    OR?: schema_migrationsWhereInput[]
    NOT?: schema_migrationsWhereInput | schema_migrationsWhereInput[]
  }, "version">

  export type schema_migrationsOrderByWithAggregationInput = {
    version?: SortOrder
    _count?: schema_migrationsCountOrderByAggregateInput
    _max?: schema_migrationsMaxOrderByAggregateInput
    _min?: schema_migrationsMinOrderByAggregateInput
  }

  export type schema_migrationsScalarWhereWithAggregatesInput = {
    AND?: schema_migrationsScalarWhereWithAggregatesInput | schema_migrationsScalarWhereWithAggregatesInput[]
    OR?: schema_migrationsScalarWhereWithAggregatesInput[]
    NOT?: schema_migrationsScalarWhereWithAggregatesInput | schema_migrationsScalarWhereWithAggregatesInput[]
    version?: StringWithAggregatesFilter<"schema_migrations"> | string
  }

  export type sessionsWhereInput = {
    AND?: sessionsWhereInput | sessionsWhereInput[]
    OR?: sessionsWhereInput[]
    NOT?: sessionsWhereInput | sessionsWhereInput[]
    id?: UuidFilter<"sessions"> | string
    user_id?: UuidFilter<"sessions"> | string
    created_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    factor_id?: UuidNullableFilter<"sessions"> | string | null
    aal?: Enumaal_levelNullableFilter<"sessions"> | $Enums.aal_level | null
    not_after?: DateTimeNullableFilter<"sessions"> | Date | string | null
    refreshed_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    user_agent?: StringNullableFilter<"sessions"> | string | null
    ip?: StringNullableFilter<"sessions"> | string | null
    tag?: StringNullableFilter<"sessions"> | string | null
    mfa_amr_claims?: Mfa_amr_claimsListRelationFilter
    refresh_tokens?: Refresh_tokensListRelationFilter
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type sessionsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    factor_id?: SortOrderInput | SortOrder
    aal?: SortOrderInput | SortOrder
    not_after?: SortOrderInput | SortOrder
    refreshed_at?: SortOrderInput | SortOrder
    user_agent?: SortOrderInput | SortOrder
    ip?: SortOrderInput | SortOrder
    tag?: SortOrderInput | SortOrder
    mfa_amr_claims?: mfa_amr_claimsOrderByRelationAggregateInput
    refresh_tokens?: refresh_tokensOrderByRelationAggregateInput
    users?: usersOrderByWithRelationInput
  }

  export type sessionsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: sessionsWhereInput | sessionsWhereInput[]
    OR?: sessionsWhereInput[]
    NOT?: sessionsWhereInput | sessionsWhereInput[]
    user_id?: UuidFilter<"sessions"> | string
    created_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    factor_id?: UuidNullableFilter<"sessions"> | string | null
    aal?: Enumaal_levelNullableFilter<"sessions"> | $Enums.aal_level | null
    not_after?: DateTimeNullableFilter<"sessions"> | Date | string | null
    refreshed_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    user_agent?: StringNullableFilter<"sessions"> | string | null
    ip?: StringNullableFilter<"sessions"> | string | null
    tag?: StringNullableFilter<"sessions"> | string | null
    mfa_amr_claims?: Mfa_amr_claimsListRelationFilter
    refresh_tokens?: Refresh_tokensListRelationFilter
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id">

  export type sessionsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    factor_id?: SortOrderInput | SortOrder
    aal?: SortOrderInput | SortOrder
    not_after?: SortOrderInput | SortOrder
    refreshed_at?: SortOrderInput | SortOrder
    user_agent?: SortOrderInput | SortOrder
    ip?: SortOrderInput | SortOrder
    tag?: SortOrderInput | SortOrder
    _count?: sessionsCountOrderByAggregateInput
    _max?: sessionsMaxOrderByAggregateInput
    _min?: sessionsMinOrderByAggregateInput
  }

  export type sessionsScalarWhereWithAggregatesInput = {
    AND?: sessionsScalarWhereWithAggregatesInput | sessionsScalarWhereWithAggregatesInput[]
    OR?: sessionsScalarWhereWithAggregatesInput[]
    NOT?: sessionsScalarWhereWithAggregatesInput | sessionsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"sessions"> | string
    user_id?: UuidWithAggregatesFilter<"sessions"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"sessions"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"sessions"> | Date | string | null
    factor_id?: UuidNullableWithAggregatesFilter<"sessions"> | string | null
    aal?: Enumaal_levelNullableWithAggregatesFilter<"sessions"> | $Enums.aal_level | null
    not_after?: DateTimeNullableWithAggregatesFilter<"sessions"> | Date | string | null
    refreshed_at?: DateTimeNullableWithAggregatesFilter<"sessions"> | Date | string | null
    user_agent?: StringNullableWithAggregatesFilter<"sessions"> | string | null
    ip?: StringNullableWithAggregatesFilter<"sessions"> | string | null
    tag?: StringNullableWithAggregatesFilter<"sessions"> | string | null
  }

  export type sso_domainsWhereInput = {
    AND?: sso_domainsWhereInput | sso_domainsWhereInput[]
    OR?: sso_domainsWhereInput[]
    NOT?: sso_domainsWhereInput | sso_domainsWhereInput[]
    id?: UuidFilter<"sso_domains"> | string
    sso_provider_id?: UuidFilter<"sso_domains"> | string
    domain?: StringFilter<"sso_domains"> | string
    created_at?: DateTimeNullableFilter<"sso_domains"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sso_domains"> | Date | string | null
    sso_providers?: XOR<Sso_providersScalarRelationFilter, sso_providersWhereInput>
  }

  export type sso_domainsOrderByWithRelationInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    domain?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    sso_providers?: sso_providersOrderByWithRelationInput
  }

  export type sso_domainsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: sso_domainsWhereInput | sso_domainsWhereInput[]
    OR?: sso_domainsWhereInput[]
    NOT?: sso_domainsWhereInput | sso_domainsWhereInput[]
    sso_provider_id?: UuidFilter<"sso_domains"> | string
    domain?: StringFilter<"sso_domains"> | string
    created_at?: DateTimeNullableFilter<"sso_domains"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sso_domains"> | Date | string | null
    sso_providers?: XOR<Sso_providersScalarRelationFilter, sso_providersWhereInput>
  }, "id">

  export type sso_domainsOrderByWithAggregationInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    domain?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: sso_domainsCountOrderByAggregateInput
    _max?: sso_domainsMaxOrderByAggregateInput
    _min?: sso_domainsMinOrderByAggregateInput
  }

  export type sso_domainsScalarWhereWithAggregatesInput = {
    AND?: sso_domainsScalarWhereWithAggregatesInput | sso_domainsScalarWhereWithAggregatesInput[]
    OR?: sso_domainsScalarWhereWithAggregatesInput[]
    NOT?: sso_domainsScalarWhereWithAggregatesInput | sso_domainsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"sso_domains"> | string
    sso_provider_id?: UuidWithAggregatesFilter<"sso_domains"> | string
    domain?: StringWithAggregatesFilter<"sso_domains"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"sso_domains"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"sso_domains"> | Date | string | null
  }

  export type sso_providersWhereInput = {
    AND?: sso_providersWhereInput | sso_providersWhereInput[]
    OR?: sso_providersWhereInput[]
    NOT?: sso_providersWhereInput | sso_providersWhereInput[]
    id?: UuidFilter<"sso_providers"> | string
    resource_id?: StringNullableFilter<"sso_providers"> | string | null
    created_at?: DateTimeNullableFilter<"sso_providers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sso_providers"> | Date | string | null
    saml_providers?: Saml_providersListRelationFilter
    saml_relay_states?: Saml_relay_statesListRelationFilter
    sso_domains?: Sso_domainsListRelationFilter
  }

  export type sso_providersOrderByWithRelationInput = {
    id?: SortOrder
    resource_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    saml_providers?: saml_providersOrderByRelationAggregateInput
    saml_relay_states?: saml_relay_statesOrderByRelationAggregateInput
    sso_domains?: sso_domainsOrderByRelationAggregateInput
  }

  export type sso_providersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: sso_providersWhereInput | sso_providersWhereInput[]
    OR?: sso_providersWhereInput[]
    NOT?: sso_providersWhereInput | sso_providersWhereInput[]
    resource_id?: StringNullableFilter<"sso_providers"> | string | null
    created_at?: DateTimeNullableFilter<"sso_providers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sso_providers"> | Date | string | null
    saml_providers?: Saml_providersListRelationFilter
    saml_relay_states?: Saml_relay_statesListRelationFilter
    sso_domains?: Sso_domainsListRelationFilter
  }, "id">

  export type sso_providersOrderByWithAggregationInput = {
    id?: SortOrder
    resource_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: sso_providersCountOrderByAggregateInput
    _max?: sso_providersMaxOrderByAggregateInput
    _min?: sso_providersMinOrderByAggregateInput
  }

  export type sso_providersScalarWhereWithAggregatesInput = {
    AND?: sso_providersScalarWhereWithAggregatesInput | sso_providersScalarWhereWithAggregatesInput[]
    OR?: sso_providersScalarWhereWithAggregatesInput[]
    NOT?: sso_providersScalarWhereWithAggregatesInput | sso_providersScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"sso_providers"> | string
    resource_id?: StringNullableWithAggregatesFilter<"sso_providers"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"sso_providers"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"sso_providers"> | Date | string | null
  }

  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    instance_id?: UuidNullableFilter<"users"> | string | null
    id?: UuidFilter<"users"> | string
    aud?: StringNullableFilter<"users"> | string | null
    role?: StringNullableFilter<"users"> | string | null
    email?: StringNullableFilter<"users"> | string | null
    encrypted_password?: StringNullableFilter<"users"> | string | null
    email_confirmed_at?: DateTimeNullableFilter<"users"> | Date | string | null
    invited_at?: DateTimeNullableFilter<"users"> | Date | string | null
    confirmation_token?: StringNullableFilter<"users"> | string | null
    confirmation_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    recovery_token?: StringNullableFilter<"users"> | string | null
    recovery_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    email_change_token_new?: StringNullableFilter<"users"> | string | null
    email_change?: StringNullableFilter<"users"> | string | null
    email_change_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    last_sign_in_at?: DateTimeNullableFilter<"users"> | Date | string | null
    raw_app_meta_data?: JsonNullableFilter<"users">
    raw_user_meta_data?: JsonNullableFilter<"users">
    is_super_admin?: BoolNullableFilter<"users"> | boolean | null
    created_at?: DateTimeNullableFilter<"users"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"users"> | Date | string | null
    phone?: StringNullableFilter<"users"> | string | null
    phone_confirmed_at?: DateTimeNullableFilter<"users"> | Date | string | null
    phone_change?: StringNullableFilter<"users"> | string | null
    phone_change_token?: StringNullableFilter<"users"> | string | null
    phone_change_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    confirmed_at?: DateTimeNullableFilter<"users"> | Date | string | null
    email_change_token_current?: StringNullableFilter<"users"> | string | null
    email_change_confirm_status?: IntNullableFilter<"users"> | number | null
    banned_until?: DateTimeNullableFilter<"users"> | Date | string | null
    reauthentication_token?: StringNullableFilter<"users"> | string | null
    reauthentication_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    is_sso_user?: BoolFilter<"users"> | boolean
    deleted_at?: DateTimeNullableFilter<"users"> | Date | string | null
    is_anonymous?: BoolFilter<"users"> | boolean
    identities?: IdentitiesListRelationFilter
    mfa_factors?: Mfa_factorsListRelationFilter
    one_time_tokens?: One_time_tokensListRelationFilter
    sessions?: SessionsListRelationFilter
  }

  export type usersOrderByWithRelationInput = {
    instance_id?: SortOrderInput | SortOrder
    id?: SortOrder
    aud?: SortOrderInput | SortOrder
    role?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    encrypted_password?: SortOrderInput | SortOrder
    email_confirmed_at?: SortOrderInput | SortOrder
    invited_at?: SortOrderInput | SortOrder
    confirmation_token?: SortOrderInput | SortOrder
    confirmation_sent_at?: SortOrderInput | SortOrder
    recovery_token?: SortOrderInput | SortOrder
    recovery_sent_at?: SortOrderInput | SortOrder
    email_change_token_new?: SortOrderInput | SortOrder
    email_change?: SortOrderInput | SortOrder
    email_change_sent_at?: SortOrderInput | SortOrder
    last_sign_in_at?: SortOrderInput | SortOrder
    raw_app_meta_data?: SortOrderInput | SortOrder
    raw_user_meta_data?: SortOrderInput | SortOrder
    is_super_admin?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    phone_confirmed_at?: SortOrderInput | SortOrder
    phone_change?: SortOrderInput | SortOrder
    phone_change_token?: SortOrderInput | SortOrder
    phone_change_sent_at?: SortOrderInput | SortOrder
    confirmed_at?: SortOrderInput | SortOrder
    email_change_token_current?: SortOrderInput | SortOrder
    email_change_confirm_status?: SortOrderInput | SortOrder
    banned_until?: SortOrderInput | SortOrder
    reauthentication_token?: SortOrderInput | SortOrder
    reauthentication_sent_at?: SortOrderInput | SortOrder
    is_sso_user?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    is_anonymous?: SortOrder
    identities?: identitiesOrderByRelationAggregateInput
    mfa_factors?: mfa_factorsOrderByRelationAggregateInput
    one_time_tokens?: one_time_tokensOrderByRelationAggregateInput
    sessions?: sessionsOrderByRelationAggregateInput
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    phone?: string
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    instance_id?: UuidNullableFilter<"users"> | string | null
    aud?: StringNullableFilter<"users"> | string | null
    role?: StringNullableFilter<"users"> | string | null
    email?: StringNullableFilter<"users"> | string | null
    encrypted_password?: StringNullableFilter<"users"> | string | null
    email_confirmed_at?: DateTimeNullableFilter<"users"> | Date | string | null
    invited_at?: DateTimeNullableFilter<"users"> | Date | string | null
    confirmation_token?: StringNullableFilter<"users"> | string | null
    confirmation_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    recovery_token?: StringNullableFilter<"users"> | string | null
    recovery_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    email_change_token_new?: StringNullableFilter<"users"> | string | null
    email_change?: StringNullableFilter<"users"> | string | null
    email_change_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    last_sign_in_at?: DateTimeNullableFilter<"users"> | Date | string | null
    raw_app_meta_data?: JsonNullableFilter<"users">
    raw_user_meta_data?: JsonNullableFilter<"users">
    is_super_admin?: BoolNullableFilter<"users"> | boolean | null
    created_at?: DateTimeNullableFilter<"users"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"users"> | Date | string | null
    phone_confirmed_at?: DateTimeNullableFilter<"users"> | Date | string | null
    phone_change?: StringNullableFilter<"users"> | string | null
    phone_change_token?: StringNullableFilter<"users"> | string | null
    phone_change_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    confirmed_at?: DateTimeNullableFilter<"users"> | Date | string | null
    email_change_token_current?: StringNullableFilter<"users"> | string | null
    email_change_confirm_status?: IntNullableFilter<"users"> | number | null
    banned_until?: DateTimeNullableFilter<"users"> | Date | string | null
    reauthentication_token?: StringNullableFilter<"users"> | string | null
    reauthentication_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    is_sso_user?: BoolFilter<"users"> | boolean
    deleted_at?: DateTimeNullableFilter<"users"> | Date | string | null
    is_anonymous?: BoolFilter<"users"> | boolean
    identities?: IdentitiesListRelationFilter
    mfa_factors?: Mfa_factorsListRelationFilter
    one_time_tokens?: One_time_tokensListRelationFilter
    sessions?: SessionsListRelationFilter
  }, "id" | "phone">

  export type usersOrderByWithAggregationInput = {
    instance_id?: SortOrderInput | SortOrder
    id?: SortOrder
    aud?: SortOrderInput | SortOrder
    role?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    encrypted_password?: SortOrderInput | SortOrder
    email_confirmed_at?: SortOrderInput | SortOrder
    invited_at?: SortOrderInput | SortOrder
    confirmation_token?: SortOrderInput | SortOrder
    confirmation_sent_at?: SortOrderInput | SortOrder
    recovery_token?: SortOrderInput | SortOrder
    recovery_sent_at?: SortOrderInput | SortOrder
    email_change_token_new?: SortOrderInput | SortOrder
    email_change?: SortOrderInput | SortOrder
    email_change_sent_at?: SortOrderInput | SortOrder
    last_sign_in_at?: SortOrderInput | SortOrder
    raw_app_meta_data?: SortOrderInput | SortOrder
    raw_user_meta_data?: SortOrderInput | SortOrder
    is_super_admin?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    phone_confirmed_at?: SortOrderInput | SortOrder
    phone_change?: SortOrderInput | SortOrder
    phone_change_token?: SortOrderInput | SortOrder
    phone_change_sent_at?: SortOrderInput | SortOrder
    confirmed_at?: SortOrderInput | SortOrder
    email_change_token_current?: SortOrderInput | SortOrder
    email_change_confirm_status?: SortOrderInput | SortOrder
    banned_until?: SortOrderInput | SortOrder
    reauthentication_token?: SortOrderInput | SortOrder
    reauthentication_sent_at?: SortOrderInput | SortOrder
    is_sso_user?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    is_anonymous?: SortOrder
    _count?: usersCountOrderByAggregateInput
    _avg?: usersAvgOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
    _sum?: usersSumOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    instance_id?: UuidNullableWithAggregatesFilter<"users"> | string | null
    id?: UuidWithAggregatesFilter<"users"> | string
    aud?: StringNullableWithAggregatesFilter<"users"> | string | null
    role?: StringNullableWithAggregatesFilter<"users"> | string | null
    email?: StringNullableWithAggregatesFilter<"users"> | string | null
    encrypted_password?: StringNullableWithAggregatesFilter<"users"> | string | null
    email_confirmed_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    invited_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    confirmation_token?: StringNullableWithAggregatesFilter<"users"> | string | null
    confirmation_sent_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    recovery_token?: StringNullableWithAggregatesFilter<"users"> | string | null
    recovery_sent_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    email_change_token_new?: StringNullableWithAggregatesFilter<"users"> | string | null
    email_change?: StringNullableWithAggregatesFilter<"users"> | string | null
    email_change_sent_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    last_sign_in_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    raw_app_meta_data?: JsonNullableWithAggregatesFilter<"users">
    raw_user_meta_data?: JsonNullableWithAggregatesFilter<"users">
    is_super_admin?: BoolNullableWithAggregatesFilter<"users"> | boolean | null
    created_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    phone?: StringNullableWithAggregatesFilter<"users"> | string | null
    phone_confirmed_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    phone_change?: StringNullableWithAggregatesFilter<"users"> | string | null
    phone_change_token?: StringNullableWithAggregatesFilter<"users"> | string | null
    phone_change_sent_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    confirmed_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    email_change_token_current?: StringNullableWithAggregatesFilter<"users"> | string | null
    email_change_confirm_status?: IntNullableWithAggregatesFilter<"users"> | number | null
    banned_until?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    reauthentication_token?: StringNullableWithAggregatesFilter<"users"> | string | null
    reauthentication_sent_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    is_sso_user?: BoolWithAggregatesFilter<"users"> | boolean
    deleted_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    is_anonymous?: BoolWithAggregatesFilter<"users"> | boolean
  }

  export type bucketsWhereInput = {
    AND?: bucketsWhereInput | bucketsWhereInput[]
    OR?: bucketsWhereInput[]
    NOT?: bucketsWhereInput | bucketsWhereInput[]
    id?: StringFilter<"buckets"> | string
    name?: StringFilter<"buckets"> | string
    owner?: UuidNullableFilter<"buckets"> | string | null
    created_at?: DateTimeNullableFilter<"buckets"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"buckets"> | Date | string | null
    public?: BoolNullableFilter<"buckets"> | boolean | null
    avif_autodetection?: BoolNullableFilter<"buckets"> | boolean | null
    file_size_limit?: BigIntNullableFilter<"buckets"> | bigint | number | null
    allowed_mime_types?: StringNullableListFilter<"buckets">
    owner_id?: StringNullableFilter<"buckets"> | string | null
    objects?: ObjectsListRelationFilter
    s3_multipart_uploads?: S3_multipart_uploadsListRelationFilter
    s3_multipart_uploads_parts?: S3_multipart_uploads_partsListRelationFilter
  }

  export type bucketsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    owner?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    public?: SortOrderInput | SortOrder
    avif_autodetection?: SortOrderInput | SortOrder
    file_size_limit?: SortOrderInput | SortOrder
    allowed_mime_types?: SortOrder
    owner_id?: SortOrderInput | SortOrder
    objects?: objectsOrderByRelationAggregateInput
    s3_multipart_uploads?: s3_multipart_uploadsOrderByRelationAggregateInput
    s3_multipart_uploads_parts?: s3_multipart_uploads_partsOrderByRelationAggregateInput
  }

  export type bucketsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: bucketsWhereInput | bucketsWhereInput[]
    OR?: bucketsWhereInput[]
    NOT?: bucketsWhereInput | bucketsWhereInput[]
    owner?: UuidNullableFilter<"buckets"> | string | null
    created_at?: DateTimeNullableFilter<"buckets"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"buckets"> | Date | string | null
    public?: BoolNullableFilter<"buckets"> | boolean | null
    avif_autodetection?: BoolNullableFilter<"buckets"> | boolean | null
    file_size_limit?: BigIntNullableFilter<"buckets"> | bigint | number | null
    allowed_mime_types?: StringNullableListFilter<"buckets">
    owner_id?: StringNullableFilter<"buckets"> | string | null
    objects?: ObjectsListRelationFilter
    s3_multipart_uploads?: S3_multipart_uploadsListRelationFilter
    s3_multipart_uploads_parts?: S3_multipart_uploads_partsListRelationFilter
  }, "id" | "name">

  export type bucketsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    owner?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    public?: SortOrderInput | SortOrder
    avif_autodetection?: SortOrderInput | SortOrder
    file_size_limit?: SortOrderInput | SortOrder
    allowed_mime_types?: SortOrder
    owner_id?: SortOrderInput | SortOrder
    _count?: bucketsCountOrderByAggregateInput
    _avg?: bucketsAvgOrderByAggregateInput
    _max?: bucketsMaxOrderByAggregateInput
    _min?: bucketsMinOrderByAggregateInput
    _sum?: bucketsSumOrderByAggregateInput
  }

  export type bucketsScalarWhereWithAggregatesInput = {
    AND?: bucketsScalarWhereWithAggregatesInput | bucketsScalarWhereWithAggregatesInput[]
    OR?: bucketsScalarWhereWithAggregatesInput[]
    NOT?: bucketsScalarWhereWithAggregatesInput | bucketsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"buckets"> | string
    name?: StringWithAggregatesFilter<"buckets"> | string
    owner?: UuidNullableWithAggregatesFilter<"buckets"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"buckets"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"buckets"> | Date | string | null
    public?: BoolNullableWithAggregatesFilter<"buckets"> | boolean | null
    avif_autodetection?: BoolNullableWithAggregatesFilter<"buckets"> | boolean | null
    file_size_limit?: BigIntNullableWithAggregatesFilter<"buckets"> | bigint | number | null
    allowed_mime_types?: StringNullableListFilter<"buckets">
    owner_id?: StringNullableWithAggregatesFilter<"buckets"> | string | null
  }

  export type migrationsWhereInput = {
    AND?: migrationsWhereInput | migrationsWhereInput[]
    OR?: migrationsWhereInput[]
    NOT?: migrationsWhereInput | migrationsWhereInput[]
    id?: IntFilter<"migrations"> | number
    name?: StringFilter<"migrations"> | string
    hash?: StringFilter<"migrations"> | string
    executed_at?: DateTimeNullableFilter<"migrations"> | Date | string | null
  }

  export type migrationsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    hash?: SortOrder
    executed_at?: SortOrderInput | SortOrder
  }

  export type migrationsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: migrationsWhereInput | migrationsWhereInput[]
    OR?: migrationsWhereInput[]
    NOT?: migrationsWhereInput | migrationsWhereInput[]
    hash?: StringFilter<"migrations"> | string
    executed_at?: DateTimeNullableFilter<"migrations"> | Date | string | null
  }, "id" | "name">

  export type migrationsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    hash?: SortOrder
    executed_at?: SortOrderInput | SortOrder
    _count?: migrationsCountOrderByAggregateInput
    _avg?: migrationsAvgOrderByAggregateInput
    _max?: migrationsMaxOrderByAggregateInput
    _min?: migrationsMinOrderByAggregateInput
    _sum?: migrationsSumOrderByAggregateInput
  }

  export type migrationsScalarWhereWithAggregatesInput = {
    AND?: migrationsScalarWhereWithAggregatesInput | migrationsScalarWhereWithAggregatesInput[]
    OR?: migrationsScalarWhereWithAggregatesInput[]
    NOT?: migrationsScalarWhereWithAggregatesInput | migrationsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"migrations"> | number
    name?: StringWithAggregatesFilter<"migrations"> | string
    hash?: StringWithAggregatesFilter<"migrations"> | string
    executed_at?: DateTimeNullableWithAggregatesFilter<"migrations"> | Date | string | null
  }

  export type objectsWhereInput = {
    AND?: objectsWhereInput | objectsWhereInput[]
    OR?: objectsWhereInput[]
    NOT?: objectsWhereInput | objectsWhereInput[]
    id?: UuidFilter<"objects"> | string
    bucket_id?: StringNullableFilter<"objects"> | string | null
    name?: StringNullableFilter<"objects"> | string | null
    owner?: UuidNullableFilter<"objects"> | string | null
    created_at?: DateTimeNullableFilter<"objects"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"objects"> | Date | string | null
    last_accessed_at?: DateTimeNullableFilter<"objects"> | Date | string | null
    metadata?: JsonNullableFilter<"objects">
    path_tokens?: StringNullableListFilter<"objects">
    version?: StringNullableFilter<"objects"> | string | null
    owner_id?: StringNullableFilter<"objects"> | string | null
    user_metadata?: JsonNullableFilter<"objects">
    buckets?: XOR<BucketsNullableScalarRelationFilter, bucketsWhereInput> | null
  }

  export type objectsOrderByWithRelationInput = {
    id?: SortOrder
    bucket_id?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    owner?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    last_accessed_at?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    path_tokens?: SortOrder
    version?: SortOrderInput | SortOrder
    owner_id?: SortOrderInput | SortOrder
    user_metadata?: SortOrderInput | SortOrder
    buckets?: bucketsOrderByWithRelationInput
  }

  export type objectsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    bucket_id_name?: objectsBucket_idNameCompoundUniqueInput
    AND?: objectsWhereInput | objectsWhereInput[]
    OR?: objectsWhereInput[]
    NOT?: objectsWhereInput | objectsWhereInput[]
    bucket_id?: StringNullableFilter<"objects"> | string | null
    name?: StringNullableFilter<"objects"> | string | null
    owner?: UuidNullableFilter<"objects"> | string | null
    created_at?: DateTimeNullableFilter<"objects"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"objects"> | Date | string | null
    last_accessed_at?: DateTimeNullableFilter<"objects"> | Date | string | null
    metadata?: JsonNullableFilter<"objects">
    path_tokens?: StringNullableListFilter<"objects">
    version?: StringNullableFilter<"objects"> | string | null
    owner_id?: StringNullableFilter<"objects"> | string | null
    user_metadata?: JsonNullableFilter<"objects">
    buckets?: XOR<BucketsNullableScalarRelationFilter, bucketsWhereInput> | null
  }, "id" | "bucket_id_name">

  export type objectsOrderByWithAggregationInput = {
    id?: SortOrder
    bucket_id?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    owner?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    last_accessed_at?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    path_tokens?: SortOrder
    version?: SortOrderInput | SortOrder
    owner_id?: SortOrderInput | SortOrder
    user_metadata?: SortOrderInput | SortOrder
    _count?: objectsCountOrderByAggregateInput
    _max?: objectsMaxOrderByAggregateInput
    _min?: objectsMinOrderByAggregateInput
  }

  export type objectsScalarWhereWithAggregatesInput = {
    AND?: objectsScalarWhereWithAggregatesInput | objectsScalarWhereWithAggregatesInput[]
    OR?: objectsScalarWhereWithAggregatesInput[]
    NOT?: objectsScalarWhereWithAggregatesInput | objectsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"objects"> | string
    bucket_id?: StringNullableWithAggregatesFilter<"objects"> | string | null
    name?: StringNullableWithAggregatesFilter<"objects"> | string | null
    owner?: UuidNullableWithAggregatesFilter<"objects"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"objects"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"objects"> | Date | string | null
    last_accessed_at?: DateTimeNullableWithAggregatesFilter<"objects"> | Date | string | null
    metadata?: JsonNullableWithAggregatesFilter<"objects">
    path_tokens?: StringNullableListFilter<"objects">
    version?: StringNullableWithAggregatesFilter<"objects"> | string | null
    owner_id?: StringNullableWithAggregatesFilter<"objects"> | string | null
    user_metadata?: JsonNullableWithAggregatesFilter<"objects">
  }

  export type s3_multipart_uploadsWhereInput = {
    AND?: s3_multipart_uploadsWhereInput | s3_multipart_uploadsWhereInput[]
    OR?: s3_multipart_uploadsWhereInput[]
    NOT?: s3_multipart_uploadsWhereInput | s3_multipart_uploadsWhereInput[]
    id?: StringFilter<"s3_multipart_uploads"> | string
    in_progress_size?: BigIntFilter<"s3_multipart_uploads"> | bigint | number
    upload_signature?: StringFilter<"s3_multipart_uploads"> | string
    bucket_id?: StringFilter<"s3_multipart_uploads"> | string
    key?: StringFilter<"s3_multipart_uploads"> | string
    version?: StringFilter<"s3_multipart_uploads"> | string
    owner_id?: StringNullableFilter<"s3_multipart_uploads"> | string | null
    created_at?: DateTimeFilter<"s3_multipart_uploads"> | Date | string
    user_metadata?: JsonNullableFilter<"s3_multipart_uploads">
    buckets?: XOR<BucketsScalarRelationFilter, bucketsWhereInput>
    s3_multipart_uploads_parts?: S3_multipart_uploads_partsListRelationFilter
  }

  export type s3_multipart_uploadsOrderByWithRelationInput = {
    id?: SortOrder
    in_progress_size?: SortOrder
    upload_signature?: SortOrder
    bucket_id?: SortOrder
    key?: SortOrder
    version?: SortOrder
    owner_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    user_metadata?: SortOrderInput | SortOrder
    buckets?: bucketsOrderByWithRelationInput
    s3_multipart_uploads_parts?: s3_multipart_uploads_partsOrderByRelationAggregateInput
  }

  export type s3_multipart_uploadsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: s3_multipart_uploadsWhereInput | s3_multipart_uploadsWhereInput[]
    OR?: s3_multipart_uploadsWhereInput[]
    NOT?: s3_multipart_uploadsWhereInput | s3_multipart_uploadsWhereInput[]
    in_progress_size?: BigIntFilter<"s3_multipart_uploads"> | bigint | number
    upload_signature?: StringFilter<"s3_multipart_uploads"> | string
    bucket_id?: StringFilter<"s3_multipart_uploads"> | string
    key?: StringFilter<"s3_multipart_uploads"> | string
    version?: StringFilter<"s3_multipart_uploads"> | string
    owner_id?: StringNullableFilter<"s3_multipart_uploads"> | string | null
    created_at?: DateTimeFilter<"s3_multipart_uploads"> | Date | string
    user_metadata?: JsonNullableFilter<"s3_multipart_uploads">
    buckets?: XOR<BucketsScalarRelationFilter, bucketsWhereInput>
    s3_multipart_uploads_parts?: S3_multipart_uploads_partsListRelationFilter
  }, "id">

  export type s3_multipart_uploadsOrderByWithAggregationInput = {
    id?: SortOrder
    in_progress_size?: SortOrder
    upload_signature?: SortOrder
    bucket_id?: SortOrder
    key?: SortOrder
    version?: SortOrder
    owner_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    user_metadata?: SortOrderInput | SortOrder
    _count?: s3_multipart_uploadsCountOrderByAggregateInput
    _avg?: s3_multipart_uploadsAvgOrderByAggregateInput
    _max?: s3_multipart_uploadsMaxOrderByAggregateInput
    _min?: s3_multipart_uploadsMinOrderByAggregateInput
    _sum?: s3_multipart_uploadsSumOrderByAggregateInput
  }

  export type s3_multipart_uploadsScalarWhereWithAggregatesInput = {
    AND?: s3_multipart_uploadsScalarWhereWithAggregatesInput | s3_multipart_uploadsScalarWhereWithAggregatesInput[]
    OR?: s3_multipart_uploadsScalarWhereWithAggregatesInput[]
    NOT?: s3_multipart_uploadsScalarWhereWithAggregatesInput | s3_multipart_uploadsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"s3_multipart_uploads"> | string
    in_progress_size?: BigIntWithAggregatesFilter<"s3_multipart_uploads"> | bigint | number
    upload_signature?: StringWithAggregatesFilter<"s3_multipart_uploads"> | string
    bucket_id?: StringWithAggregatesFilter<"s3_multipart_uploads"> | string
    key?: StringWithAggregatesFilter<"s3_multipart_uploads"> | string
    version?: StringWithAggregatesFilter<"s3_multipart_uploads"> | string
    owner_id?: StringNullableWithAggregatesFilter<"s3_multipart_uploads"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"s3_multipart_uploads"> | Date | string
    user_metadata?: JsonNullableWithAggregatesFilter<"s3_multipart_uploads">
  }

  export type s3_multipart_uploads_partsWhereInput = {
    AND?: s3_multipart_uploads_partsWhereInput | s3_multipart_uploads_partsWhereInput[]
    OR?: s3_multipart_uploads_partsWhereInput[]
    NOT?: s3_multipart_uploads_partsWhereInput | s3_multipart_uploads_partsWhereInput[]
    id?: UuidFilter<"s3_multipart_uploads_parts"> | string
    upload_id?: StringFilter<"s3_multipart_uploads_parts"> | string
    size?: BigIntFilter<"s3_multipart_uploads_parts"> | bigint | number
    part_number?: IntFilter<"s3_multipart_uploads_parts"> | number
    bucket_id?: StringFilter<"s3_multipart_uploads_parts"> | string
    key?: StringFilter<"s3_multipart_uploads_parts"> | string
    etag?: StringFilter<"s3_multipart_uploads_parts"> | string
    owner_id?: StringNullableFilter<"s3_multipart_uploads_parts"> | string | null
    version?: StringFilter<"s3_multipart_uploads_parts"> | string
    created_at?: DateTimeFilter<"s3_multipart_uploads_parts"> | Date | string
    buckets?: XOR<BucketsScalarRelationFilter, bucketsWhereInput>
    s3_multipart_uploads?: XOR<S3_multipart_uploadsScalarRelationFilter, s3_multipart_uploadsWhereInput>
  }

  export type s3_multipart_uploads_partsOrderByWithRelationInput = {
    id?: SortOrder
    upload_id?: SortOrder
    size?: SortOrder
    part_number?: SortOrder
    bucket_id?: SortOrder
    key?: SortOrder
    etag?: SortOrder
    owner_id?: SortOrderInput | SortOrder
    version?: SortOrder
    created_at?: SortOrder
    buckets?: bucketsOrderByWithRelationInput
    s3_multipart_uploads?: s3_multipart_uploadsOrderByWithRelationInput
  }

  export type s3_multipart_uploads_partsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: s3_multipart_uploads_partsWhereInput | s3_multipart_uploads_partsWhereInput[]
    OR?: s3_multipart_uploads_partsWhereInput[]
    NOT?: s3_multipart_uploads_partsWhereInput | s3_multipart_uploads_partsWhereInput[]
    upload_id?: StringFilter<"s3_multipart_uploads_parts"> | string
    size?: BigIntFilter<"s3_multipart_uploads_parts"> | bigint | number
    part_number?: IntFilter<"s3_multipart_uploads_parts"> | number
    bucket_id?: StringFilter<"s3_multipart_uploads_parts"> | string
    key?: StringFilter<"s3_multipart_uploads_parts"> | string
    etag?: StringFilter<"s3_multipart_uploads_parts"> | string
    owner_id?: StringNullableFilter<"s3_multipart_uploads_parts"> | string | null
    version?: StringFilter<"s3_multipart_uploads_parts"> | string
    created_at?: DateTimeFilter<"s3_multipart_uploads_parts"> | Date | string
    buckets?: XOR<BucketsScalarRelationFilter, bucketsWhereInput>
    s3_multipart_uploads?: XOR<S3_multipart_uploadsScalarRelationFilter, s3_multipart_uploadsWhereInput>
  }, "id">

  export type s3_multipart_uploads_partsOrderByWithAggregationInput = {
    id?: SortOrder
    upload_id?: SortOrder
    size?: SortOrder
    part_number?: SortOrder
    bucket_id?: SortOrder
    key?: SortOrder
    etag?: SortOrder
    owner_id?: SortOrderInput | SortOrder
    version?: SortOrder
    created_at?: SortOrder
    _count?: s3_multipart_uploads_partsCountOrderByAggregateInput
    _avg?: s3_multipart_uploads_partsAvgOrderByAggregateInput
    _max?: s3_multipart_uploads_partsMaxOrderByAggregateInput
    _min?: s3_multipart_uploads_partsMinOrderByAggregateInput
    _sum?: s3_multipart_uploads_partsSumOrderByAggregateInput
  }

  export type s3_multipart_uploads_partsScalarWhereWithAggregatesInput = {
    AND?: s3_multipart_uploads_partsScalarWhereWithAggregatesInput | s3_multipart_uploads_partsScalarWhereWithAggregatesInput[]
    OR?: s3_multipart_uploads_partsScalarWhereWithAggregatesInput[]
    NOT?: s3_multipart_uploads_partsScalarWhereWithAggregatesInput | s3_multipart_uploads_partsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"s3_multipart_uploads_parts"> | string
    upload_id?: StringWithAggregatesFilter<"s3_multipart_uploads_parts"> | string
    size?: BigIntWithAggregatesFilter<"s3_multipart_uploads_parts"> | bigint | number
    part_number?: IntWithAggregatesFilter<"s3_multipart_uploads_parts"> | number
    bucket_id?: StringWithAggregatesFilter<"s3_multipart_uploads_parts"> | string
    key?: StringWithAggregatesFilter<"s3_multipart_uploads_parts"> | string
    etag?: StringWithAggregatesFilter<"s3_multipart_uploads_parts"> | string
    owner_id?: StringNullableWithAggregatesFilter<"s3_multipart_uploads_parts"> | string | null
    version?: StringWithAggregatesFilter<"s3_multipart_uploads_parts"> | string
    created_at?: DateTimeWithAggregatesFilter<"s3_multipart_uploads_parts"> | Date | string
  }

  export type UserProfilesCreateInput = {
    id: string
    username?: string | null
    fullName?: string | null
    email?: string | null
    phone?: string | null
    avatarUrl?: string | null
    website?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    UserSoftware?: UserSoftwareCreateNestedManyWithoutGrantedByInput
    Software?: SoftwareCreateNestedManyWithoutAssignedInput
  }

  export type UserProfilesUncheckedCreateInput = {
    id: string
    username?: string | null
    fullName?: string | null
    email?: string | null
    phone?: string | null
    avatarUrl?: string | null
    website?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    UserSoftware?: UserSoftwareUncheckedCreateNestedManyWithoutGrantedByInput
    Software?: SoftwareUncheckedCreateNestedManyWithoutAssignedInput
  }

  export type UserProfilesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UserSoftware?: UserSoftwareUpdateManyWithoutGrantedByNestedInput
    Software?: SoftwareUpdateManyWithoutAssignedNestedInput
  }

  export type UserProfilesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UserSoftware?: UserSoftwareUncheckedUpdateManyWithoutGrantedByNestedInput
    Software?: SoftwareUncheckedUpdateManyWithoutAssignedNestedInput
  }

  export type UserProfilesCreateManyInput = {
    id: string
    username?: string | null
    fullName?: string | null
    email?: string | null
    phone?: string | null
    avatarUrl?: string | null
    website?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserProfilesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserProfilesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: string
    email: string
    name: string
    jobTitle?: string | null
    location?: string | null
    personalEmail?: string | null
    type?: string | null
    status?: string
    SharedAccount?: SharedAccountCreateNestedManyWithoutUpdatedByInput
    softwareNotes?: SoftwareCreateNestedManyWithoutNotesLastUpdatedByInput
    Software?: SoftwareCreateNestedManyWithoutUpdatedByInput
    reportsTo?: UserCreateNestedOneWithoutSubordinatesInput
    subordinates?: UserCreateNestedManyWithoutReportsToInput
    histories?: UserHistoryCreateNestedManyWithoutUserInput
    software?: UserSoftwareCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: string
    email: string
    name: string
    jobTitle?: string | null
    location?: string | null
    personalEmail?: string | null
    reportsToId?: string | null
    type?: string | null
    status?: string
    SharedAccount?: SharedAccountUncheckedCreateNestedManyWithoutUpdatedByInput
    softwareNotes?: SoftwareUncheckedCreateNestedManyWithoutNotesLastUpdatedByInput
    Software?: SoftwareUncheckedCreateNestedManyWithoutUpdatedByInput
    subordinates?: UserUncheckedCreateNestedManyWithoutReportsToInput
    histories?: UserHistoryUncheckedCreateNestedManyWithoutUserInput
    software?: UserSoftwareUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    personalEmail?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    SharedAccount?: SharedAccountUpdateManyWithoutUpdatedByNestedInput
    softwareNotes?: SoftwareUpdateManyWithoutNotesLastUpdatedByNestedInput
    Software?: SoftwareUpdateManyWithoutUpdatedByNestedInput
    reportsTo?: UserUpdateOneWithoutSubordinatesNestedInput
    subordinates?: UserUpdateManyWithoutReportsToNestedInput
    histories?: UserHistoryUpdateManyWithoutUserNestedInput
    software?: UserSoftwareUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    personalEmail?: NullableStringFieldUpdateOperationsInput | string | null
    reportsToId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    SharedAccount?: SharedAccountUncheckedUpdateManyWithoutUpdatedByNestedInput
    softwareNotes?: SoftwareUncheckedUpdateManyWithoutNotesLastUpdatedByNestedInput
    Software?: SoftwareUncheckedUpdateManyWithoutUpdatedByNestedInput
    subordinates?: UserUncheckedUpdateManyWithoutReportsToNestedInput
    histories?: UserHistoryUncheckedUpdateManyWithoutUserNestedInput
    software?: UserSoftwareUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: string
    email: string
    name: string
    jobTitle?: string | null
    location?: string | null
    personalEmail?: string | null
    reportsToId?: string | null
    type?: string | null
    status?: string
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    personalEmail?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    personalEmail?: NullableStringFieldUpdateOperationsInput | string | null
    reportsToId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
  }

  export type UserHistoryCreateInput = {
    id?: string
    action: string
    field: string
    newValue?: string | null
    oldValue?: string | null
    updatedBy: string
    updatedOn?: Date | string
    user: UserCreateNestedOneWithoutHistoriesInput
  }

  export type UserHistoryUncheckedCreateInput = {
    id?: string
    userId: string
    action: string
    field: string
    newValue?: string | null
    oldValue?: string | null
    updatedBy: string
    updatedOn?: Date | string
  }

  export type UserHistoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: StringFieldUpdateOperationsInput | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutHistoriesNestedInput
  }

  export type UserHistoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: StringFieldUpdateOperationsInput | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserHistoryCreateManyInput = {
    id?: string
    userId: string
    action: string
    field: string
    newValue?: string | null
    oldValue?: string | null
    updatedBy: string
    updatedOn?: Date | string
  }

  export type UserHistoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: StringFieldUpdateOperationsInput | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserHistoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: StringFieldUpdateOperationsInput | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountRepCreateInput = {
    id?: string
    email: string
    name: string
    phone: string
    software: SoftwareCreateNestedOneWithoutAccountRepsInput
  }

  export type AccountRepUncheckedCreateInput = {
    id?: string
    softwareId: string
    email: string
    name: string
    phone: string
  }

  export type AccountRepUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    software?: SoftwareUpdateOneRequiredWithoutAccountRepsNestedInput
  }

  export type AccountRepUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    softwareId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
  }

  export type AccountRepCreateManyInput = {
    id?: string
    softwareId: string
    email: string
    name: string
    phone: string
  }

  export type AccountRepUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
  }

  export type AccountRepUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    softwareId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
  }

  export type SoftwareCreateInput = {
    id?: string
    name: string
    description?: string | null
    category?: string | null
    status?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userCount?: number | null
    notes?: string | null
    accountRep?: string | null
    amount?: number | null
    currency?: string | null
    licenseType?: string | null
    paymentDueDate?: Date | string | null
    paymentFrequency?: $Enums.PaymentFrequency
    paymentMethod?: $Enums.PaymentMethod
    pricePerUser?: number | null
    website?: string | null
    accountReps?: AccountRepCreateNestedManyWithoutSoftwareInput
    notesLastUpdatedBy: UserCreateNestedOneWithoutSoftwareNotesInput
    updatedBy?: UserCreateNestedOneWithoutSoftwareInput
    SoftwareAccess?: SoftwareAccessCreateNestedManyWithoutSoftwareInput
    histories?: SoftwareHistoryCreateNestedManyWithoutSoftwareInput
    UserSoftware?: UserSoftwareCreateNestedManyWithoutSoftwareInput
    Assigned?: UserProfilesCreateNestedManyWithoutSoftwareInput
  }

  export type SoftwareUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    category?: string | null
    status?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userCount?: number | null
    notes?: string | null
    notesLastUpdatedById: string
    accountRep?: string | null
    amount?: number | null
    currency?: string | null
    licenseType?: string | null
    paymentDueDate?: Date | string | null
    paymentFrequency?: $Enums.PaymentFrequency
    paymentMethod?: $Enums.PaymentMethod
    pricePerUser?: number | null
    updatedById?: string | null
    website?: string | null
    accountReps?: AccountRepUncheckedCreateNestedManyWithoutSoftwareInput
    SoftwareAccess?: SoftwareAccessUncheckedCreateNestedManyWithoutSoftwareInput
    histories?: SoftwareHistoryUncheckedCreateNestedManyWithoutSoftwareInput
    UserSoftware?: UserSoftwareUncheckedCreateNestedManyWithoutSoftwareInput
    Assigned?: UserProfilesUncheckedCreateNestedManyWithoutSoftwareInput
  }

  export type SoftwareUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    accountRep?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    paymentDueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentFrequency?: EnumPaymentFrequencyFieldUpdateOperationsInput | $Enums.PaymentFrequency
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    pricePerUser?: NullableFloatFieldUpdateOperationsInput | number | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    accountReps?: AccountRepUpdateManyWithoutSoftwareNestedInput
    notesLastUpdatedBy?: UserUpdateOneRequiredWithoutSoftwareNotesNestedInput
    updatedBy?: UserUpdateOneWithoutSoftwareNestedInput
    SoftwareAccess?: SoftwareAccessUpdateManyWithoutSoftwareNestedInput
    histories?: SoftwareHistoryUpdateManyWithoutSoftwareNestedInput
    UserSoftware?: UserSoftwareUpdateManyWithoutSoftwareNestedInput
    Assigned?: UserProfilesUpdateManyWithoutSoftwareNestedInput
  }

  export type SoftwareUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    notesLastUpdatedById?: StringFieldUpdateOperationsInput | string
    accountRep?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    paymentDueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentFrequency?: EnumPaymentFrequencyFieldUpdateOperationsInput | $Enums.PaymentFrequency
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    pricePerUser?: NullableFloatFieldUpdateOperationsInput | number | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    accountReps?: AccountRepUncheckedUpdateManyWithoutSoftwareNestedInput
    SoftwareAccess?: SoftwareAccessUncheckedUpdateManyWithoutSoftwareNestedInput
    histories?: SoftwareHistoryUncheckedUpdateManyWithoutSoftwareNestedInput
    UserSoftware?: UserSoftwareUncheckedUpdateManyWithoutSoftwareNestedInput
    Assigned?: UserProfilesUncheckedUpdateManyWithoutSoftwareNestedInput
  }

  export type SoftwareCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    category?: string | null
    status?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userCount?: number | null
    notes?: string | null
    notesLastUpdatedById: string
    accountRep?: string | null
    amount?: number | null
    currency?: string | null
    licenseType?: string | null
    paymentDueDate?: Date | string | null
    paymentFrequency?: $Enums.PaymentFrequency
    paymentMethod?: $Enums.PaymentMethod
    pricePerUser?: number | null
    updatedById?: string | null
    website?: string | null
  }

  export type SoftwareUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    accountRep?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    paymentDueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentFrequency?: EnumPaymentFrequencyFieldUpdateOperationsInput | $Enums.PaymentFrequency
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    pricePerUser?: NullableFloatFieldUpdateOperationsInput | number | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SoftwareUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    notesLastUpdatedById?: StringFieldUpdateOperationsInput | string
    accountRep?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    paymentDueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentFrequency?: EnumPaymentFrequencyFieldUpdateOperationsInput | $Enums.PaymentFrequency
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    pricePerUser?: NullableFloatFieldUpdateOperationsInput | number | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SoftwareHistoryCreateInput = {
    id?: string
    action: string
    field: string
    newValue?: string | null
    oldValue?: string | null
    updatedBy: string
    updatedOn?: Date | string
    software: SoftwareCreateNestedOneWithoutHistoriesInput
  }

  export type SoftwareHistoryUncheckedCreateInput = {
    id?: string
    softwareId: string
    action: string
    field: string
    newValue?: string | null
    oldValue?: string | null
    updatedBy: string
    updatedOn?: Date | string
  }

  export type SoftwareHistoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: StringFieldUpdateOperationsInput | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    software?: SoftwareUpdateOneRequiredWithoutHistoriesNestedInput
  }

  export type SoftwareHistoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    softwareId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: StringFieldUpdateOperationsInput | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SoftwareHistoryCreateManyInput = {
    id?: string
    softwareId: string
    action: string
    field: string
    newValue?: string | null
    oldValue?: string | null
    updatedBy: string
    updatedOn?: Date | string
  }

  export type SoftwareHistoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: StringFieldUpdateOperationsInput | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SoftwareHistoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    softwareId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: StringFieldUpdateOperationsInput | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSoftwareCreateInput = {
    id?: string
    accessLevel: string
    role: string
    assignedAt?: Date | string
    grantedBy: UserProfilesCreateNestedOneWithoutUserSoftwareInput
    software: SoftwareCreateNestedOneWithoutUserSoftwareInput
    user: UserCreateNestedOneWithoutSoftwareInput
  }

  export type UserSoftwareUncheckedCreateInput = {
    id?: string
    userId: string
    softwareId: string
    grantedById: string
    accessLevel: string
    role: string
    assignedAt?: Date | string
  }

  export type UserSoftwareUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    accessLevel?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    grantedBy?: UserProfilesUpdateOneRequiredWithoutUserSoftwareNestedInput
    software?: SoftwareUpdateOneRequiredWithoutUserSoftwareNestedInput
    user?: UserUpdateOneRequiredWithoutSoftwareNestedInput
  }

  export type UserSoftwareUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    softwareId?: StringFieldUpdateOperationsInput | string
    grantedById?: StringFieldUpdateOperationsInput | string
    accessLevel?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSoftwareCreateManyInput = {
    id?: string
    userId: string
    softwareId: string
    grantedById: string
    accessLevel: string
    role: string
    assignedAt?: Date | string
  }

  export type UserSoftwareUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    accessLevel?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSoftwareUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    softwareId?: StringFieldUpdateOperationsInput | string
    grantedById?: StringFieldUpdateOperationsInput | string
    accessLevel?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SharedAccountCreateInput = {
    id?: string
    email: string
    name: string
    normalizedName: string
    location?: string | null
    type?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    userCount?: number
    updatedBy: UserCreateNestedOneWithoutSharedAccountInput
    histories?: SharedAccountHistoryCreateNestedManyWithoutSharedAccountInput
    softwareAccesses?: SoftwareAccessCreateNestedManyWithoutSharedAccountInput
  }

  export type SharedAccountUncheckedCreateInput = {
    id?: string
    email: string
    name: string
    normalizedName: string
    location?: string | null
    type?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    updatedById: string
    userCount?: number
    histories?: SharedAccountHistoryUncheckedCreateNestedManyWithoutSharedAccountInput
    softwareAccesses?: SoftwareAccessUncheckedCreateNestedManyWithoutSharedAccountInput
  }

  export type SharedAccountUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    normalizedName?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: IntFieldUpdateOperationsInput | number
    updatedBy?: UserUpdateOneRequiredWithoutSharedAccountNestedInput
    histories?: SharedAccountHistoryUpdateManyWithoutSharedAccountNestedInput
    softwareAccesses?: SoftwareAccessUpdateManyWithoutSharedAccountNestedInput
  }

  export type SharedAccountUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    normalizedName?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedById?: StringFieldUpdateOperationsInput | string
    userCount?: IntFieldUpdateOperationsInput | number
    histories?: SharedAccountHistoryUncheckedUpdateManyWithoutSharedAccountNestedInput
    softwareAccesses?: SoftwareAccessUncheckedUpdateManyWithoutSharedAccountNestedInput
  }

  export type SharedAccountCreateManyInput = {
    id?: string
    email: string
    name: string
    normalizedName: string
    location?: string | null
    type?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    updatedById: string
    userCount?: number
  }

  export type SharedAccountUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    normalizedName?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: IntFieldUpdateOperationsInput | number
  }

  export type SharedAccountUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    normalizedName?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedById?: StringFieldUpdateOperationsInput | string
    userCount?: IntFieldUpdateOperationsInput | number
  }

  export type SharedAccountHistoryCreateInput = {
    id?: string
    action: string
    field: string
    newValue?: string | null
    oldValue?: string | null
    updatedBy: string
    updatedOn?: Date | string
    sharedAccount: SharedAccountCreateNestedOneWithoutHistoriesInput
  }

  export type SharedAccountHistoryUncheckedCreateInput = {
    id?: string
    sharedAccountId: string
    action: string
    field: string
    newValue?: string | null
    oldValue?: string | null
    updatedBy: string
    updatedOn?: Date | string
  }

  export type SharedAccountHistoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: StringFieldUpdateOperationsInput | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    sharedAccount?: SharedAccountUpdateOneRequiredWithoutHistoriesNestedInput
  }

  export type SharedAccountHistoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sharedAccountId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: StringFieldUpdateOperationsInput | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SharedAccountHistoryCreateManyInput = {
    id?: string
    sharedAccountId: string
    action: string
    field: string
    newValue?: string | null
    oldValue?: string | null
    updatedBy: string
    updatedOn?: Date | string
  }

  export type SharedAccountHistoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: StringFieldUpdateOperationsInput | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SharedAccountHistoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sharedAccountId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: StringFieldUpdateOperationsInput | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SoftwareAccessCreateInput = {
    id?: string
    access: boolean
    lastEdited?: Date | string
    lastEditedBy: string
    permissions?: SoftwareAccessCreatepermissionsInput | string[]
    uid: string
    sharedAccount: SharedAccountCreateNestedOneWithoutSoftwareAccessesInput
    software: SoftwareCreateNestedOneWithoutSoftwareAccessInput
  }

  export type SoftwareAccessUncheckedCreateInput = {
    id?: string
    sharedAccountId: string
    softwareId: string
    access: boolean
    lastEdited?: Date | string
    lastEditedBy: string
    permissions?: SoftwareAccessCreatepermissionsInput | string[]
    uid: string
  }

  export type SoftwareAccessUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    access?: BoolFieldUpdateOperationsInput | boolean
    lastEdited?: DateTimeFieldUpdateOperationsInput | Date | string
    lastEditedBy?: StringFieldUpdateOperationsInput | string
    permissions?: SoftwareAccessUpdatepermissionsInput | string[]
    uid?: StringFieldUpdateOperationsInput | string
    sharedAccount?: SharedAccountUpdateOneRequiredWithoutSoftwareAccessesNestedInput
    software?: SoftwareUpdateOneRequiredWithoutSoftwareAccessNestedInput
  }

  export type SoftwareAccessUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sharedAccountId?: StringFieldUpdateOperationsInput | string
    softwareId?: StringFieldUpdateOperationsInput | string
    access?: BoolFieldUpdateOperationsInput | boolean
    lastEdited?: DateTimeFieldUpdateOperationsInput | Date | string
    lastEditedBy?: StringFieldUpdateOperationsInput | string
    permissions?: SoftwareAccessUpdatepermissionsInput | string[]
    uid?: StringFieldUpdateOperationsInput | string
  }

  export type SoftwareAccessCreateManyInput = {
    id?: string
    sharedAccountId: string
    softwareId: string
    access: boolean
    lastEdited?: Date | string
    lastEditedBy: string
    permissions?: SoftwareAccessCreatepermissionsInput | string[]
    uid: string
  }

  export type SoftwareAccessUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    access?: BoolFieldUpdateOperationsInput | boolean
    lastEdited?: DateTimeFieldUpdateOperationsInput | Date | string
    lastEditedBy?: StringFieldUpdateOperationsInput | string
    permissions?: SoftwareAccessUpdatepermissionsInput | string[]
    uid?: StringFieldUpdateOperationsInput | string
  }

  export type SoftwareAccessUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sharedAccountId?: StringFieldUpdateOperationsInput | string
    softwareId?: StringFieldUpdateOperationsInput | string
    access?: BoolFieldUpdateOperationsInput | boolean
    lastEdited?: DateTimeFieldUpdateOperationsInput | Date | string
    lastEditedBy?: StringFieldUpdateOperationsInput | string
    permissions?: SoftwareAccessUpdatepermissionsInput | string[]
    uid?: StringFieldUpdateOperationsInput | string
  }

  export type audit_log_entriesCreateInput = {
    instance_id?: string | null
    id: string
    payload?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    ip_address?: string
  }

  export type audit_log_entriesUncheckedCreateInput = {
    instance_id?: string | null
    id: string
    payload?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    ip_address?: string
  }

  export type audit_log_entriesUpdateInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    payload?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
  }

  export type audit_log_entriesUncheckedUpdateInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    payload?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
  }

  export type audit_log_entriesCreateManyInput = {
    instance_id?: string | null
    id: string
    payload?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    ip_address?: string
  }

  export type audit_log_entriesUpdateManyMutationInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    payload?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
  }

  export type audit_log_entriesUncheckedUpdateManyInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    payload?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
  }

  export type flow_stateCreateInput = {
    id: string
    user_id?: string | null
    auth_code: string
    code_challenge_method: $Enums.code_challenge_method
    code_challenge: string
    provider_type: string
    provider_access_token?: string | null
    provider_refresh_token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    authentication_method: string
    auth_code_issued_at?: Date | string | null
    saml_relay_states?: saml_relay_statesCreateNestedManyWithoutFlow_stateInput
  }

  export type flow_stateUncheckedCreateInput = {
    id: string
    user_id?: string | null
    auth_code: string
    code_challenge_method: $Enums.code_challenge_method
    code_challenge: string
    provider_type: string
    provider_access_token?: string | null
    provider_refresh_token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    authentication_method: string
    auth_code_issued_at?: Date | string | null
    saml_relay_states?: saml_relay_statesUncheckedCreateNestedManyWithoutFlow_stateInput
  }

  export type flow_stateUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    auth_code?: StringFieldUpdateOperationsInput | string
    code_challenge_method?: Enumcode_challenge_methodFieldUpdateOperationsInput | $Enums.code_challenge_method
    code_challenge?: StringFieldUpdateOperationsInput | string
    provider_type?: StringFieldUpdateOperationsInput | string
    provider_access_token?: NullableStringFieldUpdateOperationsInput | string | null
    provider_refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authentication_method?: StringFieldUpdateOperationsInput | string
    auth_code_issued_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_relay_states?: saml_relay_statesUpdateManyWithoutFlow_stateNestedInput
  }

  export type flow_stateUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    auth_code?: StringFieldUpdateOperationsInput | string
    code_challenge_method?: Enumcode_challenge_methodFieldUpdateOperationsInput | $Enums.code_challenge_method
    code_challenge?: StringFieldUpdateOperationsInput | string
    provider_type?: StringFieldUpdateOperationsInput | string
    provider_access_token?: NullableStringFieldUpdateOperationsInput | string | null
    provider_refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authentication_method?: StringFieldUpdateOperationsInput | string
    auth_code_issued_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_relay_states?: saml_relay_statesUncheckedUpdateManyWithoutFlow_stateNestedInput
  }

  export type flow_stateCreateManyInput = {
    id: string
    user_id?: string | null
    auth_code: string
    code_challenge_method: $Enums.code_challenge_method
    code_challenge: string
    provider_type: string
    provider_access_token?: string | null
    provider_refresh_token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    authentication_method: string
    auth_code_issued_at?: Date | string | null
  }

  export type flow_stateUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    auth_code?: StringFieldUpdateOperationsInput | string
    code_challenge_method?: Enumcode_challenge_methodFieldUpdateOperationsInput | $Enums.code_challenge_method
    code_challenge?: StringFieldUpdateOperationsInput | string
    provider_type?: StringFieldUpdateOperationsInput | string
    provider_access_token?: NullableStringFieldUpdateOperationsInput | string | null
    provider_refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authentication_method?: StringFieldUpdateOperationsInput | string
    auth_code_issued_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type flow_stateUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    auth_code?: StringFieldUpdateOperationsInput | string
    code_challenge_method?: Enumcode_challenge_methodFieldUpdateOperationsInput | $Enums.code_challenge_method
    code_challenge?: StringFieldUpdateOperationsInput | string
    provider_type?: StringFieldUpdateOperationsInput | string
    provider_access_token?: NullableStringFieldUpdateOperationsInput | string | null
    provider_refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authentication_method?: StringFieldUpdateOperationsInput | string
    auth_code_issued_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type identitiesCreateInput = {
    provider_id: string
    identity_data: JsonNullValueInput | InputJsonValue
    provider: string
    last_sign_in_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    email?: string | null
    id?: string
    users: usersCreateNestedOneWithoutIdentitiesInput
  }

  export type identitiesUncheckedCreateInput = {
    provider_id: string
    user_id: string
    identity_data: JsonNullValueInput | InputJsonValue
    provider: string
    last_sign_in_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    email?: string | null
    id?: string
  }

  export type identitiesUpdateInput = {
    provider_id?: StringFieldUpdateOperationsInput | string
    identity_data?: JsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    users?: usersUpdateOneRequiredWithoutIdentitiesNestedInput
  }

  export type identitiesUncheckedUpdateInput = {
    provider_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    identity_data?: JsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
  }

  export type identitiesCreateManyInput = {
    provider_id: string
    user_id: string
    identity_data: JsonNullValueInput | InputJsonValue
    provider: string
    last_sign_in_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    email?: string | null
    id?: string
  }

  export type identitiesUpdateManyMutationInput = {
    provider_id?: StringFieldUpdateOperationsInput | string
    identity_data?: JsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
  }

  export type identitiesUncheckedUpdateManyInput = {
    provider_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    identity_data?: JsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
  }

  export type instancesCreateInput = {
    id: string
    uuid?: string | null
    raw_base_config?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type instancesUncheckedCreateInput = {
    id: string
    uuid?: string | null
    raw_base_config?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type instancesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    uuid?: NullableStringFieldUpdateOperationsInput | string | null
    raw_base_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type instancesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    uuid?: NullableStringFieldUpdateOperationsInput | string | null
    raw_base_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type instancesCreateManyInput = {
    id: string
    uuid?: string | null
    raw_base_config?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type instancesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    uuid?: NullableStringFieldUpdateOperationsInput | string | null
    raw_base_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type instancesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    uuid?: NullableStringFieldUpdateOperationsInput | string | null
    raw_base_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type mfa_amr_claimsCreateInput = {
    created_at: Date | string
    updated_at: Date | string
    authentication_method: string
    id: string
    sessions: sessionsCreateNestedOneWithoutMfa_amr_claimsInput
  }

  export type mfa_amr_claimsUncheckedCreateInput = {
    session_id: string
    created_at: Date | string
    updated_at: Date | string
    authentication_method: string
    id: string
  }

  export type mfa_amr_claimsUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    authentication_method?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
    sessions?: sessionsUpdateOneRequiredWithoutMfa_amr_claimsNestedInput
  }

  export type mfa_amr_claimsUncheckedUpdateInput = {
    session_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    authentication_method?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
  }

  export type mfa_amr_claimsCreateManyInput = {
    session_id: string
    created_at: Date | string
    updated_at: Date | string
    authentication_method: string
    id: string
  }

  export type mfa_amr_claimsUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    authentication_method?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
  }

  export type mfa_amr_claimsUncheckedUpdateManyInput = {
    session_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    authentication_method?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
  }

  export type mfa_challengesCreateInput = {
    id: string
    created_at: Date | string
    verified_at?: Date | string | null
    ip_address: string
    otp_code?: string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
    mfa_factors: mfa_factorsCreateNestedOneWithoutMfa_challengesInput
  }

  export type mfa_challengesUncheckedCreateInput = {
    id: string
    factor_id: string
    created_at: Date | string
    verified_at?: Date | string | null
    ip_address: string
    otp_code?: string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type mfa_challengesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
    mfa_factors?: mfa_factorsUpdateOneRequiredWithoutMfa_challengesNestedInput
  }

  export type mfa_challengesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    factor_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type mfa_challengesCreateManyInput = {
    id: string
    factor_id: string
    created_at: Date | string
    verified_at?: Date | string | null
    ip_address: string
    otp_code?: string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type mfa_challengesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type mfa_challengesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    factor_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type mfa_factorsCreateInput = {
    id: string
    friendly_name?: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date | string
    updated_at: Date | string
    secret?: string | null
    phone?: string | null
    last_challenged_at?: Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: string | null
    mfa_challenges?: mfa_challengesCreateNestedManyWithoutMfa_factorsInput
    users: usersCreateNestedOneWithoutMfa_factorsInput
  }

  export type mfa_factorsUncheckedCreateInput = {
    id: string
    user_id: string
    friendly_name?: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date | string
    updated_at: Date | string
    secret?: string | null
    phone?: string | null
    last_challenged_at?: Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: string | null
    mfa_challenges?: mfa_challengesUncheckedCreateNestedManyWithoutMfa_factorsInput
  }

  export type mfa_factorsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    last_challenged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_challenges?: mfa_challengesUpdateManyWithoutMfa_factorsNestedInput
    users?: usersUpdateOneRequiredWithoutMfa_factorsNestedInput
  }

  export type mfa_factorsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    last_challenged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_challenges?: mfa_challengesUncheckedUpdateManyWithoutMfa_factorsNestedInput
  }

  export type mfa_factorsCreateManyInput = {
    id: string
    user_id: string
    friendly_name?: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date | string
    updated_at: Date | string
    secret?: string | null
    phone?: string | null
    last_challenged_at?: Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: string | null
  }

  export type mfa_factorsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    last_challenged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type mfa_factorsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    last_challenged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type one_time_tokensCreateInput = {
    id: string
    token_type: $Enums.one_time_token_type
    token_hash: string
    relates_to: string
    created_at?: Date | string
    updated_at?: Date | string
    users: usersCreateNestedOneWithoutOne_time_tokensInput
  }

  export type one_time_tokensUncheckedCreateInput = {
    id: string
    user_id: string
    token_type: $Enums.one_time_token_type
    token_hash: string
    relates_to: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type one_time_tokensUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token_type?: Enumone_time_token_typeFieldUpdateOperationsInput | $Enums.one_time_token_type
    token_hash?: StringFieldUpdateOperationsInput | string
    relates_to?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneRequiredWithoutOne_time_tokensNestedInput
  }

  export type one_time_tokensUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    token_type?: Enumone_time_token_typeFieldUpdateOperationsInput | $Enums.one_time_token_type
    token_hash?: StringFieldUpdateOperationsInput | string
    relates_to?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type one_time_tokensCreateManyInput = {
    id: string
    user_id: string
    token_type: $Enums.one_time_token_type
    token_hash: string
    relates_to: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type one_time_tokensUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    token_type?: Enumone_time_token_typeFieldUpdateOperationsInput | $Enums.one_time_token_type
    token_hash?: StringFieldUpdateOperationsInput | string
    relates_to?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type one_time_tokensUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    token_type?: Enumone_time_token_typeFieldUpdateOperationsInput | $Enums.one_time_token_type
    token_hash?: StringFieldUpdateOperationsInput | string
    relates_to?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type refresh_tokensCreateInput = {
    instance_id?: string | null
    id?: bigint | number
    token?: string | null
    user_id?: string | null
    revoked?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    parent?: string | null
    sessions?: sessionsCreateNestedOneWithoutRefresh_tokensInput
  }

  export type refresh_tokensUncheckedCreateInput = {
    instance_id?: string | null
    id?: bigint | number
    token?: string | null
    user_id?: string | null
    revoked?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    parent?: string | null
    session_id?: string | null
  }

  export type refresh_tokensUpdateInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent?: NullableStringFieldUpdateOperationsInput | string | null
    sessions?: sessionsUpdateOneWithoutRefresh_tokensNestedInput
  }

  export type refresh_tokensUncheckedUpdateInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent?: NullableStringFieldUpdateOperationsInput | string | null
    session_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type refresh_tokensCreateManyInput = {
    instance_id?: string | null
    id?: bigint | number
    token?: string | null
    user_id?: string | null
    revoked?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    parent?: string | null
    session_id?: string | null
  }

  export type refresh_tokensUpdateManyMutationInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type refresh_tokensUncheckedUpdateManyInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent?: NullableStringFieldUpdateOperationsInput | string | null
    session_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type saml_providersCreateInput = {
    id: string
    entity_id: string
    metadata_xml: string
    metadata_url?: string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    name_id_format?: string | null
    sso_providers: sso_providersCreateNestedOneWithoutSaml_providersInput
  }

  export type saml_providersUncheckedCreateInput = {
    id: string
    sso_provider_id: string
    entity_id: string
    metadata_xml: string
    metadata_url?: string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    name_id_format?: string | null
  }

  export type saml_providersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    metadata_xml?: StringFieldUpdateOperationsInput | string
    metadata_url?: NullableStringFieldUpdateOperationsInput | string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_id_format?: NullableStringFieldUpdateOperationsInput | string | null
    sso_providers?: sso_providersUpdateOneRequiredWithoutSaml_providersNestedInput
  }

  export type saml_providersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sso_provider_id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    metadata_xml?: StringFieldUpdateOperationsInput | string
    metadata_url?: NullableStringFieldUpdateOperationsInput | string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_id_format?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type saml_providersCreateManyInput = {
    id: string
    sso_provider_id: string
    entity_id: string
    metadata_xml: string
    metadata_url?: string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    name_id_format?: string | null
  }

  export type saml_providersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    metadata_xml?: StringFieldUpdateOperationsInput | string
    metadata_url?: NullableStringFieldUpdateOperationsInput | string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_id_format?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type saml_providersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sso_provider_id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    metadata_xml?: StringFieldUpdateOperationsInput | string
    metadata_url?: NullableStringFieldUpdateOperationsInput | string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_id_format?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type saml_relay_statesCreateInput = {
    id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    flow_state?: flow_stateCreateNestedOneWithoutSaml_relay_statesInput
    sso_providers: sso_providersCreateNestedOneWithoutSaml_relay_statesInput
  }

  export type saml_relay_statesUncheckedCreateInput = {
    id: string
    sso_provider_id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    flow_state_id?: string | null
  }

  export type saml_relay_statesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    flow_state?: flow_stateUpdateOneWithoutSaml_relay_statesNestedInput
    sso_providers?: sso_providersUpdateOneRequiredWithoutSaml_relay_statesNestedInput
  }

  export type saml_relay_statesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sso_provider_id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    flow_state_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type saml_relay_statesCreateManyInput = {
    id: string
    sso_provider_id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    flow_state_id?: string | null
  }

  export type saml_relay_statesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type saml_relay_statesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sso_provider_id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    flow_state_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type schema_migrationsCreateInput = {
    version: string
  }

  export type schema_migrationsUncheckedCreateInput = {
    version: string
  }

  export type schema_migrationsUpdateInput = {
    version?: StringFieldUpdateOperationsInput | string
  }

  export type schema_migrationsUncheckedUpdateInput = {
    version?: StringFieldUpdateOperationsInput | string
  }

  export type schema_migrationsCreateManyInput = {
    version: string
  }

  export type schema_migrationsUpdateManyMutationInput = {
    version?: StringFieldUpdateOperationsInput | string
  }

  export type schema_migrationsUncheckedUpdateManyInput = {
    version?: StringFieldUpdateOperationsInput | string
  }

  export type sessionsCreateInput = {
    id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
    mfa_amr_claims?: mfa_amr_claimsCreateNestedManyWithoutSessionsInput
    refresh_tokens?: refresh_tokensCreateNestedManyWithoutSessionsInput
    users: usersCreateNestedOneWithoutSessionsInput
  }

  export type sessionsUncheckedCreateInput = {
    id: string
    user_id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
    mfa_amr_claims?: mfa_amr_claimsUncheckedCreateNestedManyWithoutSessionsInput
    refresh_tokens?: refresh_tokensUncheckedCreateNestedManyWithoutSessionsInput
  }

  export type sessionsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_amr_claims?: mfa_amr_claimsUpdateManyWithoutSessionsNestedInput
    refresh_tokens?: refresh_tokensUpdateManyWithoutSessionsNestedInput
    users?: usersUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type sessionsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_amr_claims?: mfa_amr_claimsUncheckedUpdateManyWithoutSessionsNestedInput
    refresh_tokens?: refresh_tokensUncheckedUpdateManyWithoutSessionsNestedInput
  }

  export type sessionsCreateManyInput = {
    id: string
    user_id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
  }

  export type sessionsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sessionsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sso_domainsCreateInput = {
    id: string
    domain: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    sso_providers: sso_providersCreateNestedOneWithoutSso_domainsInput
  }

  export type sso_domainsUncheckedCreateInput = {
    id: string
    sso_provider_id: string
    domain: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type sso_domainsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sso_providers?: sso_providersUpdateOneRequiredWithoutSso_domainsNestedInput
  }

  export type sso_domainsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sso_provider_id?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sso_domainsCreateManyInput = {
    id: string
    sso_provider_id: string
    domain: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type sso_domainsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sso_domainsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sso_provider_id?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sso_providersCreateInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    saml_providers?: saml_providersCreateNestedManyWithoutSso_providersInput
    saml_relay_states?: saml_relay_statesCreateNestedManyWithoutSso_providersInput
    sso_domains?: sso_domainsCreateNestedManyWithoutSso_providersInput
  }

  export type sso_providersUncheckedCreateInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    saml_providers?: saml_providersUncheckedCreateNestedManyWithoutSso_providersInput
    saml_relay_states?: saml_relay_statesUncheckedCreateNestedManyWithoutSso_providersInput
    sso_domains?: sso_domainsUncheckedCreateNestedManyWithoutSso_providersInput
  }

  export type sso_providersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_providers?: saml_providersUpdateManyWithoutSso_providersNestedInput
    saml_relay_states?: saml_relay_statesUpdateManyWithoutSso_providersNestedInput
    sso_domains?: sso_domainsUpdateManyWithoutSso_providersNestedInput
  }

  export type sso_providersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_providers?: saml_providersUncheckedUpdateManyWithoutSso_providersNestedInput
    saml_relay_states?: saml_relay_statesUncheckedUpdateManyWithoutSso_providersNestedInput
    sso_domains?: sso_domainsUncheckedUpdateManyWithoutSso_providersNestedInput
  }

  export type sso_providersCreateManyInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type sso_providersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sso_providersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersCreateInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    is_anonymous?: boolean
    identities?: identitiesCreateNestedManyWithoutUsersInput
    mfa_factors?: mfa_factorsCreateNestedManyWithoutUsersInput
    one_time_tokens?: one_time_tokensCreateNestedManyWithoutUsersInput
    sessions?: sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    is_anonymous?: boolean
    identities?: identitiesUncheckedCreateNestedManyWithoutUsersInput
    mfa_factors?: mfa_factorsUncheckedCreateNestedManyWithoutUsersInput
    one_time_tokens?: one_time_tokensUncheckedCreateNestedManyWithoutUsersInput
    sessions?: sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersUpdateInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    identities?: identitiesUpdateManyWithoutUsersNestedInput
    mfa_factors?: mfa_factorsUpdateManyWithoutUsersNestedInput
    one_time_tokens?: one_time_tokensUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    identities?: identitiesUncheckedUpdateManyWithoutUsersNestedInput
    mfa_factors?: mfa_factorsUncheckedUpdateManyWithoutUsersNestedInput
    one_time_tokens?: one_time_tokensUncheckedUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateManyInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    is_anonymous?: boolean
  }

  export type usersUpdateManyMutationInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
  }

  export type usersUncheckedUpdateManyInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
  }

  export type bucketsCreateInput = {
    id: string
    name: string
    owner?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    public?: boolean | null
    avif_autodetection?: boolean | null
    file_size_limit?: bigint | number | null
    allowed_mime_types?: bucketsCreateallowed_mime_typesInput | string[]
    owner_id?: string | null
    objects?: objectsCreateNestedManyWithoutBucketsInput
    s3_multipart_uploads?: s3_multipart_uploadsCreateNestedManyWithoutBucketsInput
    s3_multipart_uploads_parts?: s3_multipart_uploads_partsCreateNestedManyWithoutBucketsInput
  }

  export type bucketsUncheckedCreateInput = {
    id: string
    name: string
    owner?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    public?: boolean | null
    avif_autodetection?: boolean | null
    file_size_limit?: bigint | number | null
    allowed_mime_types?: bucketsCreateallowed_mime_typesInput | string[]
    owner_id?: string | null
    objects?: objectsUncheckedCreateNestedManyWithoutBucketsInput
    s3_multipart_uploads?: s3_multipart_uploadsUncheckedCreateNestedManyWithoutBucketsInput
    s3_multipart_uploads_parts?: s3_multipart_uploads_partsUncheckedCreateNestedManyWithoutBucketsInput
  }

  export type bucketsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    public?: NullableBoolFieldUpdateOperationsInput | boolean | null
    avif_autodetection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    file_size_limit?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    allowed_mime_types?: bucketsUpdateallowed_mime_typesInput | string[]
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    objects?: objectsUpdateManyWithoutBucketsNestedInput
    s3_multipart_uploads?: s3_multipart_uploadsUpdateManyWithoutBucketsNestedInput
    s3_multipart_uploads_parts?: s3_multipart_uploads_partsUpdateManyWithoutBucketsNestedInput
  }

  export type bucketsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    public?: NullableBoolFieldUpdateOperationsInput | boolean | null
    avif_autodetection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    file_size_limit?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    allowed_mime_types?: bucketsUpdateallowed_mime_typesInput | string[]
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    objects?: objectsUncheckedUpdateManyWithoutBucketsNestedInput
    s3_multipart_uploads?: s3_multipart_uploadsUncheckedUpdateManyWithoutBucketsNestedInput
    s3_multipart_uploads_parts?: s3_multipart_uploads_partsUncheckedUpdateManyWithoutBucketsNestedInput
  }

  export type bucketsCreateManyInput = {
    id: string
    name: string
    owner?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    public?: boolean | null
    avif_autodetection?: boolean | null
    file_size_limit?: bigint | number | null
    allowed_mime_types?: bucketsCreateallowed_mime_typesInput | string[]
    owner_id?: string | null
  }

  export type bucketsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    public?: NullableBoolFieldUpdateOperationsInput | boolean | null
    avif_autodetection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    file_size_limit?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    allowed_mime_types?: bucketsUpdateallowed_mime_typesInput | string[]
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type bucketsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    public?: NullableBoolFieldUpdateOperationsInput | boolean | null
    avif_autodetection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    file_size_limit?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    allowed_mime_types?: bucketsUpdateallowed_mime_typesInput | string[]
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type migrationsCreateInput = {
    id: number
    name: string
    hash: string
    executed_at?: Date | string | null
  }

  export type migrationsUncheckedCreateInput = {
    id: number
    name: string
    hash: string
    executed_at?: Date | string | null
  }

  export type migrationsUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    executed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type migrationsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    executed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type migrationsCreateManyInput = {
    id: number
    name: string
    hash: string
    executed_at?: Date | string | null
  }

  export type migrationsUpdateManyMutationInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    executed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type migrationsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    executed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type objectsCreateInput = {
    id?: string
    name?: string | null
    owner?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    last_accessed_at?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    path_tokens?: objectsCreatepath_tokensInput | string[]
    version?: string | null
    owner_id?: string | null
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
    buckets?: bucketsCreateNestedOneWithoutObjectsInput
  }

  export type objectsUncheckedCreateInput = {
    id?: string
    bucket_id?: string | null
    name?: string | null
    owner?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    last_accessed_at?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    path_tokens?: objectsCreatepath_tokensInput | string[]
    version?: string | null
    owner_id?: string | null
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type objectsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_accessed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    path_tokens?: objectsUpdatepath_tokensInput | string[]
    version?: NullableStringFieldUpdateOperationsInput | string | null
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
    buckets?: bucketsUpdateOneWithoutObjectsNestedInput
  }

  export type objectsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    bucket_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_accessed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    path_tokens?: objectsUpdatepath_tokensInput | string[]
    version?: NullableStringFieldUpdateOperationsInput | string | null
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type objectsCreateManyInput = {
    id?: string
    bucket_id?: string | null
    name?: string | null
    owner?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    last_accessed_at?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    path_tokens?: objectsCreatepath_tokensInput | string[]
    version?: string | null
    owner_id?: string | null
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type objectsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_accessed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    path_tokens?: objectsUpdatepath_tokensInput | string[]
    version?: NullableStringFieldUpdateOperationsInput | string | null
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type objectsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    bucket_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_accessed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    path_tokens?: objectsUpdatepath_tokensInput | string[]
    version?: NullableStringFieldUpdateOperationsInput | string | null
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type s3_multipart_uploadsCreateInput = {
    id: string
    in_progress_size?: bigint | number
    upload_signature: string
    key: string
    version: string
    owner_id?: string | null
    created_at?: Date | string
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
    buckets: bucketsCreateNestedOneWithoutS3_multipart_uploadsInput
    s3_multipart_uploads_parts?: s3_multipart_uploads_partsCreateNestedManyWithoutS3_multipart_uploadsInput
  }

  export type s3_multipart_uploadsUncheckedCreateInput = {
    id: string
    in_progress_size?: bigint | number
    upload_signature: string
    bucket_id: string
    key: string
    version: string
    owner_id?: string | null
    created_at?: Date | string
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
    s3_multipart_uploads_parts?: s3_multipart_uploads_partsUncheckedCreateNestedManyWithoutS3_multipart_uploadsInput
  }

  export type s3_multipart_uploadsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    in_progress_size?: BigIntFieldUpdateOperationsInput | bigint | number
    upload_signature?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
    buckets?: bucketsUpdateOneRequiredWithoutS3_multipart_uploadsNestedInput
    s3_multipart_uploads_parts?: s3_multipart_uploads_partsUpdateManyWithoutS3_multipart_uploadsNestedInput
  }

  export type s3_multipart_uploadsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    in_progress_size?: BigIntFieldUpdateOperationsInput | bigint | number
    upload_signature?: StringFieldUpdateOperationsInput | string
    bucket_id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
    s3_multipart_uploads_parts?: s3_multipart_uploads_partsUncheckedUpdateManyWithoutS3_multipart_uploadsNestedInput
  }

  export type s3_multipart_uploadsCreateManyInput = {
    id: string
    in_progress_size?: bigint | number
    upload_signature: string
    bucket_id: string
    key: string
    version: string
    owner_id?: string | null
    created_at?: Date | string
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type s3_multipart_uploadsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    in_progress_size?: BigIntFieldUpdateOperationsInput | bigint | number
    upload_signature?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type s3_multipart_uploadsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    in_progress_size?: BigIntFieldUpdateOperationsInput | bigint | number
    upload_signature?: StringFieldUpdateOperationsInput | string
    bucket_id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type s3_multipart_uploads_partsCreateInput = {
    id?: string
    size?: bigint | number
    part_number: number
    key: string
    etag: string
    owner_id?: string | null
    version: string
    created_at?: Date | string
    buckets: bucketsCreateNestedOneWithoutS3_multipart_uploads_partsInput
    s3_multipart_uploads: s3_multipart_uploadsCreateNestedOneWithoutS3_multipart_uploads_partsInput
  }

  export type s3_multipart_uploads_partsUncheckedCreateInput = {
    id?: string
    upload_id: string
    size?: bigint | number
    part_number: number
    bucket_id: string
    key: string
    etag: string
    owner_id?: string | null
    version: string
    created_at?: Date | string
  }

  export type s3_multipart_uploads_partsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    size?: BigIntFieldUpdateOperationsInput | bigint | number
    part_number?: IntFieldUpdateOperationsInput | number
    key?: StringFieldUpdateOperationsInput | string
    etag?: StringFieldUpdateOperationsInput | string
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    version?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    buckets?: bucketsUpdateOneRequiredWithoutS3_multipart_uploads_partsNestedInput
    s3_multipart_uploads?: s3_multipart_uploadsUpdateOneRequiredWithoutS3_multipart_uploads_partsNestedInput
  }

  export type s3_multipart_uploads_partsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    upload_id?: StringFieldUpdateOperationsInput | string
    size?: BigIntFieldUpdateOperationsInput | bigint | number
    part_number?: IntFieldUpdateOperationsInput | number
    bucket_id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    etag?: StringFieldUpdateOperationsInput | string
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    version?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type s3_multipart_uploads_partsCreateManyInput = {
    id?: string
    upload_id: string
    size?: bigint | number
    part_number: number
    bucket_id: string
    key: string
    etag: string
    owner_id?: string | null
    version: string
    created_at?: Date | string
  }

  export type s3_multipart_uploads_partsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    size?: BigIntFieldUpdateOperationsInput | bigint | number
    part_number?: IntFieldUpdateOperationsInput | number
    key?: StringFieldUpdateOperationsInput | string
    etag?: StringFieldUpdateOperationsInput | string
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    version?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type s3_multipart_uploads_partsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    upload_id?: StringFieldUpdateOperationsInput | string
    size?: BigIntFieldUpdateOperationsInput | bigint | number
    part_number?: IntFieldUpdateOperationsInput | number
    bucket_id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    etag?: StringFieldUpdateOperationsInput | string
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    version?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type UserSoftwareListRelationFilter = {
    every?: UserSoftwareWhereInput
    some?: UserSoftwareWhereInput
    none?: UserSoftwareWhereInput
  }

  export type SoftwareListRelationFilter = {
    every?: SoftwareWhereInput
    some?: SoftwareWhereInput
    none?: SoftwareWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type UserSoftwareOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SoftwareOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserProfilesCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    fullName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    avatarUrl?: SortOrder
    website?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserProfilesMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    fullName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    avatarUrl?: SortOrder
    website?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserProfilesMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    fullName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    avatarUrl?: SortOrder
    website?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type SharedAccountListRelationFilter = {
    every?: SharedAccountWhereInput
    some?: SharedAccountWhereInput
    none?: SharedAccountWhereInput
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type UserHistoryListRelationFilter = {
    every?: UserHistoryWhereInput
    some?: UserHistoryWhereInput
    none?: UserHistoryWhereInput
  }

  export type SharedAccountOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    department?: SortOrder
    email?: SortOrder
    name?: SortOrder
    jobTitle?: SortOrder
    location?: SortOrder
    personalEmail?: SortOrder
    reportsToId?: SortOrder
    type?: SortOrder
    status?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    department?: SortOrder
    email?: SortOrder
    name?: SortOrder
    jobTitle?: SortOrder
    location?: SortOrder
    personalEmail?: SortOrder
    reportsToId?: SortOrder
    type?: SortOrder
    status?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    department?: SortOrder
    email?: SortOrder
    name?: SortOrder
    jobTitle?: SortOrder
    location?: SortOrder
    personalEmail?: SortOrder
    reportsToId?: SortOrder
    type?: SortOrder
    status?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type UserHistoryCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    field?: SortOrder
    newValue?: SortOrder
    oldValue?: SortOrder
    updatedBy?: SortOrder
    updatedOn?: SortOrder
  }

  export type UserHistoryMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    field?: SortOrder
    newValue?: SortOrder
    oldValue?: SortOrder
    updatedBy?: SortOrder
    updatedOn?: SortOrder
  }

  export type UserHistoryMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    field?: SortOrder
    newValue?: SortOrder
    oldValue?: SortOrder
    updatedBy?: SortOrder
    updatedOn?: SortOrder
  }

  export type SoftwareScalarRelationFilter = {
    is?: SoftwareWhereInput
    isNot?: SoftwareWhereInput
  }

  export type AccountRepCountOrderByAggregateInput = {
    id?: SortOrder
    softwareId?: SortOrder
    email?: SortOrder
    name?: SortOrder
    phone?: SortOrder
  }

  export type AccountRepMaxOrderByAggregateInput = {
    id?: SortOrder
    softwareId?: SortOrder
    email?: SortOrder
    name?: SortOrder
    phone?: SortOrder
  }

  export type AccountRepMinOrderByAggregateInput = {
    id?: SortOrder
    softwareId?: SortOrder
    email?: SortOrder
    name?: SortOrder
    phone?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type EnumPaymentFrequencyFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentFrequency | EnumPaymentFrequencyFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentFrequency[] | ListEnumPaymentFrequencyFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentFrequency[] | ListEnumPaymentFrequencyFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentFrequencyFilter<$PrismaModel> | $Enums.PaymentFrequency
  }

  export type EnumPaymentMethodFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodFilter<$PrismaModel> | $Enums.PaymentMethod
  }

  export type AccountRepListRelationFilter = {
    every?: AccountRepWhereInput
    some?: AccountRepWhereInput
    none?: AccountRepWhereInput
  }

  export type SoftwareAccessListRelationFilter = {
    every?: SoftwareAccessWhereInput
    some?: SoftwareAccessWhereInput
    none?: SoftwareAccessWhereInput
  }

  export type SoftwareHistoryListRelationFilter = {
    every?: SoftwareHistoryWhereInput
    some?: SoftwareHistoryWhereInput
    none?: SoftwareHistoryWhereInput
  }

  export type UserProfilesListRelationFilter = {
    every?: UserProfilesWhereInput
    some?: UserProfilesWhereInput
    none?: UserProfilesWhereInput
  }

  export type AccountRepOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SoftwareAccessOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SoftwareHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserProfilesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SoftwareCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    category?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userCount?: SortOrder
    notes?: SortOrder
    notesLastUpdatedById?: SortOrder
    accountRep?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    licenseType?: SortOrder
    paymentDueDate?: SortOrder
    paymentFrequency?: SortOrder
    paymentMethod?: SortOrder
    pricePerUser?: SortOrder
    updatedById?: SortOrder
    website?: SortOrder
  }

  export type SoftwareAvgOrderByAggregateInput = {
    userCount?: SortOrder
    amount?: SortOrder
    pricePerUser?: SortOrder
  }

  export type SoftwareMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    category?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userCount?: SortOrder
    notes?: SortOrder
    notesLastUpdatedById?: SortOrder
    accountRep?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    licenseType?: SortOrder
    paymentDueDate?: SortOrder
    paymentFrequency?: SortOrder
    paymentMethod?: SortOrder
    pricePerUser?: SortOrder
    updatedById?: SortOrder
    website?: SortOrder
  }

  export type SoftwareMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    category?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userCount?: SortOrder
    notes?: SortOrder
    notesLastUpdatedById?: SortOrder
    accountRep?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    licenseType?: SortOrder
    paymentDueDate?: SortOrder
    paymentFrequency?: SortOrder
    paymentMethod?: SortOrder
    pricePerUser?: SortOrder
    updatedById?: SortOrder
    website?: SortOrder
  }

  export type SoftwareSumOrderByAggregateInput = {
    userCount?: SortOrder
    amount?: SortOrder
    pricePerUser?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type EnumPaymentFrequencyWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentFrequency | EnumPaymentFrequencyFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentFrequency[] | ListEnumPaymentFrequencyFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentFrequency[] | ListEnumPaymentFrequencyFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentFrequencyWithAggregatesFilter<$PrismaModel> | $Enums.PaymentFrequency
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentFrequencyFilter<$PrismaModel>
    _max?: NestedEnumPaymentFrequencyFilter<$PrismaModel>
  }

  export type EnumPaymentMethodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodWithAggregatesFilter<$PrismaModel> | $Enums.PaymentMethod
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentMethodFilter<$PrismaModel>
    _max?: NestedEnumPaymentMethodFilter<$PrismaModel>
  }

  export type SoftwareHistoryCountOrderByAggregateInput = {
    id?: SortOrder
    softwareId?: SortOrder
    action?: SortOrder
    field?: SortOrder
    newValue?: SortOrder
    oldValue?: SortOrder
    updatedBy?: SortOrder
    updatedOn?: SortOrder
  }

  export type SoftwareHistoryMaxOrderByAggregateInput = {
    id?: SortOrder
    softwareId?: SortOrder
    action?: SortOrder
    field?: SortOrder
    newValue?: SortOrder
    oldValue?: SortOrder
    updatedBy?: SortOrder
    updatedOn?: SortOrder
  }

  export type SoftwareHistoryMinOrderByAggregateInput = {
    id?: SortOrder
    softwareId?: SortOrder
    action?: SortOrder
    field?: SortOrder
    newValue?: SortOrder
    oldValue?: SortOrder
    updatedBy?: SortOrder
    updatedOn?: SortOrder
  }

  export type UserProfilesScalarRelationFilter = {
    is?: UserProfilesWhereInput
    isNot?: UserProfilesWhereInput
  }

  export type UserSoftwareUserIdSoftwareIdCompoundUniqueInput = {
    userId: string
    softwareId: string
  }

  export type UserSoftwareCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    softwareId?: SortOrder
    grantedById?: SortOrder
    accessLevel?: SortOrder
    role?: SortOrder
    assignedAt?: SortOrder
  }

  export type UserSoftwareMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    softwareId?: SortOrder
    grantedById?: SortOrder
    accessLevel?: SortOrder
    role?: SortOrder
    assignedAt?: SortOrder
  }

  export type UserSoftwareMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    softwareId?: SortOrder
    grantedById?: SortOrder
    accessLevel?: SortOrder
    role?: SortOrder
    assignedAt?: SortOrder
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type SharedAccountHistoryListRelationFilter = {
    every?: SharedAccountHistoryWhereInput
    some?: SharedAccountHistoryWhereInput
    none?: SharedAccountHistoryWhereInput
  }

  export type SharedAccountHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SharedAccountCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    normalizedName?: SortOrder
    location?: SortOrder
    type?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    updatedById?: SortOrder
    userCount?: SortOrder
  }

  export type SharedAccountAvgOrderByAggregateInput = {
    userCount?: SortOrder
  }

  export type SharedAccountMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    normalizedName?: SortOrder
    location?: SortOrder
    type?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    updatedById?: SortOrder
    userCount?: SortOrder
  }

  export type SharedAccountMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    normalizedName?: SortOrder
    location?: SortOrder
    type?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    updatedById?: SortOrder
    userCount?: SortOrder
  }

  export type SharedAccountSumOrderByAggregateInput = {
    userCount?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type SharedAccountScalarRelationFilter = {
    is?: SharedAccountWhereInput
    isNot?: SharedAccountWhereInput
  }

  export type SharedAccountHistoryCountOrderByAggregateInput = {
    id?: SortOrder
    sharedAccountId?: SortOrder
    action?: SortOrder
    field?: SortOrder
    newValue?: SortOrder
    oldValue?: SortOrder
    updatedBy?: SortOrder
    updatedOn?: SortOrder
  }

  export type SharedAccountHistoryMaxOrderByAggregateInput = {
    id?: SortOrder
    sharedAccountId?: SortOrder
    action?: SortOrder
    field?: SortOrder
    newValue?: SortOrder
    oldValue?: SortOrder
    updatedBy?: SortOrder
    updatedOn?: SortOrder
  }

  export type SharedAccountHistoryMinOrderByAggregateInput = {
    id?: SortOrder
    sharedAccountId?: SortOrder
    action?: SortOrder
    field?: SortOrder
    newValue?: SortOrder
    oldValue?: SortOrder
    updatedBy?: SortOrder
    updatedOn?: SortOrder
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type SoftwareAccessCountOrderByAggregateInput = {
    id?: SortOrder
    sharedAccountId?: SortOrder
    softwareId?: SortOrder
    access?: SortOrder
    lastEdited?: SortOrder
    lastEditedBy?: SortOrder
    permissions?: SortOrder
    uid?: SortOrder
  }

  export type SoftwareAccessMaxOrderByAggregateInput = {
    id?: SortOrder
    sharedAccountId?: SortOrder
    softwareId?: SortOrder
    access?: SortOrder
    lastEdited?: SortOrder
    lastEditedBy?: SortOrder
    uid?: SortOrder
  }

  export type SoftwareAccessMinOrderByAggregateInput = {
    id?: SortOrder
    sharedAccountId?: SortOrder
    softwareId?: SortOrder
    access?: SortOrder
    lastEdited?: SortOrder
    lastEditedBy?: SortOrder
    uid?: SortOrder
  }

  export type UuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type audit_log_entriesCountOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    payload?: SortOrder
    created_at?: SortOrder
    ip_address?: SortOrder
  }

  export type audit_log_entriesMaxOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    created_at?: SortOrder
    ip_address?: SortOrder
  }

  export type audit_log_entriesMinOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    created_at?: SortOrder
    ip_address?: SortOrder
  }

  export type UuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type Enumcode_challenge_methodFilter<$PrismaModel = never> = {
    equals?: $Enums.code_challenge_method | Enumcode_challenge_methodFieldRefInput<$PrismaModel>
    in?: $Enums.code_challenge_method[] | ListEnumcode_challenge_methodFieldRefInput<$PrismaModel>
    notIn?: $Enums.code_challenge_method[] | ListEnumcode_challenge_methodFieldRefInput<$PrismaModel>
    not?: NestedEnumcode_challenge_methodFilter<$PrismaModel> | $Enums.code_challenge_method
  }

  export type Saml_relay_statesListRelationFilter = {
    every?: saml_relay_statesWhereInput
    some?: saml_relay_statesWhereInput
    none?: saml_relay_statesWhereInput
  }

  export type saml_relay_statesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type flow_stateCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    auth_code?: SortOrder
    code_challenge_method?: SortOrder
    code_challenge?: SortOrder
    provider_type?: SortOrder
    provider_access_token?: SortOrder
    provider_refresh_token?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    authentication_method?: SortOrder
    auth_code_issued_at?: SortOrder
  }

  export type flow_stateMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    auth_code?: SortOrder
    code_challenge_method?: SortOrder
    code_challenge?: SortOrder
    provider_type?: SortOrder
    provider_access_token?: SortOrder
    provider_refresh_token?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    authentication_method?: SortOrder
    auth_code_issued_at?: SortOrder
  }

  export type flow_stateMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    auth_code?: SortOrder
    code_challenge_method?: SortOrder
    code_challenge?: SortOrder
    provider_type?: SortOrder
    provider_access_token?: SortOrder
    provider_refresh_token?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    authentication_method?: SortOrder
    auth_code_issued_at?: SortOrder
  }

  export type Enumcode_challenge_methodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.code_challenge_method | Enumcode_challenge_methodFieldRefInput<$PrismaModel>
    in?: $Enums.code_challenge_method[] | ListEnumcode_challenge_methodFieldRefInput<$PrismaModel>
    notIn?: $Enums.code_challenge_method[] | ListEnumcode_challenge_methodFieldRefInput<$PrismaModel>
    not?: NestedEnumcode_challenge_methodWithAggregatesFilter<$PrismaModel> | $Enums.code_challenge_method
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumcode_challenge_methodFilter<$PrismaModel>
    _max?: NestedEnumcode_challenge_methodFilter<$PrismaModel>
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type UsersScalarRelationFilter = {
    is?: usersWhereInput
    isNot?: usersWhereInput
  }

  export type identitiesProvider_idProviderCompoundUniqueInput = {
    provider_id: string
    provider: string
  }

  export type identitiesCountOrderByAggregateInput = {
    provider_id?: SortOrder
    user_id?: SortOrder
    identity_data?: SortOrder
    provider?: SortOrder
    last_sign_in_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    email?: SortOrder
    id?: SortOrder
  }

  export type identitiesMaxOrderByAggregateInput = {
    provider_id?: SortOrder
    user_id?: SortOrder
    provider?: SortOrder
    last_sign_in_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    email?: SortOrder
    id?: SortOrder
  }

  export type identitiesMinOrderByAggregateInput = {
    provider_id?: SortOrder
    user_id?: SortOrder
    provider?: SortOrder
    last_sign_in_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    email?: SortOrder
    id?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type instancesCountOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    raw_base_config?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type instancesMaxOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    raw_base_config?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type instancesMinOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    raw_base_config?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type SessionsScalarRelationFilter = {
    is?: sessionsWhereInput
    isNot?: sessionsWhereInput
  }

  export type mfa_amr_claimsSession_idAuthentication_methodCompoundUniqueInput = {
    session_id: string
    authentication_method: string
  }

  export type mfa_amr_claimsCountOrderByAggregateInput = {
    session_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    authentication_method?: SortOrder
    id?: SortOrder
  }

  export type mfa_amr_claimsMaxOrderByAggregateInput = {
    session_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    authentication_method?: SortOrder
    id?: SortOrder
  }

  export type mfa_amr_claimsMinOrderByAggregateInput = {
    session_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    authentication_method?: SortOrder
    id?: SortOrder
  }

  export type Mfa_factorsScalarRelationFilter = {
    is?: mfa_factorsWhereInput
    isNot?: mfa_factorsWhereInput
  }

  export type mfa_challengesCountOrderByAggregateInput = {
    id?: SortOrder
    factor_id?: SortOrder
    created_at?: SortOrder
    verified_at?: SortOrder
    ip_address?: SortOrder
    otp_code?: SortOrder
    web_authn_session_data?: SortOrder
  }

  export type mfa_challengesMaxOrderByAggregateInput = {
    id?: SortOrder
    factor_id?: SortOrder
    created_at?: SortOrder
    verified_at?: SortOrder
    ip_address?: SortOrder
    otp_code?: SortOrder
  }

  export type mfa_challengesMinOrderByAggregateInput = {
    id?: SortOrder
    factor_id?: SortOrder
    created_at?: SortOrder
    verified_at?: SortOrder
    ip_address?: SortOrder
    otp_code?: SortOrder
  }

  export type Enumfactor_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.factor_type | Enumfactor_typeFieldRefInput<$PrismaModel>
    in?: $Enums.factor_type[] | ListEnumfactor_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.factor_type[] | ListEnumfactor_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumfactor_typeFilter<$PrismaModel> | $Enums.factor_type
  }

  export type Enumfactor_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.factor_status | Enumfactor_statusFieldRefInput<$PrismaModel>
    in?: $Enums.factor_status[] | ListEnumfactor_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.factor_status[] | ListEnumfactor_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumfactor_statusFilter<$PrismaModel> | $Enums.factor_status
  }

  export type Mfa_challengesListRelationFilter = {
    every?: mfa_challengesWhereInput
    some?: mfa_challengesWhereInput
    none?: mfa_challengesWhereInput
  }

  export type mfa_challengesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type mfa_factorsUser_idPhoneCompoundUniqueInput = {
    user_id: string
    phone: string
  }

  export type mfa_factorsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    friendly_name?: SortOrder
    factor_type?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    secret?: SortOrder
    phone?: SortOrder
    last_challenged_at?: SortOrder
    web_authn_credential?: SortOrder
    web_authn_aaguid?: SortOrder
  }

  export type mfa_factorsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    friendly_name?: SortOrder
    factor_type?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    secret?: SortOrder
    phone?: SortOrder
    last_challenged_at?: SortOrder
    web_authn_aaguid?: SortOrder
  }

  export type mfa_factorsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    friendly_name?: SortOrder
    factor_type?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    secret?: SortOrder
    phone?: SortOrder
    last_challenged_at?: SortOrder
    web_authn_aaguid?: SortOrder
  }

  export type Enumfactor_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.factor_type | Enumfactor_typeFieldRefInput<$PrismaModel>
    in?: $Enums.factor_type[] | ListEnumfactor_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.factor_type[] | ListEnumfactor_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumfactor_typeWithAggregatesFilter<$PrismaModel> | $Enums.factor_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumfactor_typeFilter<$PrismaModel>
    _max?: NestedEnumfactor_typeFilter<$PrismaModel>
  }

  export type Enumfactor_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.factor_status | Enumfactor_statusFieldRefInput<$PrismaModel>
    in?: $Enums.factor_status[] | ListEnumfactor_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.factor_status[] | ListEnumfactor_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumfactor_statusWithAggregatesFilter<$PrismaModel> | $Enums.factor_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumfactor_statusFilter<$PrismaModel>
    _max?: NestedEnumfactor_statusFilter<$PrismaModel>
  }

  export type Enumone_time_token_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.one_time_token_type | Enumone_time_token_typeFieldRefInput<$PrismaModel>
    in?: $Enums.one_time_token_type[] | ListEnumone_time_token_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.one_time_token_type[] | ListEnumone_time_token_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumone_time_token_typeFilter<$PrismaModel> | $Enums.one_time_token_type
  }

  export type one_time_tokensUser_idToken_typeCompoundUniqueInput = {
    user_id: string
    token_type: $Enums.one_time_token_type
  }

  export type one_time_tokensCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    token_type?: SortOrder
    token_hash?: SortOrder
    relates_to?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type one_time_tokensMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    token_type?: SortOrder
    token_hash?: SortOrder
    relates_to?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type one_time_tokensMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    token_type?: SortOrder
    token_hash?: SortOrder
    relates_to?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type Enumone_time_token_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.one_time_token_type | Enumone_time_token_typeFieldRefInput<$PrismaModel>
    in?: $Enums.one_time_token_type[] | ListEnumone_time_token_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.one_time_token_type[] | ListEnumone_time_token_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumone_time_token_typeWithAggregatesFilter<$PrismaModel> | $Enums.one_time_token_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumone_time_token_typeFilter<$PrismaModel>
    _max?: NestedEnumone_time_token_typeFilter<$PrismaModel>
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type SessionsNullableScalarRelationFilter = {
    is?: sessionsWhereInput | null
    isNot?: sessionsWhereInput | null
  }

  export type refresh_tokensCountOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    token?: SortOrder
    user_id?: SortOrder
    revoked?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    parent?: SortOrder
    session_id?: SortOrder
  }

  export type refresh_tokensAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type refresh_tokensMaxOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    token?: SortOrder
    user_id?: SortOrder
    revoked?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    parent?: SortOrder
    session_id?: SortOrder
  }

  export type refresh_tokensMinOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    token?: SortOrder
    user_id?: SortOrder
    revoked?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    parent?: SortOrder
    session_id?: SortOrder
  }

  export type refresh_tokensSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type Sso_providersScalarRelationFilter = {
    is?: sso_providersWhereInput
    isNot?: sso_providersWhereInput
  }

  export type saml_providersCountOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    entity_id?: SortOrder
    metadata_xml?: SortOrder
    metadata_url?: SortOrder
    attribute_mapping?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    name_id_format?: SortOrder
  }

  export type saml_providersMaxOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    entity_id?: SortOrder
    metadata_xml?: SortOrder
    metadata_url?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    name_id_format?: SortOrder
  }

  export type saml_providersMinOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    entity_id?: SortOrder
    metadata_xml?: SortOrder
    metadata_url?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    name_id_format?: SortOrder
  }

  export type Flow_stateNullableScalarRelationFilter = {
    is?: flow_stateWhereInput | null
    isNot?: flow_stateWhereInput | null
  }

  export type saml_relay_statesCountOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    request_id?: SortOrder
    for_email?: SortOrder
    redirect_to?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    flow_state_id?: SortOrder
  }

  export type saml_relay_statesMaxOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    request_id?: SortOrder
    for_email?: SortOrder
    redirect_to?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    flow_state_id?: SortOrder
  }

  export type saml_relay_statesMinOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    request_id?: SortOrder
    for_email?: SortOrder
    redirect_to?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    flow_state_id?: SortOrder
  }

  export type schema_migrationsCountOrderByAggregateInput = {
    version?: SortOrder
  }

  export type schema_migrationsMaxOrderByAggregateInput = {
    version?: SortOrder
  }

  export type schema_migrationsMinOrderByAggregateInput = {
    version?: SortOrder
  }

  export type Enumaal_levelNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.aal_level | Enumaal_levelFieldRefInput<$PrismaModel> | null
    in?: $Enums.aal_level[] | ListEnumaal_levelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.aal_level[] | ListEnumaal_levelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumaal_levelNullableFilter<$PrismaModel> | $Enums.aal_level | null
  }

  export type Mfa_amr_claimsListRelationFilter = {
    every?: mfa_amr_claimsWhereInput
    some?: mfa_amr_claimsWhereInput
    none?: mfa_amr_claimsWhereInput
  }

  export type Refresh_tokensListRelationFilter = {
    every?: refresh_tokensWhereInput
    some?: refresh_tokensWhereInput
    none?: refresh_tokensWhereInput
  }

  export type mfa_amr_claimsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type refresh_tokensOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sessionsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    factor_id?: SortOrder
    aal?: SortOrder
    not_after?: SortOrder
    refreshed_at?: SortOrder
    user_agent?: SortOrder
    ip?: SortOrder
    tag?: SortOrder
  }

  export type sessionsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    factor_id?: SortOrder
    aal?: SortOrder
    not_after?: SortOrder
    refreshed_at?: SortOrder
    user_agent?: SortOrder
    ip?: SortOrder
    tag?: SortOrder
  }

  export type sessionsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    factor_id?: SortOrder
    aal?: SortOrder
    not_after?: SortOrder
    refreshed_at?: SortOrder
    user_agent?: SortOrder
    ip?: SortOrder
    tag?: SortOrder
  }

  export type Enumaal_levelNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.aal_level | Enumaal_levelFieldRefInput<$PrismaModel> | null
    in?: $Enums.aal_level[] | ListEnumaal_levelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.aal_level[] | ListEnumaal_levelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumaal_levelNullableWithAggregatesFilter<$PrismaModel> | $Enums.aal_level | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumaal_levelNullableFilter<$PrismaModel>
    _max?: NestedEnumaal_levelNullableFilter<$PrismaModel>
  }

  export type sso_domainsCountOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    domain?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type sso_domainsMaxOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    domain?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type sso_domainsMinOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    domain?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type Saml_providersListRelationFilter = {
    every?: saml_providersWhereInput
    some?: saml_providersWhereInput
    none?: saml_providersWhereInput
  }

  export type Sso_domainsListRelationFilter = {
    every?: sso_domainsWhereInput
    some?: sso_domainsWhereInput
    none?: sso_domainsWhereInput
  }

  export type saml_providersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sso_domainsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sso_providersCountOrderByAggregateInput = {
    id?: SortOrder
    resource_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type sso_providersMaxOrderByAggregateInput = {
    id?: SortOrder
    resource_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type sso_providersMinOrderByAggregateInput = {
    id?: SortOrder
    resource_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type IdentitiesListRelationFilter = {
    every?: identitiesWhereInput
    some?: identitiesWhereInput
    none?: identitiesWhereInput
  }

  export type Mfa_factorsListRelationFilter = {
    every?: mfa_factorsWhereInput
    some?: mfa_factorsWhereInput
    none?: mfa_factorsWhereInput
  }

  export type One_time_tokensListRelationFilter = {
    every?: one_time_tokensWhereInput
    some?: one_time_tokensWhereInput
    none?: one_time_tokensWhereInput
  }

  export type SessionsListRelationFilter = {
    every?: sessionsWhereInput
    some?: sessionsWhereInput
    none?: sessionsWhereInput
  }

  export type identitiesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type mfa_factorsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type one_time_tokensOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sessionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersCountOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    aud?: SortOrder
    role?: SortOrder
    email?: SortOrder
    encrypted_password?: SortOrder
    email_confirmed_at?: SortOrder
    invited_at?: SortOrder
    confirmation_token?: SortOrder
    confirmation_sent_at?: SortOrder
    recovery_token?: SortOrder
    recovery_sent_at?: SortOrder
    email_change_token_new?: SortOrder
    email_change?: SortOrder
    email_change_sent_at?: SortOrder
    last_sign_in_at?: SortOrder
    raw_app_meta_data?: SortOrder
    raw_user_meta_data?: SortOrder
    is_super_admin?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    phone?: SortOrder
    phone_confirmed_at?: SortOrder
    phone_change?: SortOrder
    phone_change_token?: SortOrder
    phone_change_sent_at?: SortOrder
    confirmed_at?: SortOrder
    email_change_token_current?: SortOrder
    email_change_confirm_status?: SortOrder
    banned_until?: SortOrder
    reauthentication_token?: SortOrder
    reauthentication_sent_at?: SortOrder
    is_sso_user?: SortOrder
    deleted_at?: SortOrder
    is_anonymous?: SortOrder
  }

  export type usersAvgOrderByAggregateInput = {
    email_change_confirm_status?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    aud?: SortOrder
    role?: SortOrder
    email?: SortOrder
    encrypted_password?: SortOrder
    email_confirmed_at?: SortOrder
    invited_at?: SortOrder
    confirmation_token?: SortOrder
    confirmation_sent_at?: SortOrder
    recovery_token?: SortOrder
    recovery_sent_at?: SortOrder
    email_change_token_new?: SortOrder
    email_change?: SortOrder
    email_change_sent_at?: SortOrder
    last_sign_in_at?: SortOrder
    is_super_admin?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    phone?: SortOrder
    phone_confirmed_at?: SortOrder
    phone_change?: SortOrder
    phone_change_token?: SortOrder
    phone_change_sent_at?: SortOrder
    confirmed_at?: SortOrder
    email_change_token_current?: SortOrder
    email_change_confirm_status?: SortOrder
    banned_until?: SortOrder
    reauthentication_token?: SortOrder
    reauthentication_sent_at?: SortOrder
    is_sso_user?: SortOrder
    deleted_at?: SortOrder
    is_anonymous?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    aud?: SortOrder
    role?: SortOrder
    email?: SortOrder
    encrypted_password?: SortOrder
    email_confirmed_at?: SortOrder
    invited_at?: SortOrder
    confirmation_token?: SortOrder
    confirmation_sent_at?: SortOrder
    recovery_token?: SortOrder
    recovery_sent_at?: SortOrder
    email_change_token_new?: SortOrder
    email_change?: SortOrder
    email_change_sent_at?: SortOrder
    last_sign_in_at?: SortOrder
    is_super_admin?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    phone?: SortOrder
    phone_confirmed_at?: SortOrder
    phone_change?: SortOrder
    phone_change_token?: SortOrder
    phone_change_sent_at?: SortOrder
    confirmed_at?: SortOrder
    email_change_token_current?: SortOrder
    email_change_confirm_status?: SortOrder
    banned_until?: SortOrder
    reauthentication_token?: SortOrder
    reauthentication_sent_at?: SortOrder
    is_sso_user?: SortOrder
    deleted_at?: SortOrder
    is_anonymous?: SortOrder
  }

  export type usersSumOrderByAggregateInput = {
    email_change_confirm_status?: SortOrder
  }

  export type BigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type ObjectsListRelationFilter = {
    every?: objectsWhereInput
    some?: objectsWhereInput
    none?: objectsWhereInput
  }

  export type S3_multipart_uploadsListRelationFilter = {
    every?: s3_multipart_uploadsWhereInput
    some?: s3_multipart_uploadsWhereInput
    none?: s3_multipart_uploadsWhereInput
  }

  export type S3_multipart_uploads_partsListRelationFilter = {
    every?: s3_multipart_uploads_partsWhereInput
    some?: s3_multipart_uploads_partsWhereInput
    none?: s3_multipart_uploads_partsWhereInput
  }

  export type objectsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type s3_multipart_uploadsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type s3_multipart_uploads_partsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type bucketsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    owner?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    public?: SortOrder
    avif_autodetection?: SortOrder
    file_size_limit?: SortOrder
    allowed_mime_types?: SortOrder
    owner_id?: SortOrder
  }

  export type bucketsAvgOrderByAggregateInput = {
    file_size_limit?: SortOrder
  }

  export type bucketsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    owner?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    public?: SortOrder
    avif_autodetection?: SortOrder
    file_size_limit?: SortOrder
    owner_id?: SortOrder
  }

  export type bucketsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    owner?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    public?: SortOrder
    avif_autodetection?: SortOrder
    file_size_limit?: SortOrder
    owner_id?: SortOrder
  }

  export type bucketsSumOrderByAggregateInput = {
    file_size_limit?: SortOrder
  }

  export type BigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type migrationsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    hash?: SortOrder
    executed_at?: SortOrder
  }

  export type migrationsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type migrationsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    hash?: SortOrder
    executed_at?: SortOrder
  }

  export type migrationsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    hash?: SortOrder
    executed_at?: SortOrder
  }

  export type migrationsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BucketsNullableScalarRelationFilter = {
    is?: bucketsWhereInput | null
    isNot?: bucketsWhereInput | null
  }

  export type objectsBucket_idNameCompoundUniqueInput = {
    bucket_id: string
    name: string
  }

  export type objectsCountOrderByAggregateInput = {
    id?: SortOrder
    bucket_id?: SortOrder
    name?: SortOrder
    owner?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    last_accessed_at?: SortOrder
    metadata?: SortOrder
    path_tokens?: SortOrder
    version?: SortOrder
    owner_id?: SortOrder
    user_metadata?: SortOrder
  }

  export type objectsMaxOrderByAggregateInput = {
    id?: SortOrder
    bucket_id?: SortOrder
    name?: SortOrder
    owner?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    last_accessed_at?: SortOrder
    version?: SortOrder
    owner_id?: SortOrder
  }

  export type objectsMinOrderByAggregateInput = {
    id?: SortOrder
    bucket_id?: SortOrder
    name?: SortOrder
    owner?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    last_accessed_at?: SortOrder
    version?: SortOrder
    owner_id?: SortOrder
  }

  export type BucketsScalarRelationFilter = {
    is?: bucketsWhereInput
    isNot?: bucketsWhereInput
  }

  export type s3_multipart_uploadsCountOrderByAggregateInput = {
    id?: SortOrder
    in_progress_size?: SortOrder
    upload_signature?: SortOrder
    bucket_id?: SortOrder
    key?: SortOrder
    version?: SortOrder
    owner_id?: SortOrder
    created_at?: SortOrder
    user_metadata?: SortOrder
  }

  export type s3_multipart_uploadsAvgOrderByAggregateInput = {
    in_progress_size?: SortOrder
  }

  export type s3_multipart_uploadsMaxOrderByAggregateInput = {
    id?: SortOrder
    in_progress_size?: SortOrder
    upload_signature?: SortOrder
    bucket_id?: SortOrder
    key?: SortOrder
    version?: SortOrder
    owner_id?: SortOrder
    created_at?: SortOrder
  }

  export type s3_multipart_uploadsMinOrderByAggregateInput = {
    id?: SortOrder
    in_progress_size?: SortOrder
    upload_signature?: SortOrder
    bucket_id?: SortOrder
    key?: SortOrder
    version?: SortOrder
    owner_id?: SortOrder
    created_at?: SortOrder
  }

  export type s3_multipart_uploadsSumOrderByAggregateInput = {
    in_progress_size?: SortOrder
  }

  export type S3_multipart_uploadsScalarRelationFilter = {
    is?: s3_multipart_uploadsWhereInput
    isNot?: s3_multipart_uploadsWhereInput
  }

  export type s3_multipart_uploads_partsCountOrderByAggregateInput = {
    id?: SortOrder
    upload_id?: SortOrder
    size?: SortOrder
    part_number?: SortOrder
    bucket_id?: SortOrder
    key?: SortOrder
    etag?: SortOrder
    owner_id?: SortOrder
    version?: SortOrder
    created_at?: SortOrder
  }

  export type s3_multipart_uploads_partsAvgOrderByAggregateInput = {
    size?: SortOrder
    part_number?: SortOrder
  }

  export type s3_multipart_uploads_partsMaxOrderByAggregateInput = {
    id?: SortOrder
    upload_id?: SortOrder
    size?: SortOrder
    part_number?: SortOrder
    bucket_id?: SortOrder
    key?: SortOrder
    etag?: SortOrder
    owner_id?: SortOrder
    version?: SortOrder
    created_at?: SortOrder
  }

  export type s3_multipart_uploads_partsMinOrderByAggregateInput = {
    id?: SortOrder
    upload_id?: SortOrder
    size?: SortOrder
    part_number?: SortOrder
    bucket_id?: SortOrder
    key?: SortOrder
    etag?: SortOrder
    owner_id?: SortOrder
    version?: SortOrder
    created_at?: SortOrder
  }

  export type s3_multipart_uploads_partsSumOrderByAggregateInput = {
    size?: SortOrder
    part_number?: SortOrder
  }

  export type UserSoftwareCreateNestedManyWithoutGrantedByInput = {
    create?: XOR<UserSoftwareCreateWithoutGrantedByInput, UserSoftwareUncheckedCreateWithoutGrantedByInput> | UserSoftwareCreateWithoutGrantedByInput[] | UserSoftwareUncheckedCreateWithoutGrantedByInput[]
    connectOrCreate?: UserSoftwareCreateOrConnectWithoutGrantedByInput | UserSoftwareCreateOrConnectWithoutGrantedByInput[]
    createMany?: UserSoftwareCreateManyGrantedByInputEnvelope
    connect?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
  }

  export type SoftwareCreateNestedManyWithoutAssignedInput = {
    create?: XOR<SoftwareCreateWithoutAssignedInput, SoftwareUncheckedCreateWithoutAssignedInput> | SoftwareCreateWithoutAssignedInput[] | SoftwareUncheckedCreateWithoutAssignedInput[]
    connectOrCreate?: SoftwareCreateOrConnectWithoutAssignedInput | SoftwareCreateOrConnectWithoutAssignedInput[]
    connect?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
  }

  export type UserSoftwareUncheckedCreateNestedManyWithoutGrantedByInput = {
    create?: XOR<UserSoftwareCreateWithoutGrantedByInput, UserSoftwareUncheckedCreateWithoutGrantedByInput> | UserSoftwareCreateWithoutGrantedByInput[] | UserSoftwareUncheckedCreateWithoutGrantedByInput[]
    connectOrCreate?: UserSoftwareCreateOrConnectWithoutGrantedByInput | UserSoftwareCreateOrConnectWithoutGrantedByInput[]
    createMany?: UserSoftwareCreateManyGrantedByInputEnvelope
    connect?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
  }

  export type SoftwareUncheckedCreateNestedManyWithoutAssignedInput = {
    create?: XOR<SoftwareCreateWithoutAssignedInput, SoftwareUncheckedCreateWithoutAssignedInput> | SoftwareCreateWithoutAssignedInput[] | SoftwareUncheckedCreateWithoutAssignedInput[]
    connectOrCreate?: SoftwareCreateOrConnectWithoutAssignedInput | SoftwareCreateOrConnectWithoutAssignedInput[]
    connect?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type UserSoftwareUpdateManyWithoutGrantedByNestedInput = {
    create?: XOR<UserSoftwareCreateWithoutGrantedByInput, UserSoftwareUncheckedCreateWithoutGrantedByInput> | UserSoftwareCreateWithoutGrantedByInput[] | UserSoftwareUncheckedCreateWithoutGrantedByInput[]
    connectOrCreate?: UserSoftwareCreateOrConnectWithoutGrantedByInput | UserSoftwareCreateOrConnectWithoutGrantedByInput[]
    upsert?: UserSoftwareUpsertWithWhereUniqueWithoutGrantedByInput | UserSoftwareUpsertWithWhereUniqueWithoutGrantedByInput[]
    createMany?: UserSoftwareCreateManyGrantedByInputEnvelope
    set?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
    disconnect?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
    delete?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
    connect?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
    update?: UserSoftwareUpdateWithWhereUniqueWithoutGrantedByInput | UserSoftwareUpdateWithWhereUniqueWithoutGrantedByInput[]
    updateMany?: UserSoftwareUpdateManyWithWhereWithoutGrantedByInput | UserSoftwareUpdateManyWithWhereWithoutGrantedByInput[]
    deleteMany?: UserSoftwareScalarWhereInput | UserSoftwareScalarWhereInput[]
  }

  export type SoftwareUpdateManyWithoutAssignedNestedInput = {
    create?: XOR<SoftwareCreateWithoutAssignedInput, SoftwareUncheckedCreateWithoutAssignedInput> | SoftwareCreateWithoutAssignedInput[] | SoftwareUncheckedCreateWithoutAssignedInput[]
    connectOrCreate?: SoftwareCreateOrConnectWithoutAssignedInput | SoftwareCreateOrConnectWithoutAssignedInput[]
    upsert?: SoftwareUpsertWithWhereUniqueWithoutAssignedInput | SoftwareUpsertWithWhereUniqueWithoutAssignedInput[]
    set?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
    disconnect?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
    delete?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
    connect?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
    update?: SoftwareUpdateWithWhereUniqueWithoutAssignedInput | SoftwareUpdateWithWhereUniqueWithoutAssignedInput[]
    updateMany?: SoftwareUpdateManyWithWhereWithoutAssignedInput | SoftwareUpdateManyWithWhereWithoutAssignedInput[]
    deleteMany?: SoftwareScalarWhereInput | SoftwareScalarWhereInput[]
  }

  export type UserSoftwareUncheckedUpdateManyWithoutGrantedByNestedInput = {
    create?: XOR<UserSoftwareCreateWithoutGrantedByInput, UserSoftwareUncheckedCreateWithoutGrantedByInput> | UserSoftwareCreateWithoutGrantedByInput[] | UserSoftwareUncheckedCreateWithoutGrantedByInput[]
    connectOrCreate?: UserSoftwareCreateOrConnectWithoutGrantedByInput | UserSoftwareCreateOrConnectWithoutGrantedByInput[]
    upsert?: UserSoftwareUpsertWithWhereUniqueWithoutGrantedByInput | UserSoftwareUpsertWithWhereUniqueWithoutGrantedByInput[]
    createMany?: UserSoftwareCreateManyGrantedByInputEnvelope
    set?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
    disconnect?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
    delete?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
    connect?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
    update?: UserSoftwareUpdateWithWhereUniqueWithoutGrantedByInput | UserSoftwareUpdateWithWhereUniqueWithoutGrantedByInput[]
    updateMany?: UserSoftwareUpdateManyWithWhereWithoutGrantedByInput | UserSoftwareUpdateManyWithWhereWithoutGrantedByInput[]
    deleteMany?: UserSoftwareScalarWhereInput | UserSoftwareScalarWhereInput[]
  }

  export type SoftwareUncheckedUpdateManyWithoutAssignedNestedInput = {
    create?: XOR<SoftwareCreateWithoutAssignedInput, SoftwareUncheckedCreateWithoutAssignedInput> | SoftwareCreateWithoutAssignedInput[] | SoftwareUncheckedCreateWithoutAssignedInput[]
    connectOrCreate?: SoftwareCreateOrConnectWithoutAssignedInput | SoftwareCreateOrConnectWithoutAssignedInput[]
    upsert?: SoftwareUpsertWithWhereUniqueWithoutAssignedInput | SoftwareUpsertWithWhereUniqueWithoutAssignedInput[]
    set?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
    disconnect?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
    delete?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
    connect?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
    update?: SoftwareUpdateWithWhereUniqueWithoutAssignedInput | SoftwareUpdateWithWhereUniqueWithoutAssignedInput[]
    updateMany?: SoftwareUpdateManyWithWhereWithoutAssignedInput | SoftwareUpdateManyWithWhereWithoutAssignedInput[]
    deleteMany?: SoftwareScalarWhereInput | SoftwareScalarWhereInput[]
  }

  export type SharedAccountCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<SharedAccountCreateWithoutUpdatedByInput, SharedAccountUncheckedCreateWithoutUpdatedByInput> | SharedAccountCreateWithoutUpdatedByInput[] | SharedAccountUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: SharedAccountCreateOrConnectWithoutUpdatedByInput | SharedAccountCreateOrConnectWithoutUpdatedByInput[]
    createMany?: SharedAccountCreateManyUpdatedByInputEnvelope
    connect?: SharedAccountWhereUniqueInput | SharedAccountWhereUniqueInput[]
  }

  export type SoftwareCreateNestedManyWithoutNotesLastUpdatedByInput = {
    create?: XOR<SoftwareCreateWithoutNotesLastUpdatedByInput, SoftwareUncheckedCreateWithoutNotesLastUpdatedByInput> | SoftwareCreateWithoutNotesLastUpdatedByInput[] | SoftwareUncheckedCreateWithoutNotesLastUpdatedByInput[]
    connectOrCreate?: SoftwareCreateOrConnectWithoutNotesLastUpdatedByInput | SoftwareCreateOrConnectWithoutNotesLastUpdatedByInput[]
    createMany?: SoftwareCreateManyNotesLastUpdatedByInputEnvelope
    connect?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
  }

  export type SoftwareCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<SoftwareCreateWithoutUpdatedByInput, SoftwareUncheckedCreateWithoutUpdatedByInput> | SoftwareCreateWithoutUpdatedByInput[] | SoftwareUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: SoftwareCreateOrConnectWithoutUpdatedByInput | SoftwareCreateOrConnectWithoutUpdatedByInput[]
    createMany?: SoftwareCreateManyUpdatedByInputEnvelope
    connect?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutSubordinatesInput = {
    create?: XOR<UserCreateWithoutSubordinatesInput, UserUncheckedCreateWithoutSubordinatesInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubordinatesInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutReportsToInput = {
    create?: XOR<UserCreateWithoutReportsToInput, UserUncheckedCreateWithoutReportsToInput> | UserCreateWithoutReportsToInput[] | UserUncheckedCreateWithoutReportsToInput[]
    connectOrCreate?: UserCreateOrConnectWithoutReportsToInput | UserCreateOrConnectWithoutReportsToInput[]
    createMany?: UserCreateManyReportsToInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserHistoryCreateNestedManyWithoutUserInput = {
    create?: XOR<UserHistoryCreateWithoutUserInput, UserHistoryUncheckedCreateWithoutUserInput> | UserHistoryCreateWithoutUserInput[] | UserHistoryUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserHistoryCreateOrConnectWithoutUserInput | UserHistoryCreateOrConnectWithoutUserInput[]
    createMany?: UserHistoryCreateManyUserInputEnvelope
    connect?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
  }

  export type UserSoftwareCreateNestedManyWithoutUserInput = {
    create?: XOR<UserSoftwareCreateWithoutUserInput, UserSoftwareUncheckedCreateWithoutUserInput> | UserSoftwareCreateWithoutUserInput[] | UserSoftwareUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSoftwareCreateOrConnectWithoutUserInput | UserSoftwareCreateOrConnectWithoutUserInput[]
    createMany?: UserSoftwareCreateManyUserInputEnvelope
    connect?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
  }

  export type SharedAccountUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<SharedAccountCreateWithoutUpdatedByInput, SharedAccountUncheckedCreateWithoutUpdatedByInput> | SharedAccountCreateWithoutUpdatedByInput[] | SharedAccountUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: SharedAccountCreateOrConnectWithoutUpdatedByInput | SharedAccountCreateOrConnectWithoutUpdatedByInput[]
    createMany?: SharedAccountCreateManyUpdatedByInputEnvelope
    connect?: SharedAccountWhereUniqueInput | SharedAccountWhereUniqueInput[]
  }

  export type SoftwareUncheckedCreateNestedManyWithoutNotesLastUpdatedByInput = {
    create?: XOR<SoftwareCreateWithoutNotesLastUpdatedByInput, SoftwareUncheckedCreateWithoutNotesLastUpdatedByInput> | SoftwareCreateWithoutNotesLastUpdatedByInput[] | SoftwareUncheckedCreateWithoutNotesLastUpdatedByInput[]
    connectOrCreate?: SoftwareCreateOrConnectWithoutNotesLastUpdatedByInput | SoftwareCreateOrConnectWithoutNotesLastUpdatedByInput[]
    createMany?: SoftwareCreateManyNotesLastUpdatedByInputEnvelope
    connect?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
  }

  export type SoftwareUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<SoftwareCreateWithoutUpdatedByInput, SoftwareUncheckedCreateWithoutUpdatedByInput> | SoftwareCreateWithoutUpdatedByInput[] | SoftwareUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: SoftwareCreateOrConnectWithoutUpdatedByInput | SoftwareCreateOrConnectWithoutUpdatedByInput[]
    createMany?: SoftwareCreateManyUpdatedByInputEnvelope
    connect?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutReportsToInput = {
    create?: XOR<UserCreateWithoutReportsToInput, UserUncheckedCreateWithoutReportsToInput> | UserCreateWithoutReportsToInput[] | UserUncheckedCreateWithoutReportsToInput[]
    connectOrCreate?: UserCreateOrConnectWithoutReportsToInput | UserCreateOrConnectWithoutReportsToInput[]
    createMany?: UserCreateManyReportsToInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserHistoryUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserHistoryCreateWithoutUserInput, UserHistoryUncheckedCreateWithoutUserInput> | UserHistoryCreateWithoutUserInput[] | UserHistoryUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserHistoryCreateOrConnectWithoutUserInput | UserHistoryCreateOrConnectWithoutUserInput[]
    createMany?: UserHistoryCreateManyUserInputEnvelope
    connect?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
  }

  export type UserSoftwareUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserSoftwareCreateWithoutUserInput, UserSoftwareUncheckedCreateWithoutUserInput> | UserSoftwareCreateWithoutUserInput[] | UserSoftwareUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSoftwareCreateOrConnectWithoutUserInput | UserSoftwareCreateOrConnectWithoutUserInput[]
    createMany?: UserSoftwareCreateManyUserInputEnvelope
    connect?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
  }

  export type SharedAccountUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<SharedAccountCreateWithoutUpdatedByInput, SharedAccountUncheckedCreateWithoutUpdatedByInput> | SharedAccountCreateWithoutUpdatedByInput[] | SharedAccountUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: SharedAccountCreateOrConnectWithoutUpdatedByInput | SharedAccountCreateOrConnectWithoutUpdatedByInput[]
    upsert?: SharedAccountUpsertWithWhereUniqueWithoutUpdatedByInput | SharedAccountUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: SharedAccountCreateManyUpdatedByInputEnvelope
    set?: SharedAccountWhereUniqueInput | SharedAccountWhereUniqueInput[]
    disconnect?: SharedAccountWhereUniqueInput | SharedAccountWhereUniqueInput[]
    delete?: SharedAccountWhereUniqueInput | SharedAccountWhereUniqueInput[]
    connect?: SharedAccountWhereUniqueInput | SharedAccountWhereUniqueInput[]
    update?: SharedAccountUpdateWithWhereUniqueWithoutUpdatedByInput | SharedAccountUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: SharedAccountUpdateManyWithWhereWithoutUpdatedByInput | SharedAccountUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: SharedAccountScalarWhereInput | SharedAccountScalarWhereInput[]
  }

  export type SoftwareUpdateManyWithoutNotesLastUpdatedByNestedInput = {
    create?: XOR<SoftwareCreateWithoutNotesLastUpdatedByInput, SoftwareUncheckedCreateWithoutNotesLastUpdatedByInput> | SoftwareCreateWithoutNotesLastUpdatedByInput[] | SoftwareUncheckedCreateWithoutNotesLastUpdatedByInput[]
    connectOrCreate?: SoftwareCreateOrConnectWithoutNotesLastUpdatedByInput | SoftwareCreateOrConnectWithoutNotesLastUpdatedByInput[]
    upsert?: SoftwareUpsertWithWhereUniqueWithoutNotesLastUpdatedByInput | SoftwareUpsertWithWhereUniqueWithoutNotesLastUpdatedByInput[]
    createMany?: SoftwareCreateManyNotesLastUpdatedByInputEnvelope
    set?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
    disconnect?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
    delete?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
    connect?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
    update?: SoftwareUpdateWithWhereUniqueWithoutNotesLastUpdatedByInput | SoftwareUpdateWithWhereUniqueWithoutNotesLastUpdatedByInput[]
    updateMany?: SoftwareUpdateManyWithWhereWithoutNotesLastUpdatedByInput | SoftwareUpdateManyWithWhereWithoutNotesLastUpdatedByInput[]
    deleteMany?: SoftwareScalarWhereInput | SoftwareScalarWhereInput[]
  }

  export type SoftwareUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<SoftwareCreateWithoutUpdatedByInput, SoftwareUncheckedCreateWithoutUpdatedByInput> | SoftwareCreateWithoutUpdatedByInput[] | SoftwareUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: SoftwareCreateOrConnectWithoutUpdatedByInput | SoftwareCreateOrConnectWithoutUpdatedByInput[]
    upsert?: SoftwareUpsertWithWhereUniqueWithoutUpdatedByInput | SoftwareUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: SoftwareCreateManyUpdatedByInputEnvelope
    set?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
    disconnect?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
    delete?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
    connect?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
    update?: SoftwareUpdateWithWhereUniqueWithoutUpdatedByInput | SoftwareUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: SoftwareUpdateManyWithWhereWithoutUpdatedByInput | SoftwareUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: SoftwareScalarWhereInput | SoftwareScalarWhereInput[]
  }

  export type UserUpdateOneWithoutSubordinatesNestedInput = {
    create?: XOR<UserCreateWithoutSubordinatesInput, UserUncheckedCreateWithoutSubordinatesInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubordinatesInput
    upsert?: UserUpsertWithoutSubordinatesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSubordinatesInput, UserUpdateWithoutSubordinatesInput>, UserUncheckedUpdateWithoutSubordinatesInput>
  }

  export type UserUpdateManyWithoutReportsToNestedInput = {
    create?: XOR<UserCreateWithoutReportsToInput, UserUncheckedCreateWithoutReportsToInput> | UserCreateWithoutReportsToInput[] | UserUncheckedCreateWithoutReportsToInput[]
    connectOrCreate?: UserCreateOrConnectWithoutReportsToInput | UserCreateOrConnectWithoutReportsToInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutReportsToInput | UserUpsertWithWhereUniqueWithoutReportsToInput[]
    createMany?: UserCreateManyReportsToInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutReportsToInput | UserUpdateWithWhereUniqueWithoutReportsToInput[]
    updateMany?: UserUpdateManyWithWhereWithoutReportsToInput | UserUpdateManyWithWhereWithoutReportsToInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserHistoryUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserHistoryCreateWithoutUserInput, UserHistoryUncheckedCreateWithoutUserInput> | UserHistoryCreateWithoutUserInput[] | UserHistoryUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserHistoryCreateOrConnectWithoutUserInput | UserHistoryCreateOrConnectWithoutUserInput[]
    upsert?: UserHistoryUpsertWithWhereUniqueWithoutUserInput | UserHistoryUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserHistoryCreateManyUserInputEnvelope
    set?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    disconnect?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    delete?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    connect?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    update?: UserHistoryUpdateWithWhereUniqueWithoutUserInput | UserHistoryUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserHistoryUpdateManyWithWhereWithoutUserInput | UserHistoryUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserHistoryScalarWhereInput | UserHistoryScalarWhereInput[]
  }

  export type UserSoftwareUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserSoftwareCreateWithoutUserInput, UserSoftwareUncheckedCreateWithoutUserInput> | UserSoftwareCreateWithoutUserInput[] | UserSoftwareUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSoftwareCreateOrConnectWithoutUserInput | UserSoftwareCreateOrConnectWithoutUserInput[]
    upsert?: UserSoftwareUpsertWithWhereUniqueWithoutUserInput | UserSoftwareUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserSoftwareCreateManyUserInputEnvelope
    set?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
    disconnect?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
    delete?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
    connect?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
    update?: UserSoftwareUpdateWithWhereUniqueWithoutUserInput | UserSoftwareUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserSoftwareUpdateManyWithWhereWithoutUserInput | UserSoftwareUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserSoftwareScalarWhereInput | UserSoftwareScalarWhereInput[]
  }

  export type SharedAccountUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<SharedAccountCreateWithoutUpdatedByInput, SharedAccountUncheckedCreateWithoutUpdatedByInput> | SharedAccountCreateWithoutUpdatedByInput[] | SharedAccountUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: SharedAccountCreateOrConnectWithoutUpdatedByInput | SharedAccountCreateOrConnectWithoutUpdatedByInput[]
    upsert?: SharedAccountUpsertWithWhereUniqueWithoutUpdatedByInput | SharedAccountUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: SharedAccountCreateManyUpdatedByInputEnvelope
    set?: SharedAccountWhereUniqueInput | SharedAccountWhereUniqueInput[]
    disconnect?: SharedAccountWhereUniqueInput | SharedAccountWhereUniqueInput[]
    delete?: SharedAccountWhereUniqueInput | SharedAccountWhereUniqueInput[]
    connect?: SharedAccountWhereUniqueInput | SharedAccountWhereUniqueInput[]
    update?: SharedAccountUpdateWithWhereUniqueWithoutUpdatedByInput | SharedAccountUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: SharedAccountUpdateManyWithWhereWithoutUpdatedByInput | SharedAccountUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: SharedAccountScalarWhereInput | SharedAccountScalarWhereInput[]
  }

  export type SoftwareUncheckedUpdateManyWithoutNotesLastUpdatedByNestedInput = {
    create?: XOR<SoftwareCreateWithoutNotesLastUpdatedByInput, SoftwareUncheckedCreateWithoutNotesLastUpdatedByInput> | SoftwareCreateWithoutNotesLastUpdatedByInput[] | SoftwareUncheckedCreateWithoutNotesLastUpdatedByInput[]
    connectOrCreate?: SoftwareCreateOrConnectWithoutNotesLastUpdatedByInput | SoftwareCreateOrConnectWithoutNotesLastUpdatedByInput[]
    upsert?: SoftwareUpsertWithWhereUniqueWithoutNotesLastUpdatedByInput | SoftwareUpsertWithWhereUniqueWithoutNotesLastUpdatedByInput[]
    createMany?: SoftwareCreateManyNotesLastUpdatedByInputEnvelope
    set?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
    disconnect?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
    delete?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
    connect?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
    update?: SoftwareUpdateWithWhereUniqueWithoutNotesLastUpdatedByInput | SoftwareUpdateWithWhereUniqueWithoutNotesLastUpdatedByInput[]
    updateMany?: SoftwareUpdateManyWithWhereWithoutNotesLastUpdatedByInput | SoftwareUpdateManyWithWhereWithoutNotesLastUpdatedByInput[]
    deleteMany?: SoftwareScalarWhereInput | SoftwareScalarWhereInput[]
  }

  export type SoftwareUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<SoftwareCreateWithoutUpdatedByInput, SoftwareUncheckedCreateWithoutUpdatedByInput> | SoftwareCreateWithoutUpdatedByInput[] | SoftwareUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: SoftwareCreateOrConnectWithoutUpdatedByInput | SoftwareCreateOrConnectWithoutUpdatedByInput[]
    upsert?: SoftwareUpsertWithWhereUniqueWithoutUpdatedByInput | SoftwareUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: SoftwareCreateManyUpdatedByInputEnvelope
    set?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
    disconnect?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
    delete?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
    connect?: SoftwareWhereUniqueInput | SoftwareWhereUniqueInput[]
    update?: SoftwareUpdateWithWhereUniqueWithoutUpdatedByInput | SoftwareUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: SoftwareUpdateManyWithWhereWithoutUpdatedByInput | SoftwareUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: SoftwareScalarWhereInput | SoftwareScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutReportsToNestedInput = {
    create?: XOR<UserCreateWithoutReportsToInput, UserUncheckedCreateWithoutReportsToInput> | UserCreateWithoutReportsToInput[] | UserUncheckedCreateWithoutReportsToInput[]
    connectOrCreate?: UserCreateOrConnectWithoutReportsToInput | UserCreateOrConnectWithoutReportsToInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutReportsToInput | UserUpsertWithWhereUniqueWithoutReportsToInput[]
    createMany?: UserCreateManyReportsToInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutReportsToInput | UserUpdateWithWhereUniqueWithoutReportsToInput[]
    updateMany?: UserUpdateManyWithWhereWithoutReportsToInput | UserUpdateManyWithWhereWithoutReportsToInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserHistoryUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserHistoryCreateWithoutUserInput, UserHistoryUncheckedCreateWithoutUserInput> | UserHistoryCreateWithoutUserInput[] | UserHistoryUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserHistoryCreateOrConnectWithoutUserInput | UserHistoryCreateOrConnectWithoutUserInput[]
    upsert?: UserHistoryUpsertWithWhereUniqueWithoutUserInput | UserHistoryUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserHistoryCreateManyUserInputEnvelope
    set?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    disconnect?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    delete?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    connect?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    update?: UserHistoryUpdateWithWhereUniqueWithoutUserInput | UserHistoryUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserHistoryUpdateManyWithWhereWithoutUserInput | UserHistoryUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserHistoryScalarWhereInput | UserHistoryScalarWhereInput[]
  }

  export type UserSoftwareUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserSoftwareCreateWithoutUserInput, UserSoftwareUncheckedCreateWithoutUserInput> | UserSoftwareCreateWithoutUserInput[] | UserSoftwareUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSoftwareCreateOrConnectWithoutUserInput | UserSoftwareCreateOrConnectWithoutUserInput[]
    upsert?: UserSoftwareUpsertWithWhereUniqueWithoutUserInput | UserSoftwareUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserSoftwareCreateManyUserInputEnvelope
    set?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
    disconnect?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
    delete?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
    connect?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
    update?: UserSoftwareUpdateWithWhereUniqueWithoutUserInput | UserSoftwareUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserSoftwareUpdateManyWithWhereWithoutUserInput | UserSoftwareUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserSoftwareScalarWhereInput | UserSoftwareScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutHistoriesInput = {
    create?: XOR<UserCreateWithoutHistoriesInput, UserUncheckedCreateWithoutHistoriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutHistoriesInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutHistoriesNestedInput = {
    create?: XOR<UserCreateWithoutHistoriesInput, UserUncheckedCreateWithoutHistoriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutHistoriesInput
    upsert?: UserUpsertWithoutHistoriesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutHistoriesInput, UserUpdateWithoutHistoriesInput>, UserUncheckedUpdateWithoutHistoriesInput>
  }

  export type SoftwareCreateNestedOneWithoutAccountRepsInput = {
    create?: XOR<SoftwareCreateWithoutAccountRepsInput, SoftwareUncheckedCreateWithoutAccountRepsInput>
    connectOrCreate?: SoftwareCreateOrConnectWithoutAccountRepsInput
    connect?: SoftwareWhereUniqueInput
  }

  export type SoftwareUpdateOneRequiredWithoutAccountRepsNestedInput = {
    create?: XOR<SoftwareCreateWithoutAccountRepsInput, SoftwareUncheckedCreateWithoutAccountRepsInput>
    connectOrCreate?: SoftwareCreateOrConnectWithoutAccountRepsInput
    upsert?: SoftwareUpsertWithoutAccountRepsInput
    connect?: SoftwareWhereUniqueInput
    update?: XOR<XOR<SoftwareUpdateToOneWithWhereWithoutAccountRepsInput, SoftwareUpdateWithoutAccountRepsInput>, SoftwareUncheckedUpdateWithoutAccountRepsInput>
  }

  export type AccountRepCreateNestedManyWithoutSoftwareInput = {
    create?: XOR<AccountRepCreateWithoutSoftwareInput, AccountRepUncheckedCreateWithoutSoftwareInput> | AccountRepCreateWithoutSoftwareInput[] | AccountRepUncheckedCreateWithoutSoftwareInput[]
    connectOrCreate?: AccountRepCreateOrConnectWithoutSoftwareInput | AccountRepCreateOrConnectWithoutSoftwareInput[]
    createMany?: AccountRepCreateManySoftwareInputEnvelope
    connect?: AccountRepWhereUniqueInput | AccountRepWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutSoftwareNotesInput = {
    create?: XOR<UserCreateWithoutSoftwareNotesInput, UserUncheckedCreateWithoutSoftwareNotesInput>
    connectOrCreate?: UserCreateOrConnectWithoutSoftwareNotesInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSoftwareInput = {
    create?: XOR<UserCreateWithoutSoftwareInput, UserUncheckedCreateWithoutSoftwareInput>
    connectOrCreate?: UserCreateOrConnectWithoutSoftwareInput
    connect?: UserWhereUniqueInput
  }

  export type SoftwareAccessCreateNestedManyWithoutSoftwareInput = {
    create?: XOR<SoftwareAccessCreateWithoutSoftwareInput, SoftwareAccessUncheckedCreateWithoutSoftwareInput> | SoftwareAccessCreateWithoutSoftwareInput[] | SoftwareAccessUncheckedCreateWithoutSoftwareInput[]
    connectOrCreate?: SoftwareAccessCreateOrConnectWithoutSoftwareInput | SoftwareAccessCreateOrConnectWithoutSoftwareInput[]
    createMany?: SoftwareAccessCreateManySoftwareInputEnvelope
    connect?: SoftwareAccessWhereUniqueInput | SoftwareAccessWhereUniqueInput[]
  }

  export type SoftwareHistoryCreateNestedManyWithoutSoftwareInput = {
    create?: XOR<SoftwareHistoryCreateWithoutSoftwareInput, SoftwareHistoryUncheckedCreateWithoutSoftwareInput> | SoftwareHistoryCreateWithoutSoftwareInput[] | SoftwareHistoryUncheckedCreateWithoutSoftwareInput[]
    connectOrCreate?: SoftwareHistoryCreateOrConnectWithoutSoftwareInput | SoftwareHistoryCreateOrConnectWithoutSoftwareInput[]
    createMany?: SoftwareHistoryCreateManySoftwareInputEnvelope
    connect?: SoftwareHistoryWhereUniqueInput | SoftwareHistoryWhereUniqueInput[]
  }

  export type UserSoftwareCreateNestedManyWithoutSoftwareInput = {
    create?: XOR<UserSoftwareCreateWithoutSoftwareInput, UserSoftwareUncheckedCreateWithoutSoftwareInput> | UserSoftwareCreateWithoutSoftwareInput[] | UserSoftwareUncheckedCreateWithoutSoftwareInput[]
    connectOrCreate?: UserSoftwareCreateOrConnectWithoutSoftwareInput | UserSoftwareCreateOrConnectWithoutSoftwareInput[]
    createMany?: UserSoftwareCreateManySoftwareInputEnvelope
    connect?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
  }

  export type UserProfilesCreateNestedManyWithoutSoftwareInput = {
    create?: XOR<UserProfilesCreateWithoutSoftwareInput, UserProfilesUncheckedCreateWithoutSoftwareInput> | UserProfilesCreateWithoutSoftwareInput[] | UserProfilesUncheckedCreateWithoutSoftwareInput[]
    connectOrCreate?: UserProfilesCreateOrConnectWithoutSoftwareInput | UserProfilesCreateOrConnectWithoutSoftwareInput[]
    connect?: UserProfilesWhereUniqueInput | UserProfilesWhereUniqueInput[]
  }

  export type AccountRepUncheckedCreateNestedManyWithoutSoftwareInput = {
    create?: XOR<AccountRepCreateWithoutSoftwareInput, AccountRepUncheckedCreateWithoutSoftwareInput> | AccountRepCreateWithoutSoftwareInput[] | AccountRepUncheckedCreateWithoutSoftwareInput[]
    connectOrCreate?: AccountRepCreateOrConnectWithoutSoftwareInput | AccountRepCreateOrConnectWithoutSoftwareInput[]
    createMany?: AccountRepCreateManySoftwareInputEnvelope
    connect?: AccountRepWhereUniqueInput | AccountRepWhereUniqueInput[]
  }

  export type SoftwareAccessUncheckedCreateNestedManyWithoutSoftwareInput = {
    create?: XOR<SoftwareAccessCreateWithoutSoftwareInput, SoftwareAccessUncheckedCreateWithoutSoftwareInput> | SoftwareAccessCreateWithoutSoftwareInput[] | SoftwareAccessUncheckedCreateWithoutSoftwareInput[]
    connectOrCreate?: SoftwareAccessCreateOrConnectWithoutSoftwareInput | SoftwareAccessCreateOrConnectWithoutSoftwareInput[]
    createMany?: SoftwareAccessCreateManySoftwareInputEnvelope
    connect?: SoftwareAccessWhereUniqueInput | SoftwareAccessWhereUniqueInput[]
  }

  export type SoftwareHistoryUncheckedCreateNestedManyWithoutSoftwareInput = {
    create?: XOR<SoftwareHistoryCreateWithoutSoftwareInput, SoftwareHistoryUncheckedCreateWithoutSoftwareInput> | SoftwareHistoryCreateWithoutSoftwareInput[] | SoftwareHistoryUncheckedCreateWithoutSoftwareInput[]
    connectOrCreate?: SoftwareHistoryCreateOrConnectWithoutSoftwareInput | SoftwareHistoryCreateOrConnectWithoutSoftwareInput[]
    createMany?: SoftwareHistoryCreateManySoftwareInputEnvelope
    connect?: SoftwareHistoryWhereUniqueInput | SoftwareHistoryWhereUniqueInput[]
  }

  export type UserSoftwareUncheckedCreateNestedManyWithoutSoftwareInput = {
    create?: XOR<UserSoftwareCreateWithoutSoftwareInput, UserSoftwareUncheckedCreateWithoutSoftwareInput> | UserSoftwareCreateWithoutSoftwareInput[] | UserSoftwareUncheckedCreateWithoutSoftwareInput[]
    connectOrCreate?: UserSoftwareCreateOrConnectWithoutSoftwareInput | UserSoftwareCreateOrConnectWithoutSoftwareInput[]
    createMany?: UserSoftwareCreateManySoftwareInputEnvelope
    connect?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
  }

  export type UserProfilesUncheckedCreateNestedManyWithoutSoftwareInput = {
    create?: XOR<UserProfilesCreateWithoutSoftwareInput, UserProfilesUncheckedCreateWithoutSoftwareInput> | UserProfilesCreateWithoutSoftwareInput[] | UserProfilesUncheckedCreateWithoutSoftwareInput[]
    connectOrCreate?: UserProfilesCreateOrConnectWithoutSoftwareInput | UserProfilesCreateOrConnectWithoutSoftwareInput[]
    connect?: UserProfilesWhereUniqueInput | UserProfilesWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type EnumPaymentFrequencyFieldUpdateOperationsInput = {
    set?: $Enums.PaymentFrequency
  }

  export type EnumPaymentMethodFieldUpdateOperationsInput = {
    set?: $Enums.PaymentMethod
  }

  export type AccountRepUpdateManyWithoutSoftwareNestedInput = {
    create?: XOR<AccountRepCreateWithoutSoftwareInput, AccountRepUncheckedCreateWithoutSoftwareInput> | AccountRepCreateWithoutSoftwareInput[] | AccountRepUncheckedCreateWithoutSoftwareInput[]
    connectOrCreate?: AccountRepCreateOrConnectWithoutSoftwareInput | AccountRepCreateOrConnectWithoutSoftwareInput[]
    upsert?: AccountRepUpsertWithWhereUniqueWithoutSoftwareInput | AccountRepUpsertWithWhereUniqueWithoutSoftwareInput[]
    createMany?: AccountRepCreateManySoftwareInputEnvelope
    set?: AccountRepWhereUniqueInput | AccountRepWhereUniqueInput[]
    disconnect?: AccountRepWhereUniqueInput | AccountRepWhereUniqueInput[]
    delete?: AccountRepWhereUniqueInput | AccountRepWhereUniqueInput[]
    connect?: AccountRepWhereUniqueInput | AccountRepWhereUniqueInput[]
    update?: AccountRepUpdateWithWhereUniqueWithoutSoftwareInput | AccountRepUpdateWithWhereUniqueWithoutSoftwareInput[]
    updateMany?: AccountRepUpdateManyWithWhereWithoutSoftwareInput | AccountRepUpdateManyWithWhereWithoutSoftwareInput[]
    deleteMany?: AccountRepScalarWhereInput | AccountRepScalarWhereInput[]
  }

  export type UserUpdateOneRequiredWithoutSoftwareNotesNestedInput = {
    create?: XOR<UserCreateWithoutSoftwareNotesInput, UserUncheckedCreateWithoutSoftwareNotesInput>
    connectOrCreate?: UserCreateOrConnectWithoutSoftwareNotesInput
    upsert?: UserUpsertWithoutSoftwareNotesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSoftwareNotesInput, UserUpdateWithoutSoftwareNotesInput>, UserUncheckedUpdateWithoutSoftwareNotesInput>
  }

  export type UserUpdateOneWithoutSoftwareNestedInput = {
    create?: XOR<UserCreateWithoutSoftwareInput, UserUncheckedCreateWithoutSoftwareInput>
    connectOrCreate?: UserCreateOrConnectWithoutSoftwareInput
    upsert?: UserUpsertWithoutSoftwareInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSoftwareInput, UserUpdateWithoutSoftwareInput>, UserUncheckedUpdateWithoutSoftwareInput>
  }

  export type SoftwareAccessUpdateManyWithoutSoftwareNestedInput = {
    create?: XOR<SoftwareAccessCreateWithoutSoftwareInput, SoftwareAccessUncheckedCreateWithoutSoftwareInput> | SoftwareAccessCreateWithoutSoftwareInput[] | SoftwareAccessUncheckedCreateWithoutSoftwareInput[]
    connectOrCreate?: SoftwareAccessCreateOrConnectWithoutSoftwareInput | SoftwareAccessCreateOrConnectWithoutSoftwareInput[]
    upsert?: SoftwareAccessUpsertWithWhereUniqueWithoutSoftwareInput | SoftwareAccessUpsertWithWhereUniqueWithoutSoftwareInput[]
    createMany?: SoftwareAccessCreateManySoftwareInputEnvelope
    set?: SoftwareAccessWhereUniqueInput | SoftwareAccessWhereUniqueInput[]
    disconnect?: SoftwareAccessWhereUniqueInput | SoftwareAccessWhereUniqueInput[]
    delete?: SoftwareAccessWhereUniqueInput | SoftwareAccessWhereUniqueInput[]
    connect?: SoftwareAccessWhereUniqueInput | SoftwareAccessWhereUniqueInput[]
    update?: SoftwareAccessUpdateWithWhereUniqueWithoutSoftwareInput | SoftwareAccessUpdateWithWhereUniqueWithoutSoftwareInput[]
    updateMany?: SoftwareAccessUpdateManyWithWhereWithoutSoftwareInput | SoftwareAccessUpdateManyWithWhereWithoutSoftwareInput[]
    deleteMany?: SoftwareAccessScalarWhereInput | SoftwareAccessScalarWhereInput[]
  }

  export type SoftwareHistoryUpdateManyWithoutSoftwareNestedInput = {
    create?: XOR<SoftwareHistoryCreateWithoutSoftwareInput, SoftwareHistoryUncheckedCreateWithoutSoftwareInput> | SoftwareHistoryCreateWithoutSoftwareInput[] | SoftwareHistoryUncheckedCreateWithoutSoftwareInput[]
    connectOrCreate?: SoftwareHistoryCreateOrConnectWithoutSoftwareInput | SoftwareHistoryCreateOrConnectWithoutSoftwareInput[]
    upsert?: SoftwareHistoryUpsertWithWhereUniqueWithoutSoftwareInput | SoftwareHistoryUpsertWithWhereUniqueWithoutSoftwareInput[]
    createMany?: SoftwareHistoryCreateManySoftwareInputEnvelope
    set?: SoftwareHistoryWhereUniqueInput | SoftwareHistoryWhereUniqueInput[]
    disconnect?: SoftwareHistoryWhereUniqueInput | SoftwareHistoryWhereUniqueInput[]
    delete?: SoftwareHistoryWhereUniqueInput | SoftwareHistoryWhereUniqueInput[]
    connect?: SoftwareHistoryWhereUniqueInput | SoftwareHistoryWhereUniqueInput[]
    update?: SoftwareHistoryUpdateWithWhereUniqueWithoutSoftwareInput | SoftwareHistoryUpdateWithWhereUniqueWithoutSoftwareInput[]
    updateMany?: SoftwareHistoryUpdateManyWithWhereWithoutSoftwareInput | SoftwareHistoryUpdateManyWithWhereWithoutSoftwareInput[]
    deleteMany?: SoftwareHistoryScalarWhereInput | SoftwareHistoryScalarWhereInput[]
  }

  export type UserSoftwareUpdateManyWithoutSoftwareNestedInput = {
    create?: XOR<UserSoftwareCreateWithoutSoftwareInput, UserSoftwareUncheckedCreateWithoutSoftwareInput> | UserSoftwareCreateWithoutSoftwareInput[] | UserSoftwareUncheckedCreateWithoutSoftwareInput[]
    connectOrCreate?: UserSoftwareCreateOrConnectWithoutSoftwareInput | UserSoftwareCreateOrConnectWithoutSoftwareInput[]
    upsert?: UserSoftwareUpsertWithWhereUniqueWithoutSoftwareInput | UserSoftwareUpsertWithWhereUniqueWithoutSoftwareInput[]
    createMany?: UserSoftwareCreateManySoftwareInputEnvelope
    set?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
    disconnect?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
    delete?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
    connect?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
    update?: UserSoftwareUpdateWithWhereUniqueWithoutSoftwareInput | UserSoftwareUpdateWithWhereUniqueWithoutSoftwareInput[]
    updateMany?: UserSoftwareUpdateManyWithWhereWithoutSoftwareInput | UserSoftwareUpdateManyWithWhereWithoutSoftwareInput[]
    deleteMany?: UserSoftwareScalarWhereInput | UserSoftwareScalarWhereInput[]
  }

  export type UserProfilesUpdateManyWithoutSoftwareNestedInput = {
    create?: XOR<UserProfilesCreateWithoutSoftwareInput, UserProfilesUncheckedCreateWithoutSoftwareInput> | UserProfilesCreateWithoutSoftwareInput[] | UserProfilesUncheckedCreateWithoutSoftwareInput[]
    connectOrCreate?: UserProfilesCreateOrConnectWithoutSoftwareInput | UserProfilesCreateOrConnectWithoutSoftwareInput[]
    upsert?: UserProfilesUpsertWithWhereUniqueWithoutSoftwareInput | UserProfilesUpsertWithWhereUniqueWithoutSoftwareInput[]
    set?: UserProfilesWhereUniqueInput | UserProfilesWhereUniqueInput[]
    disconnect?: UserProfilesWhereUniqueInput | UserProfilesWhereUniqueInput[]
    delete?: UserProfilesWhereUniqueInput | UserProfilesWhereUniqueInput[]
    connect?: UserProfilesWhereUniqueInput | UserProfilesWhereUniqueInput[]
    update?: UserProfilesUpdateWithWhereUniqueWithoutSoftwareInput | UserProfilesUpdateWithWhereUniqueWithoutSoftwareInput[]
    updateMany?: UserProfilesUpdateManyWithWhereWithoutSoftwareInput | UserProfilesUpdateManyWithWhereWithoutSoftwareInput[]
    deleteMany?: UserProfilesScalarWhereInput | UserProfilesScalarWhereInput[]
  }

  export type AccountRepUncheckedUpdateManyWithoutSoftwareNestedInput = {
    create?: XOR<AccountRepCreateWithoutSoftwareInput, AccountRepUncheckedCreateWithoutSoftwareInput> | AccountRepCreateWithoutSoftwareInput[] | AccountRepUncheckedCreateWithoutSoftwareInput[]
    connectOrCreate?: AccountRepCreateOrConnectWithoutSoftwareInput | AccountRepCreateOrConnectWithoutSoftwareInput[]
    upsert?: AccountRepUpsertWithWhereUniqueWithoutSoftwareInput | AccountRepUpsertWithWhereUniqueWithoutSoftwareInput[]
    createMany?: AccountRepCreateManySoftwareInputEnvelope
    set?: AccountRepWhereUniqueInput | AccountRepWhereUniqueInput[]
    disconnect?: AccountRepWhereUniqueInput | AccountRepWhereUniqueInput[]
    delete?: AccountRepWhereUniqueInput | AccountRepWhereUniqueInput[]
    connect?: AccountRepWhereUniqueInput | AccountRepWhereUniqueInput[]
    update?: AccountRepUpdateWithWhereUniqueWithoutSoftwareInput | AccountRepUpdateWithWhereUniqueWithoutSoftwareInput[]
    updateMany?: AccountRepUpdateManyWithWhereWithoutSoftwareInput | AccountRepUpdateManyWithWhereWithoutSoftwareInput[]
    deleteMany?: AccountRepScalarWhereInput | AccountRepScalarWhereInput[]
  }

  export type SoftwareAccessUncheckedUpdateManyWithoutSoftwareNestedInput = {
    create?: XOR<SoftwareAccessCreateWithoutSoftwareInput, SoftwareAccessUncheckedCreateWithoutSoftwareInput> | SoftwareAccessCreateWithoutSoftwareInput[] | SoftwareAccessUncheckedCreateWithoutSoftwareInput[]
    connectOrCreate?: SoftwareAccessCreateOrConnectWithoutSoftwareInput | SoftwareAccessCreateOrConnectWithoutSoftwareInput[]
    upsert?: SoftwareAccessUpsertWithWhereUniqueWithoutSoftwareInput | SoftwareAccessUpsertWithWhereUniqueWithoutSoftwareInput[]
    createMany?: SoftwareAccessCreateManySoftwareInputEnvelope
    set?: SoftwareAccessWhereUniqueInput | SoftwareAccessWhereUniqueInput[]
    disconnect?: SoftwareAccessWhereUniqueInput | SoftwareAccessWhereUniqueInput[]
    delete?: SoftwareAccessWhereUniqueInput | SoftwareAccessWhereUniqueInput[]
    connect?: SoftwareAccessWhereUniqueInput | SoftwareAccessWhereUniqueInput[]
    update?: SoftwareAccessUpdateWithWhereUniqueWithoutSoftwareInput | SoftwareAccessUpdateWithWhereUniqueWithoutSoftwareInput[]
    updateMany?: SoftwareAccessUpdateManyWithWhereWithoutSoftwareInput | SoftwareAccessUpdateManyWithWhereWithoutSoftwareInput[]
    deleteMany?: SoftwareAccessScalarWhereInput | SoftwareAccessScalarWhereInput[]
  }

  export type SoftwareHistoryUncheckedUpdateManyWithoutSoftwareNestedInput = {
    create?: XOR<SoftwareHistoryCreateWithoutSoftwareInput, SoftwareHistoryUncheckedCreateWithoutSoftwareInput> | SoftwareHistoryCreateWithoutSoftwareInput[] | SoftwareHistoryUncheckedCreateWithoutSoftwareInput[]
    connectOrCreate?: SoftwareHistoryCreateOrConnectWithoutSoftwareInput | SoftwareHistoryCreateOrConnectWithoutSoftwareInput[]
    upsert?: SoftwareHistoryUpsertWithWhereUniqueWithoutSoftwareInput | SoftwareHistoryUpsertWithWhereUniqueWithoutSoftwareInput[]
    createMany?: SoftwareHistoryCreateManySoftwareInputEnvelope
    set?: SoftwareHistoryWhereUniqueInput | SoftwareHistoryWhereUniqueInput[]
    disconnect?: SoftwareHistoryWhereUniqueInput | SoftwareHistoryWhereUniqueInput[]
    delete?: SoftwareHistoryWhereUniqueInput | SoftwareHistoryWhereUniqueInput[]
    connect?: SoftwareHistoryWhereUniqueInput | SoftwareHistoryWhereUniqueInput[]
    update?: SoftwareHistoryUpdateWithWhereUniqueWithoutSoftwareInput | SoftwareHistoryUpdateWithWhereUniqueWithoutSoftwareInput[]
    updateMany?: SoftwareHistoryUpdateManyWithWhereWithoutSoftwareInput | SoftwareHistoryUpdateManyWithWhereWithoutSoftwareInput[]
    deleteMany?: SoftwareHistoryScalarWhereInput | SoftwareHistoryScalarWhereInput[]
  }

  export type UserSoftwareUncheckedUpdateManyWithoutSoftwareNestedInput = {
    create?: XOR<UserSoftwareCreateWithoutSoftwareInput, UserSoftwareUncheckedCreateWithoutSoftwareInput> | UserSoftwareCreateWithoutSoftwareInput[] | UserSoftwareUncheckedCreateWithoutSoftwareInput[]
    connectOrCreate?: UserSoftwareCreateOrConnectWithoutSoftwareInput | UserSoftwareCreateOrConnectWithoutSoftwareInput[]
    upsert?: UserSoftwareUpsertWithWhereUniqueWithoutSoftwareInput | UserSoftwareUpsertWithWhereUniqueWithoutSoftwareInput[]
    createMany?: UserSoftwareCreateManySoftwareInputEnvelope
    set?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
    disconnect?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
    delete?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
    connect?: UserSoftwareWhereUniqueInput | UserSoftwareWhereUniqueInput[]
    update?: UserSoftwareUpdateWithWhereUniqueWithoutSoftwareInput | UserSoftwareUpdateWithWhereUniqueWithoutSoftwareInput[]
    updateMany?: UserSoftwareUpdateManyWithWhereWithoutSoftwareInput | UserSoftwareUpdateManyWithWhereWithoutSoftwareInput[]
    deleteMany?: UserSoftwareScalarWhereInput | UserSoftwareScalarWhereInput[]
  }

  export type UserProfilesUncheckedUpdateManyWithoutSoftwareNestedInput = {
    create?: XOR<UserProfilesCreateWithoutSoftwareInput, UserProfilesUncheckedCreateWithoutSoftwareInput> | UserProfilesCreateWithoutSoftwareInput[] | UserProfilesUncheckedCreateWithoutSoftwareInput[]
    connectOrCreate?: UserProfilesCreateOrConnectWithoutSoftwareInput | UserProfilesCreateOrConnectWithoutSoftwareInput[]
    upsert?: UserProfilesUpsertWithWhereUniqueWithoutSoftwareInput | UserProfilesUpsertWithWhereUniqueWithoutSoftwareInput[]
    set?: UserProfilesWhereUniqueInput | UserProfilesWhereUniqueInput[]
    disconnect?: UserProfilesWhereUniqueInput | UserProfilesWhereUniqueInput[]
    delete?: UserProfilesWhereUniqueInput | UserProfilesWhereUniqueInput[]
    connect?: UserProfilesWhereUniqueInput | UserProfilesWhereUniqueInput[]
    update?: UserProfilesUpdateWithWhereUniqueWithoutSoftwareInput | UserProfilesUpdateWithWhereUniqueWithoutSoftwareInput[]
    updateMany?: UserProfilesUpdateManyWithWhereWithoutSoftwareInput | UserProfilesUpdateManyWithWhereWithoutSoftwareInput[]
    deleteMany?: UserProfilesScalarWhereInput | UserProfilesScalarWhereInput[]
  }

  export type SoftwareCreateNestedOneWithoutHistoriesInput = {
    create?: XOR<SoftwareCreateWithoutHistoriesInput, SoftwareUncheckedCreateWithoutHistoriesInput>
    connectOrCreate?: SoftwareCreateOrConnectWithoutHistoriesInput
    connect?: SoftwareWhereUniqueInput
  }

  export type SoftwareUpdateOneRequiredWithoutHistoriesNestedInput = {
    create?: XOR<SoftwareCreateWithoutHistoriesInput, SoftwareUncheckedCreateWithoutHistoriesInput>
    connectOrCreate?: SoftwareCreateOrConnectWithoutHistoriesInput
    upsert?: SoftwareUpsertWithoutHistoriesInput
    connect?: SoftwareWhereUniqueInput
    update?: XOR<XOR<SoftwareUpdateToOneWithWhereWithoutHistoriesInput, SoftwareUpdateWithoutHistoriesInput>, SoftwareUncheckedUpdateWithoutHistoriesInput>
  }

  export type UserProfilesCreateNestedOneWithoutUserSoftwareInput = {
    create?: XOR<UserProfilesCreateWithoutUserSoftwareInput, UserProfilesUncheckedCreateWithoutUserSoftwareInput>
    connectOrCreate?: UserProfilesCreateOrConnectWithoutUserSoftwareInput
    connect?: UserProfilesWhereUniqueInput
  }

  export type SoftwareCreateNestedOneWithoutUserSoftwareInput = {
    create?: XOR<SoftwareCreateWithoutUserSoftwareInput, SoftwareUncheckedCreateWithoutUserSoftwareInput>
    connectOrCreate?: SoftwareCreateOrConnectWithoutUserSoftwareInput
    connect?: SoftwareWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSoftwareInput = {
    create?: XOR<UserCreateWithoutSoftwareInput, UserUncheckedCreateWithoutSoftwareInput>
    connectOrCreate?: UserCreateOrConnectWithoutSoftwareInput
    connect?: UserWhereUniqueInput
  }

  export type UserProfilesUpdateOneRequiredWithoutUserSoftwareNestedInput = {
    create?: XOR<UserProfilesCreateWithoutUserSoftwareInput, UserProfilesUncheckedCreateWithoutUserSoftwareInput>
    connectOrCreate?: UserProfilesCreateOrConnectWithoutUserSoftwareInput
    upsert?: UserProfilesUpsertWithoutUserSoftwareInput
    connect?: UserProfilesWhereUniqueInput
    update?: XOR<XOR<UserProfilesUpdateToOneWithWhereWithoutUserSoftwareInput, UserProfilesUpdateWithoutUserSoftwareInput>, UserProfilesUncheckedUpdateWithoutUserSoftwareInput>
  }

  export type SoftwareUpdateOneRequiredWithoutUserSoftwareNestedInput = {
    create?: XOR<SoftwareCreateWithoutUserSoftwareInput, SoftwareUncheckedCreateWithoutUserSoftwareInput>
    connectOrCreate?: SoftwareCreateOrConnectWithoutUserSoftwareInput
    upsert?: SoftwareUpsertWithoutUserSoftwareInput
    connect?: SoftwareWhereUniqueInput
    update?: XOR<XOR<SoftwareUpdateToOneWithWhereWithoutUserSoftwareInput, SoftwareUpdateWithoutUserSoftwareInput>, SoftwareUncheckedUpdateWithoutUserSoftwareInput>
  }

  export type UserUpdateOneRequiredWithoutSoftwareNestedInput = {
    create?: XOR<UserCreateWithoutSoftwareInput, UserUncheckedCreateWithoutSoftwareInput>
    connectOrCreate?: UserCreateOrConnectWithoutSoftwareInput
    upsert?: UserUpsertWithoutSoftwareInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSoftwareInput, UserUpdateWithoutSoftwareInput>, UserUncheckedUpdateWithoutSoftwareInput>
  }

  export type UserCreateNestedOneWithoutSharedAccountInput = {
    create?: XOR<UserCreateWithoutSharedAccountInput, UserUncheckedCreateWithoutSharedAccountInput>
    connectOrCreate?: UserCreateOrConnectWithoutSharedAccountInput
    connect?: UserWhereUniqueInput
  }

  export type SharedAccountHistoryCreateNestedManyWithoutSharedAccountInput = {
    create?: XOR<SharedAccountHistoryCreateWithoutSharedAccountInput, SharedAccountHistoryUncheckedCreateWithoutSharedAccountInput> | SharedAccountHistoryCreateWithoutSharedAccountInput[] | SharedAccountHistoryUncheckedCreateWithoutSharedAccountInput[]
    connectOrCreate?: SharedAccountHistoryCreateOrConnectWithoutSharedAccountInput | SharedAccountHistoryCreateOrConnectWithoutSharedAccountInput[]
    createMany?: SharedAccountHistoryCreateManySharedAccountInputEnvelope
    connect?: SharedAccountHistoryWhereUniqueInput | SharedAccountHistoryWhereUniqueInput[]
  }

  export type SoftwareAccessCreateNestedManyWithoutSharedAccountInput = {
    create?: XOR<SoftwareAccessCreateWithoutSharedAccountInput, SoftwareAccessUncheckedCreateWithoutSharedAccountInput> | SoftwareAccessCreateWithoutSharedAccountInput[] | SoftwareAccessUncheckedCreateWithoutSharedAccountInput[]
    connectOrCreate?: SoftwareAccessCreateOrConnectWithoutSharedAccountInput | SoftwareAccessCreateOrConnectWithoutSharedAccountInput[]
    createMany?: SoftwareAccessCreateManySharedAccountInputEnvelope
    connect?: SoftwareAccessWhereUniqueInput | SoftwareAccessWhereUniqueInput[]
  }

  export type SharedAccountHistoryUncheckedCreateNestedManyWithoutSharedAccountInput = {
    create?: XOR<SharedAccountHistoryCreateWithoutSharedAccountInput, SharedAccountHistoryUncheckedCreateWithoutSharedAccountInput> | SharedAccountHistoryCreateWithoutSharedAccountInput[] | SharedAccountHistoryUncheckedCreateWithoutSharedAccountInput[]
    connectOrCreate?: SharedAccountHistoryCreateOrConnectWithoutSharedAccountInput | SharedAccountHistoryCreateOrConnectWithoutSharedAccountInput[]
    createMany?: SharedAccountHistoryCreateManySharedAccountInputEnvelope
    connect?: SharedAccountHistoryWhereUniqueInput | SharedAccountHistoryWhereUniqueInput[]
  }

  export type SoftwareAccessUncheckedCreateNestedManyWithoutSharedAccountInput = {
    create?: XOR<SoftwareAccessCreateWithoutSharedAccountInput, SoftwareAccessUncheckedCreateWithoutSharedAccountInput> | SoftwareAccessCreateWithoutSharedAccountInput[] | SoftwareAccessUncheckedCreateWithoutSharedAccountInput[]
    connectOrCreate?: SoftwareAccessCreateOrConnectWithoutSharedAccountInput | SoftwareAccessCreateOrConnectWithoutSharedAccountInput[]
    createMany?: SoftwareAccessCreateManySharedAccountInputEnvelope
    connect?: SoftwareAccessWhereUniqueInput | SoftwareAccessWhereUniqueInput[]
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneRequiredWithoutSharedAccountNestedInput = {
    create?: XOR<UserCreateWithoutSharedAccountInput, UserUncheckedCreateWithoutSharedAccountInput>
    connectOrCreate?: UserCreateOrConnectWithoutSharedAccountInput
    upsert?: UserUpsertWithoutSharedAccountInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSharedAccountInput, UserUpdateWithoutSharedAccountInput>, UserUncheckedUpdateWithoutSharedAccountInput>
  }

  export type SharedAccountHistoryUpdateManyWithoutSharedAccountNestedInput = {
    create?: XOR<SharedAccountHistoryCreateWithoutSharedAccountInput, SharedAccountHistoryUncheckedCreateWithoutSharedAccountInput> | SharedAccountHistoryCreateWithoutSharedAccountInput[] | SharedAccountHistoryUncheckedCreateWithoutSharedAccountInput[]
    connectOrCreate?: SharedAccountHistoryCreateOrConnectWithoutSharedAccountInput | SharedAccountHistoryCreateOrConnectWithoutSharedAccountInput[]
    upsert?: SharedAccountHistoryUpsertWithWhereUniqueWithoutSharedAccountInput | SharedAccountHistoryUpsertWithWhereUniqueWithoutSharedAccountInput[]
    createMany?: SharedAccountHistoryCreateManySharedAccountInputEnvelope
    set?: SharedAccountHistoryWhereUniqueInput | SharedAccountHistoryWhereUniqueInput[]
    disconnect?: SharedAccountHistoryWhereUniqueInput | SharedAccountHistoryWhereUniqueInput[]
    delete?: SharedAccountHistoryWhereUniqueInput | SharedAccountHistoryWhereUniqueInput[]
    connect?: SharedAccountHistoryWhereUniqueInput | SharedAccountHistoryWhereUniqueInput[]
    update?: SharedAccountHistoryUpdateWithWhereUniqueWithoutSharedAccountInput | SharedAccountHistoryUpdateWithWhereUniqueWithoutSharedAccountInput[]
    updateMany?: SharedAccountHistoryUpdateManyWithWhereWithoutSharedAccountInput | SharedAccountHistoryUpdateManyWithWhereWithoutSharedAccountInput[]
    deleteMany?: SharedAccountHistoryScalarWhereInput | SharedAccountHistoryScalarWhereInput[]
  }

  export type SoftwareAccessUpdateManyWithoutSharedAccountNestedInput = {
    create?: XOR<SoftwareAccessCreateWithoutSharedAccountInput, SoftwareAccessUncheckedCreateWithoutSharedAccountInput> | SoftwareAccessCreateWithoutSharedAccountInput[] | SoftwareAccessUncheckedCreateWithoutSharedAccountInput[]
    connectOrCreate?: SoftwareAccessCreateOrConnectWithoutSharedAccountInput | SoftwareAccessCreateOrConnectWithoutSharedAccountInput[]
    upsert?: SoftwareAccessUpsertWithWhereUniqueWithoutSharedAccountInput | SoftwareAccessUpsertWithWhereUniqueWithoutSharedAccountInput[]
    createMany?: SoftwareAccessCreateManySharedAccountInputEnvelope
    set?: SoftwareAccessWhereUniqueInput | SoftwareAccessWhereUniqueInput[]
    disconnect?: SoftwareAccessWhereUniqueInput | SoftwareAccessWhereUniqueInput[]
    delete?: SoftwareAccessWhereUniqueInput | SoftwareAccessWhereUniqueInput[]
    connect?: SoftwareAccessWhereUniqueInput | SoftwareAccessWhereUniqueInput[]
    update?: SoftwareAccessUpdateWithWhereUniqueWithoutSharedAccountInput | SoftwareAccessUpdateWithWhereUniqueWithoutSharedAccountInput[]
    updateMany?: SoftwareAccessUpdateManyWithWhereWithoutSharedAccountInput | SoftwareAccessUpdateManyWithWhereWithoutSharedAccountInput[]
    deleteMany?: SoftwareAccessScalarWhereInput | SoftwareAccessScalarWhereInput[]
  }

  export type SharedAccountHistoryUncheckedUpdateManyWithoutSharedAccountNestedInput = {
    create?: XOR<SharedAccountHistoryCreateWithoutSharedAccountInput, SharedAccountHistoryUncheckedCreateWithoutSharedAccountInput> | SharedAccountHistoryCreateWithoutSharedAccountInput[] | SharedAccountHistoryUncheckedCreateWithoutSharedAccountInput[]
    connectOrCreate?: SharedAccountHistoryCreateOrConnectWithoutSharedAccountInput | SharedAccountHistoryCreateOrConnectWithoutSharedAccountInput[]
    upsert?: SharedAccountHistoryUpsertWithWhereUniqueWithoutSharedAccountInput | SharedAccountHistoryUpsertWithWhereUniqueWithoutSharedAccountInput[]
    createMany?: SharedAccountHistoryCreateManySharedAccountInputEnvelope
    set?: SharedAccountHistoryWhereUniqueInput | SharedAccountHistoryWhereUniqueInput[]
    disconnect?: SharedAccountHistoryWhereUniqueInput | SharedAccountHistoryWhereUniqueInput[]
    delete?: SharedAccountHistoryWhereUniqueInput | SharedAccountHistoryWhereUniqueInput[]
    connect?: SharedAccountHistoryWhereUniqueInput | SharedAccountHistoryWhereUniqueInput[]
    update?: SharedAccountHistoryUpdateWithWhereUniqueWithoutSharedAccountInput | SharedAccountHistoryUpdateWithWhereUniqueWithoutSharedAccountInput[]
    updateMany?: SharedAccountHistoryUpdateManyWithWhereWithoutSharedAccountInput | SharedAccountHistoryUpdateManyWithWhereWithoutSharedAccountInput[]
    deleteMany?: SharedAccountHistoryScalarWhereInput | SharedAccountHistoryScalarWhereInput[]
  }

  export type SoftwareAccessUncheckedUpdateManyWithoutSharedAccountNestedInput = {
    create?: XOR<SoftwareAccessCreateWithoutSharedAccountInput, SoftwareAccessUncheckedCreateWithoutSharedAccountInput> | SoftwareAccessCreateWithoutSharedAccountInput[] | SoftwareAccessUncheckedCreateWithoutSharedAccountInput[]
    connectOrCreate?: SoftwareAccessCreateOrConnectWithoutSharedAccountInput | SoftwareAccessCreateOrConnectWithoutSharedAccountInput[]
    upsert?: SoftwareAccessUpsertWithWhereUniqueWithoutSharedAccountInput | SoftwareAccessUpsertWithWhereUniqueWithoutSharedAccountInput[]
    createMany?: SoftwareAccessCreateManySharedAccountInputEnvelope
    set?: SoftwareAccessWhereUniqueInput | SoftwareAccessWhereUniqueInput[]
    disconnect?: SoftwareAccessWhereUniqueInput | SoftwareAccessWhereUniqueInput[]
    delete?: SoftwareAccessWhereUniqueInput | SoftwareAccessWhereUniqueInput[]
    connect?: SoftwareAccessWhereUniqueInput | SoftwareAccessWhereUniqueInput[]
    update?: SoftwareAccessUpdateWithWhereUniqueWithoutSharedAccountInput | SoftwareAccessUpdateWithWhereUniqueWithoutSharedAccountInput[]
    updateMany?: SoftwareAccessUpdateManyWithWhereWithoutSharedAccountInput | SoftwareAccessUpdateManyWithWhereWithoutSharedAccountInput[]
    deleteMany?: SoftwareAccessScalarWhereInput | SoftwareAccessScalarWhereInput[]
  }

  export type SharedAccountCreateNestedOneWithoutHistoriesInput = {
    create?: XOR<SharedAccountCreateWithoutHistoriesInput, SharedAccountUncheckedCreateWithoutHistoriesInput>
    connectOrCreate?: SharedAccountCreateOrConnectWithoutHistoriesInput
    connect?: SharedAccountWhereUniqueInput
  }

  export type SharedAccountUpdateOneRequiredWithoutHistoriesNestedInput = {
    create?: XOR<SharedAccountCreateWithoutHistoriesInput, SharedAccountUncheckedCreateWithoutHistoriesInput>
    connectOrCreate?: SharedAccountCreateOrConnectWithoutHistoriesInput
    upsert?: SharedAccountUpsertWithoutHistoriesInput
    connect?: SharedAccountWhereUniqueInput
    update?: XOR<XOR<SharedAccountUpdateToOneWithWhereWithoutHistoriesInput, SharedAccountUpdateWithoutHistoriesInput>, SharedAccountUncheckedUpdateWithoutHistoriesInput>
  }

  export type SoftwareAccessCreatepermissionsInput = {
    set: string[]
  }

  export type SharedAccountCreateNestedOneWithoutSoftwareAccessesInput = {
    create?: XOR<SharedAccountCreateWithoutSoftwareAccessesInput, SharedAccountUncheckedCreateWithoutSoftwareAccessesInput>
    connectOrCreate?: SharedAccountCreateOrConnectWithoutSoftwareAccessesInput
    connect?: SharedAccountWhereUniqueInput
  }

  export type SoftwareCreateNestedOneWithoutSoftwareAccessInput = {
    create?: XOR<SoftwareCreateWithoutSoftwareAccessInput, SoftwareUncheckedCreateWithoutSoftwareAccessInput>
    connectOrCreate?: SoftwareCreateOrConnectWithoutSoftwareAccessInput
    connect?: SoftwareWhereUniqueInput
  }

  export type SoftwareAccessUpdatepermissionsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type SharedAccountUpdateOneRequiredWithoutSoftwareAccessesNestedInput = {
    create?: XOR<SharedAccountCreateWithoutSoftwareAccessesInput, SharedAccountUncheckedCreateWithoutSoftwareAccessesInput>
    connectOrCreate?: SharedAccountCreateOrConnectWithoutSoftwareAccessesInput
    upsert?: SharedAccountUpsertWithoutSoftwareAccessesInput
    connect?: SharedAccountWhereUniqueInput
    update?: XOR<XOR<SharedAccountUpdateToOneWithWhereWithoutSoftwareAccessesInput, SharedAccountUpdateWithoutSoftwareAccessesInput>, SharedAccountUncheckedUpdateWithoutSoftwareAccessesInput>
  }

  export type SoftwareUpdateOneRequiredWithoutSoftwareAccessNestedInput = {
    create?: XOR<SoftwareCreateWithoutSoftwareAccessInput, SoftwareUncheckedCreateWithoutSoftwareAccessInput>
    connectOrCreate?: SoftwareCreateOrConnectWithoutSoftwareAccessInput
    upsert?: SoftwareUpsertWithoutSoftwareAccessInput
    connect?: SoftwareWhereUniqueInput
    update?: XOR<XOR<SoftwareUpdateToOneWithWhereWithoutSoftwareAccessInput, SoftwareUpdateWithoutSoftwareAccessInput>, SoftwareUncheckedUpdateWithoutSoftwareAccessInput>
  }

  export type saml_relay_statesCreateNestedManyWithoutFlow_stateInput = {
    create?: XOR<saml_relay_statesCreateWithoutFlow_stateInput, saml_relay_statesUncheckedCreateWithoutFlow_stateInput> | saml_relay_statesCreateWithoutFlow_stateInput[] | saml_relay_statesUncheckedCreateWithoutFlow_stateInput[]
    connectOrCreate?: saml_relay_statesCreateOrConnectWithoutFlow_stateInput | saml_relay_statesCreateOrConnectWithoutFlow_stateInput[]
    createMany?: saml_relay_statesCreateManyFlow_stateInputEnvelope
    connect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
  }

  export type saml_relay_statesUncheckedCreateNestedManyWithoutFlow_stateInput = {
    create?: XOR<saml_relay_statesCreateWithoutFlow_stateInput, saml_relay_statesUncheckedCreateWithoutFlow_stateInput> | saml_relay_statesCreateWithoutFlow_stateInput[] | saml_relay_statesUncheckedCreateWithoutFlow_stateInput[]
    connectOrCreate?: saml_relay_statesCreateOrConnectWithoutFlow_stateInput | saml_relay_statesCreateOrConnectWithoutFlow_stateInput[]
    createMany?: saml_relay_statesCreateManyFlow_stateInputEnvelope
    connect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
  }

  export type Enumcode_challenge_methodFieldUpdateOperationsInput = {
    set?: $Enums.code_challenge_method
  }

  export type saml_relay_statesUpdateManyWithoutFlow_stateNestedInput = {
    create?: XOR<saml_relay_statesCreateWithoutFlow_stateInput, saml_relay_statesUncheckedCreateWithoutFlow_stateInput> | saml_relay_statesCreateWithoutFlow_stateInput[] | saml_relay_statesUncheckedCreateWithoutFlow_stateInput[]
    connectOrCreate?: saml_relay_statesCreateOrConnectWithoutFlow_stateInput | saml_relay_statesCreateOrConnectWithoutFlow_stateInput[]
    upsert?: saml_relay_statesUpsertWithWhereUniqueWithoutFlow_stateInput | saml_relay_statesUpsertWithWhereUniqueWithoutFlow_stateInput[]
    createMany?: saml_relay_statesCreateManyFlow_stateInputEnvelope
    set?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    disconnect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    delete?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    connect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    update?: saml_relay_statesUpdateWithWhereUniqueWithoutFlow_stateInput | saml_relay_statesUpdateWithWhereUniqueWithoutFlow_stateInput[]
    updateMany?: saml_relay_statesUpdateManyWithWhereWithoutFlow_stateInput | saml_relay_statesUpdateManyWithWhereWithoutFlow_stateInput[]
    deleteMany?: saml_relay_statesScalarWhereInput | saml_relay_statesScalarWhereInput[]
  }

  export type saml_relay_statesUncheckedUpdateManyWithoutFlow_stateNestedInput = {
    create?: XOR<saml_relay_statesCreateWithoutFlow_stateInput, saml_relay_statesUncheckedCreateWithoutFlow_stateInput> | saml_relay_statesCreateWithoutFlow_stateInput[] | saml_relay_statesUncheckedCreateWithoutFlow_stateInput[]
    connectOrCreate?: saml_relay_statesCreateOrConnectWithoutFlow_stateInput | saml_relay_statesCreateOrConnectWithoutFlow_stateInput[]
    upsert?: saml_relay_statesUpsertWithWhereUniqueWithoutFlow_stateInput | saml_relay_statesUpsertWithWhereUniqueWithoutFlow_stateInput[]
    createMany?: saml_relay_statesCreateManyFlow_stateInputEnvelope
    set?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    disconnect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    delete?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    connect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    update?: saml_relay_statesUpdateWithWhereUniqueWithoutFlow_stateInput | saml_relay_statesUpdateWithWhereUniqueWithoutFlow_stateInput[]
    updateMany?: saml_relay_statesUpdateManyWithWhereWithoutFlow_stateInput | saml_relay_statesUpdateManyWithWhereWithoutFlow_stateInput[]
    deleteMany?: saml_relay_statesScalarWhereInput | saml_relay_statesScalarWhereInput[]
  }

  export type usersCreateNestedOneWithoutIdentitiesInput = {
    create?: XOR<usersCreateWithoutIdentitiesInput, usersUncheckedCreateWithoutIdentitiesInput>
    connectOrCreate?: usersCreateOrConnectWithoutIdentitiesInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneRequiredWithoutIdentitiesNestedInput = {
    create?: XOR<usersCreateWithoutIdentitiesInput, usersUncheckedCreateWithoutIdentitiesInput>
    connectOrCreate?: usersCreateOrConnectWithoutIdentitiesInput
    upsert?: usersUpsertWithoutIdentitiesInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutIdentitiesInput, usersUpdateWithoutIdentitiesInput>, usersUncheckedUpdateWithoutIdentitiesInput>
  }

  export type sessionsCreateNestedOneWithoutMfa_amr_claimsInput = {
    create?: XOR<sessionsCreateWithoutMfa_amr_claimsInput, sessionsUncheckedCreateWithoutMfa_amr_claimsInput>
    connectOrCreate?: sessionsCreateOrConnectWithoutMfa_amr_claimsInput
    connect?: sessionsWhereUniqueInput
  }

  export type sessionsUpdateOneRequiredWithoutMfa_amr_claimsNestedInput = {
    create?: XOR<sessionsCreateWithoutMfa_amr_claimsInput, sessionsUncheckedCreateWithoutMfa_amr_claimsInput>
    connectOrCreate?: sessionsCreateOrConnectWithoutMfa_amr_claimsInput
    upsert?: sessionsUpsertWithoutMfa_amr_claimsInput
    connect?: sessionsWhereUniqueInput
    update?: XOR<XOR<sessionsUpdateToOneWithWhereWithoutMfa_amr_claimsInput, sessionsUpdateWithoutMfa_amr_claimsInput>, sessionsUncheckedUpdateWithoutMfa_amr_claimsInput>
  }

  export type mfa_factorsCreateNestedOneWithoutMfa_challengesInput = {
    create?: XOR<mfa_factorsCreateWithoutMfa_challengesInput, mfa_factorsUncheckedCreateWithoutMfa_challengesInput>
    connectOrCreate?: mfa_factorsCreateOrConnectWithoutMfa_challengesInput
    connect?: mfa_factorsWhereUniqueInput
  }

  export type mfa_factorsUpdateOneRequiredWithoutMfa_challengesNestedInput = {
    create?: XOR<mfa_factorsCreateWithoutMfa_challengesInput, mfa_factorsUncheckedCreateWithoutMfa_challengesInput>
    connectOrCreate?: mfa_factorsCreateOrConnectWithoutMfa_challengesInput
    upsert?: mfa_factorsUpsertWithoutMfa_challengesInput
    connect?: mfa_factorsWhereUniqueInput
    update?: XOR<XOR<mfa_factorsUpdateToOneWithWhereWithoutMfa_challengesInput, mfa_factorsUpdateWithoutMfa_challengesInput>, mfa_factorsUncheckedUpdateWithoutMfa_challengesInput>
  }

  export type mfa_challengesCreateNestedManyWithoutMfa_factorsInput = {
    create?: XOR<mfa_challengesCreateWithoutMfa_factorsInput, mfa_challengesUncheckedCreateWithoutMfa_factorsInput> | mfa_challengesCreateWithoutMfa_factorsInput[] | mfa_challengesUncheckedCreateWithoutMfa_factorsInput[]
    connectOrCreate?: mfa_challengesCreateOrConnectWithoutMfa_factorsInput | mfa_challengesCreateOrConnectWithoutMfa_factorsInput[]
    createMany?: mfa_challengesCreateManyMfa_factorsInputEnvelope
    connect?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
  }

  export type usersCreateNestedOneWithoutMfa_factorsInput = {
    create?: XOR<usersCreateWithoutMfa_factorsInput, usersUncheckedCreateWithoutMfa_factorsInput>
    connectOrCreate?: usersCreateOrConnectWithoutMfa_factorsInput
    connect?: usersWhereUniqueInput
  }

  export type mfa_challengesUncheckedCreateNestedManyWithoutMfa_factorsInput = {
    create?: XOR<mfa_challengesCreateWithoutMfa_factorsInput, mfa_challengesUncheckedCreateWithoutMfa_factorsInput> | mfa_challengesCreateWithoutMfa_factorsInput[] | mfa_challengesUncheckedCreateWithoutMfa_factorsInput[]
    connectOrCreate?: mfa_challengesCreateOrConnectWithoutMfa_factorsInput | mfa_challengesCreateOrConnectWithoutMfa_factorsInput[]
    createMany?: mfa_challengesCreateManyMfa_factorsInputEnvelope
    connect?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
  }

  export type Enumfactor_typeFieldUpdateOperationsInput = {
    set?: $Enums.factor_type
  }

  export type Enumfactor_statusFieldUpdateOperationsInput = {
    set?: $Enums.factor_status
  }

  export type mfa_challengesUpdateManyWithoutMfa_factorsNestedInput = {
    create?: XOR<mfa_challengesCreateWithoutMfa_factorsInput, mfa_challengesUncheckedCreateWithoutMfa_factorsInput> | mfa_challengesCreateWithoutMfa_factorsInput[] | mfa_challengesUncheckedCreateWithoutMfa_factorsInput[]
    connectOrCreate?: mfa_challengesCreateOrConnectWithoutMfa_factorsInput | mfa_challengesCreateOrConnectWithoutMfa_factorsInput[]
    upsert?: mfa_challengesUpsertWithWhereUniqueWithoutMfa_factorsInput | mfa_challengesUpsertWithWhereUniqueWithoutMfa_factorsInput[]
    createMany?: mfa_challengesCreateManyMfa_factorsInputEnvelope
    set?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
    disconnect?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
    delete?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
    connect?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
    update?: mfa_challengesUpdateWithWhereUniqueWithoutMfa_factorsInput | mfa_challengesUpdateWithWhereUniqueWithoutMfa_factorsInput[]
    updateMany?: mfa_challengesUpdateManyWithWhereWithoutMfa_factorsInput | mfa_challengesUpdateManyWithWhereWithoutMfa_factorsInput[]
    deleteMany?: mfa_challengesScalarWhereInput | mfa_challengesScalarWhereInput[]
  }

  export type usersUpdateOneRequiredWithoutMfa_factorsNestedInput = {
    create?: XOR<usersCreateWithoutMfa_factorsInput, usersUncheckedCreateWithoutMfa_factorsInput>
    connectOrCreate?: usersCreateOrConnectWithoutMfa_factorsInput
    upsert?: usersUpsertWithoutMfa_factorsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutMfa_factorsInput, usersUpdateWithoutMfa_factorsInput>, usersUncheckedUpdateWithoutMfa_factorsInput>
  }

  export type mfa_challengesUncheckedUpdateManyWithoutMfa_factorsNestedInput = {
    create?: XOR<mfa_challengesCreateWithoutMfa_factorsInput, mfa_challengesUncheckedCreateWithoutMfa_factorsInput> | mfa_challengesCreateWithoutMfa_factorsInput[] | mfa_challengesUncheckedCreateWithoutMfa_factorsInput[]
    connectOrCreate?: mfa_challengesCreateOrConnectWithoutMfa_factorsInput | mfa_challengesCreateOrConnectWithoutMfa_factorsInput[]
    upsert?: mfa_challengesUpsertWithWhereUniqueWithoutMfa_factorsInput | mfa_challengesUpsertWithWhereUniqueWithoutMfa_factorsInput[]
    createMany?: mfa_challengesCreateManyMfa_factorsInputEnvelope
    set?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
    disconnect?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
    delete?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
    connect?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
    update?: mfa_challengesUpdateWithWhereUniqueWithoutMfa_factorsInput | mfa_challengesUpdateWithWhereUniqueWithoutMfa_factorsInput[]
    updateMany?: mfa_challengesUpdateManyWithWhereWithoutMfa_factorsInput | mfa_challengesUpdateManyWithWhereWithoutMfa_factorsInput[]
    deleteMany?: mfa_challengesScalarWhereInput | mfa_challengesScalarWhereInput[]
  }

  export type usersCreateNestedOneWithoutOne_time_tokensInput = {
    create?: XOR<usersCreateWithoutOne_time_tokensInput, usersUncheckedCreateWithoutOne_time_tokensInput>
    connectOrCreate?: usersCreateOrConnectWithoutOne_time_tokensInput
    connect?: usersWhereUniqueInput
  }

  export type Enumone_time_token_typeFieldUpdateOperationsInput = {
    set?: $Enums.one_time_token_type
  }

  export type usersUpdateOneRequiredWithoutOne_time_tokensNestedInput = {
    create?: XOR<usersCreateWithoutOne_time_tokensInput, usersUncheckedCreateWithoutOne_time_tokensInput>
    connectOrCreate?: usersCreateOrConnectWithoutOne_time_tokensInput
    upsert?: usersUpsertWithoutOne_time_tokensInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutOne_time_tokensInput, usersUpdateWithoutOne_time_tokensInput>, usersUncheckedUpdateWithoutOne_time_tokensInput>
  }

  export type sessionsCreateNestedOneWithoutRefresh_tokensInput = {
    create?: XOR<sessionsCreateWithoutRefresh_tokensInput, sessionsUncheckedCreateWithoutRefresh_tokensInput>
    connectOrCreate?: sessionsCreateOrConnectWithoutRefresh_tokensInput
    connect?: sessionsWhereUniqueInput
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type sessionsUpdateOneWithoutRefresh_tokensNestedInput = {
    create?: XOR<sessionsCreateWithoutRefresh_tokensInput, sessionsUncheckedCreateWithoutRefresh_tokensInput>
    connectOrCreate?: sessionsCreateOrConnectWithoutRefresh_tokensInput
    upsert?: sessionsUpsertWithoutRefresh_tokensInput
    disconnect?: sessionsWhereInput | boolean
    delete?: sessionsWhereInput | boolean
    connect?: sessionsWhereUniqueInput
    update?: XOR<XOR<sessionsUpdateToOneWithWhereWithoutRefresh_tokensInput, sessionsUpdateWithoutRefresh_tokensInput>, sessionsUncheckedUpdateWithoutRefresh_tokensInput>
  }

  export type sso_providersCreateNestedOneWithoutSaml_providersInput = {
    create?: XOR<sso_providersCreateWithoutSaml_providersInput, sso_providersUncheckedCreateWithoutSaml_providersInput>
    connectOrCreate?: sso_providersCreateOrConnectWithoutSaml_providersInput
    connect?: sso_providersWhereUniqueInput
  }

  export type sso_providersUpdateOneRequiredWithoutSaml_providersNestedInput = {
    create?: XOR<sso_providersCreateWithoutSaml_providersInput, sso_providersUncheckedCreateWithoutSaml_providersInput>
    connectOrCreate?: sso_providersCreateOrConnectWithoutSaml_providersInput
    upsert?: sso_providersUpsertWithoutSaml_providersInput
    connect?: sso_providersWhereUniqueInput
    update?: XOR<XOR<sso_providersUpdateToOneWithWhereWithoutSaml_providersInput, sso_providersUpdateWithoutSaml_providersInput>, sso_providersUncheckedUpdateWithoutSaml_providersInput>
  }

  export type flow_stateCreateNestedOneWithoutSaml_relay_statesInput = {
    create?: XOR<flow_stateCreateWithoutSaml_relay_statesInput, flow_stateUncheckedCreateWithoutSaml_relay_statesInput>
    connectOrCreate?: flow_stateCreateOrConnectWithoutSaml_relay_statesInput
    connect?: flow_stateWhereUniqueInput
  }

  export type sso_providersCreateNestedOneWithoutSaml_relay_statesInput = {
    create?: XOR<sso_providersCreateWithoutSaml_relay_statesInput, sso_providersUncheckedCreateWithoutSaml_relay_statesInput>
    connectOrCreate?: sso_providersCreateOrConnectWithoutSaml_relay_statesInput
    connect?: sso_providersWhereUniqueInput
  }

  export type flow_stateUpdateOneWithoutSaml_relay_statesNestedInput = {
    create?: XOR<flow_stateCreateWithoutSaml_relay_statesInput, flow_stateUncheckedCreateWithoutSaml_relay_statesInput>
    connectOrCreate?: flow_stateCreateOrConnectWithoutSaml_relay_statesInput
    upsert?: flow_stateUpsertWithoutSaml_relay_statesInput
    disconnect?: flow_stateWhereInput | boolean
    delete?: flow_stateWhereInput | boolean
    connect?: flow_stateWhereUniqueInput
    update?: XOR<XOR<flow_stateUpdateToOneWithWhereWithoutSaml_relay_statesInput, flow_stateUpdateWithoutSaml_relay_statesInput>, flow_stateUncheckedUpdateWithoutSaml_relay_statesInput>
  }

  export type sso_providersUpdateOneRequiredWithoutSaml_relay_statesNestedInput = {
    create?: XOR<sso_providersCreateWithoutSaml_relay_statesInput, sso_providersUncheckedCreateWithoutSaml_relay_statesInput>
    connectOrCreate?: sso_providersCreateOrConnectWithoutSaml_relay_statesInput
    upsert?: sso_providersUpsertWithoutSaml_relay_statesInput
    connect?: sso_providersWhereUniqueInput
    update?: XOR<XOR<sso_providersUpdateToOneWithWhereWithoutSaml_relay_statesInput, sso_providersUpdateWithoutSaml_relay_statesInput>, sso_providersUncheckedUpdateWithoutSaml_relay_statesInput>
  }

  export type mfa_amr_claimsCreateNestedManyWithoutSessionsInput = {
    create?: XOR<mfa_amr_claimsCreateWithoutSessionsInput, mfa_amr_claimsUncheckedCreateWithoutSessionsInput> | mfa_amr_claimsCreateWithoutSessionsInput[] | mfa_amr_claimsUncheckedCreateWithoutSessionsInput[]
    connectOrCreate?: mfa_amr_claimsCreateOrConnectWithoutSessionsInput | mfa_amr_claimsCreateOrConnectWithoutSessionsInput[]
    createMany?: mfa_amr_claimsCreateManySessionsInputEnvelope
    connect?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
  }

  export type refresh_tokensCreateNestedManyWithoutSessionsInput = {
    create?: XOR<refresh_tokensCreateWithoutSessionsInput, refresh_tokensUncheckedCreateWithoutSessionsInput> | refresh_tokensCreateWithoutSessionsInput[] | refresh_tokensUncheckedCreateWithoutSessionsInput[]
    connectOrCreate?: refresh_tokensCreateOrConnectWithoutSessionsInput | refresh_tokensCreateOrConnectWithoutSessionsInput[]
    createMany?: refresh_tokensCreateManySessionsInputEnvelope
    connect?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
  }

  export type usersCreateNestedOneWithoutSessionsInput = {
    create?: XOR<usersCreateWithoutSessionsInput, usersUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: usersCreateOrConnectWithoutSessionsInput
    connect?: usersWhereUniqueInput
  }

  export type mfa_amr_claimsUncheckedCreateNestedManyWithoutSessionsInput = {
    create?: XOR<mfa_amr_claimsCreateWithoutSessionsInput, mfa_amr_claimsUncheckedCreateWithoutSessionsInput> | mfa_amr_claimsCreateWithoutSessionsInput[] | mfa_amr_claimsUncheckedCreateWithoutSessionsInput[]
    connectOrCreate?: mfa_amr_claimsCreateOrConnectWithoutSessionsInput | mfa_amr_claimsCreateOrConnectWithoutSessionsInput[]
    createMany?: mfa_amr_claimsCreateManySessionsInputEnvelope
    connect?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
  }

  export type refresh_tokensUncheckedCreateNestedManyWithoutSessionsInput = {
    create?: XOR<refresh_tokensCreateWithoutSessionsInput, refresh_tokensUncheckedCreateWithoutSessionsInput> | refresh_tokensCreateWithoutSessionsInput[] | refresh_tokensUncheckedCreateWithoutSessionsInput[]
    connectOrCreate?: refresh_tokensCreateOrConnectWithoutSessionsInput | refresh_tokensCreateOrConnectWithoutSessionsInput[]
    createMany?: refresh_tokensCreateManySessionsInputEnvelope
    connect?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
  }

  export type NullableEnumaal_levelFieldUpdateOperationsInput = {
    set?: $Enums.aal_level | null
  }

  export type mfa_amr_claimsUpdateManyWithoutSessionsNestedInput = {
    create?: XOR<mfa_amr_claimsCreateWithoutSessionsInput, mfa_amr_claimsUncheckedCreateWithoutSessionsInput> | mfa_amr_claimsCreateWithoutSessionsInput[] | mfa_amr_claimsUncheckedCreateWithoutSessionsInput[]
    connectOrCreate?: mfa_amr_claimsCreateOrConnectWithoutSessionsInput | mfa_amr_claimsCreateOrConnectWithoutSessionsInput[]
    upsert?: mfa_amr_claimsUpsertWithWhereUniqueWithoutSessionsInput | mfa_amr_claimsUpsertWithWhereUniqueWithoutSessionsInput[]
    createMany?: mfa_amr_claimsCreateManySessionsInputEnvelope
    set?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
    disconnect?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
    delete?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
    connect?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
    update?: mfa_amr_claimsUpdateWithWhereUniqueWithoutSessionsInput | mfa_amr_claimsUpdateWithWhereUniqueWithoutSessionsInput[]
    updateMany?: mfa_amr_claimsUpdateManyWithWhereWithoutSessionsInput | mfa_amr_claimsUpdateManyWithWhereWithoutSessionsInput[]
    deleteMany?: mfa_amr_claimsScalarWhereInput | mfa_amr_claimsScalarWhereInput[]
  }

  export type refresh_tokensUpdateManyWithoutSessionsNestedInput = {
    create?: XOR<refresh_tokensCreateWithoutSessionsInput, refresh_tokensUncheckedCreateWithoutSessionsInput> | refresh_tokensCreateWithoutSessionsInput[] | refresh_tokensUncheckedCreateWithoutSessionsInput[]
    connectOrCreate?: refresh_tokensCreateOrConnectWithoutSessionsInput | refresh_tokensCreateOrConnectWithoutSessionsInput[]
    upsert?: refresh_tokensUpsertWithWhereUniqueWithoutSessionsInput | refresh_tokensUpsertWithWhereUniqueWithoutSessionsInput[]
    createMany?: refresh_tokensCreateManySessionsInputEnvelope
    set?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    disconnect?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    delete?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    connect?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    update?: refresh_tokensUpdateWithWhereUniqueWithoutSessionsInput | refresh_tokensUpdateWithWhereUniqueWithoutSessionsInput[]
    updateMany?: refresh_tokensUpdateManyWithWhereWithoutSessionsInput | refresh_tokensUpdateManyWithWhereWithoutSessionsInput[]
    deleteMany?: refresh_tokensScalarWhereInput | refresh_tokensScalarWhereInput[]
  }

  export type usersUpdateOneRequiredWithoutSessionsNestedInput = {
    create?: XOR<usersCreateWithoutSessionsInput, usersUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: usersCreateOrConnectWithoutSessionsInput
    upsert?: usersUpsertWithoutSessionsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutSessionsInput, usersUpdateWithoutSessionsInput>, usersUncheckedUpdateWithoutSessionsInput>
  }

  export type mfa_amr_claimsUncheckedUpdateManyWithoutSessionsNestedInput = {
    create?: XOR<mfa_amr_claimsCreateWithoutSessionsInput, mfa_amr_claimsUncheckedCreateWithoutSessionsInput> | mfa_amr_claimsCreateWithoutSessionsInput[] | mfa_amr_claimsUncheckedCreateWithoutSessionsInput[]
    connectOrCreate?: mfa_amr_claimsCreateOrConnectWithoutSessionsInput | mfa_amr_claimsCreateOrConnectWithoutSessionsInput[]
    upsert?: mfa_amr_claimsUpsertWithWhereUniqueWithoutSessionsInput | mfa_amr_claimsUpsertWithWhereUniqueWithoutSessionsInput[]
    createMany?: mfa_amr_claimsCreateManySessionsInputEnvelope
    set?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
    disconnect?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
    delete?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
    connect?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
    update?: mfa_amr_claimsUpdateWithWhereUniqueWithoutSessionsInput | mfa_amr_claimsUpdateWithWhereUniqueWithoutSessionsInput[]
    updateMany?: mfa_amr_claimsUpdateManyWithWhereWithoutSessionsInput | mfa_amr_claimsUpdateManyWithWhereWithoutSessionsInput[]
    deleteMany?: mfa_amr_claimsScalarWhereInput | mfa_amr_claimsScalarWhereInput[]
  }

  export type refresh_tokensUncheckedUpdateManyWithoutSessionsNestedInput = {
    create?: XOR<refresh_tokensCreateWithoutSessionsInput, refresh_tokensUncheckedCreateWithoutSessionsInput> | refresh_tokensCreateWithoutSessionsInput[] | refresh_tokensUncheckedCreateWithoutSessionsInput[]
    connectOrCreate?: refresh_tokensCreateOrConnectWithoutSessionsInput | refresh_tokensCreateOrConnectWithoutSessionsInput[]
    upsert?: refresh_tokensUpsertWithWhereUniqueWithoutSessionsInput | refresh_tokensUpsertWithWhereUniqueWithoutSessionsInput[]
    createMany?: refresh_tokensCreateManySessionsInputEnvelope
    set?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    disconnect?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    delete?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    connect?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    update?: refresh_tokensUpdateWithWhereUniqueWithoutSessionsInput | refresh_tokensUpdateWithWhereUniqueWithoutSessionsInput[]
    updateMany?: refresh_tokensUpdateManyWithWhereWithoutSessionsInput | refresh_tokensUpdateManyWithWhereWithoutSessionsInput[]
    deleteMany?: refresh_tokensScalarWhereInput | refresh_tokensScalarWhereInput[]
  }

  export type sso_providersCreateNestedOneWithoutSso_domainsInput = {
    create?: XOR<sso_providersCreateWithoutSso_domainsInput, sso_providersUncheckedCreateWithoutSso_domainsInput>
    connectOrCreate?: sso_providersCreateOrConnectWithoutSso_domainsInput
    connect?: sso_providersWhereUniqueInput
  }

  export type sso_providersUpdateOneRequiredWithoutSso_domainsNestedInput = {
    create?: XOR<sso_providersCreateWithoutSso_domainsInput, sso_providersUncheckedCreateWithoutSso_domainsInput>
    connectOrCreate?: sso_providersCreateOrConnectWithoutSso_domainsInput
    upsert?: sso_providersUpsertWithoutSso_domainsInput
    connect?: sso_providersWhereUniqueInput
    update?: XOR<XOR<sso_providersUpdateToOneWithWhereWithoutSso_domainsInput, sso_providersUpdateWithoutSso_domainsInput>, sso_providersUncheckedUpdateWithoutSso_domainsInput>
  }

  export type saml_providersCreateNestedManyWithoutSso_providersInput = {
    create?: XOR<saml_providersCreateWithoutSso_providersInput, saml_providersUncheckedCreateWithoutSso_providersInput> | saml_providersCreateWithoutSso_providersInput[] | saml_providersUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: saml_providersCreateOrConnectWithoutSso_providersInput | saml_providersCreateOrConnectWithoutSso_providersInput[]
    createMany?: saml_providersCreateManySso_providersInputEnvelope
    connect?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
  }

  export type saml_relay_statesCreateNestedManyWithoutSso_providersInput = {
    create?: XOR<saml_relay_statesCreateWithoutSso_providersInput, saml_relay_statesUncheckedCreateWithoutSso_providersInput> | saml_relay_statesCreateWithoutSso_providersInput[] | saml_relay_statesUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: saml_relay_statesCreateOrConnectWithoutSso_providersInput | saml_relay_statesCreateOrConnectWithoutSso_providersInput[]
    createMany?: saml_relay_statesCreateManySso_providersInputEnvelope
    connect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
  }

  export type sso_domainsCreateNestedManyWithoutSso_providersInput = {
    create?: XOR<sso_domainsCreateWithoutSso_providersInput, sso_domainsUncheckedCreateWithoutSso_providersInput> | sso_domainsCreateWithoutSso_providersInput[] | sso_domainsUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: sso_domainsCreateOrConnectWithoutSso_providersInput | sso_domainsCreateOrConnectWithoutSso_providersInput[]
    createMany?: sso_domainsCreateManySso_providersInputEnvelope
    connect?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
  }

  export type saml_providersUncheckedCreateNestedManyWithoutSso_providersInput = {
    create?: XOR<saml_providersCreateWithoutSso_providersInput, saml_providersUncheckedCreateWithoutSso_providersInput> | saml_providersCreateWithoutSso_providersInput[] | saml_providersUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: saml_providersCreateOrConnectWithoutSso_providersInput | saml_providersCreateOrConnectWithoutSso_providersInput[]
    createMany?: saml_providersCreateManySso_providersInputEnvelope
    connect?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
  }

  export type saml_relay_statesUncheckedCreateNestedManyWithoutSso_providersInput = {
    create?: XOR<saml_relay_statesCreateWithoutSso_providersInput, saml_relay_statesUncheckedCreateWithoutSso_providersInput> | saml_relay_statesCreateWithoutSso_providersInput[] | saml_relay_statesUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: saml_relay_statesCreateOrConnectWithoutSso_providersInput | saml_relay_statesCreateOrConnectWithoutSso_providersInput[]
    createMany?: saml_relay_statesCreateManySso_providersInputEnvelope
    connect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
  }

  export type sso_domainsUncheckedCreateNestedManyWithoutSso_providersInput = {
    create?: XOR<sso_domainsCreateWithoutSso_providersInput, sso_domainsUncheckedCreateWithoutSso_providersInput> | sso_domainsCreateWithoutSso_providersInput[] | sso_domainsUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: sso_domainsCreateOrConnectWithoutSso_providersInput | sso_domainsCreateOrConnectWithoutSso_providersInput[]
    createMany?: sso_domainsCreateManySso_providersInputEnvelope
    connect?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
  }

  export type saml_providersUpdateManyWithoutSso_providersNestedInput = {
    create?: XOR<saml_providersCreateWithoutSso_providersInput, saml_providersUncheckedCreateWithoutSso_providersInput> | saml_providersCreateWithoutSso_providersInput[] | saml_providersUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: saml_providersCreateOrConnectWithoutSso_providersInput | saml_providersCreateOrConnectWithoutSso_providersInput[]
    upsert?: saml_providersUpsertWithWhereUniqueWithoutSso_providersInput | saml_providersUpsertWithWhereUniqueWithoutSso_providersInput[]
    createMany?: saml_providersCreateManySso_providersInputEnvelope
    set?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
    disconnect?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
    delete?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
    connect?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
    update?: saml_providersUpdateWithWhereUniqueWithoutSso_providersInput | saml_providersUpdateWithWhereUniqueWithoutSso_providersInput[]
    updateMany?: saml_providersUpdateManyWithWhereWithoutSso_providersInput | saml_providersUpdateManyWithWhereWithoutSso_providersInput[]
    deleteMany?: saml_providersScalarWhereInput | saml_providersScalarWhereInput[]
  }

  export type saml_relay_statesUpdateManyWithoutSso_providersNestedInput = {
    create?: XOR<saml_relay_statesCreateWithoutSso_providersInput, saml_relay_statesUncheckedCreateWithoutSso_providersInput> | saml_relay_statesCreateWithoutSso_providersInput[] | saml_relay_statesUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: saml_relay_statesCreateOrConnectWithoutSso_providersInput | saml_relay_statesCreateOrConnectWithoutSso_providersInput[]
    upsert?: saml_relay_statesUpsertWithWhereUniqueWithoutSso_providersInput | saml_relay_statesUpsertWithWhereUniqueWithoutSso_providersInput[]
    createMany?: saml_relay_statesCreateManySso_providersInputEnvelope
    set?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    disconnect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    delete?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    connect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    update?: saml_relay_statesUpdateWithWhereUniqueWithoutSso_providersInput | saml_relay_statesUpdateWithWhereUniqueWithoutSso_providersInput[]
    updateMany?: saml_relay_statesUpdateManyWithWhereWithoutSso_providersInput | saml_relay_statesUpdateManyWithWhereWithoutSso_providersInput[]
    deleteMany?: saml_relay_statesScalarWhereInput | saml_relay_statesScalarWhereInput[]
  }

  export type sso_domainsUpdateManyWithoutSso_providersNestedInput = {
    create?: XOR<sso_domainsCreateWithoutSso_providersInput, sso_domainsUncheckedCreateWithoutSso_providersInput> | sso_domainsCreateWithoutSso_providersInput[] | sso_domainsUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: sso_domainsCreateOrConnectWithoutSso_providersInput | sso_domainsCreateOrConnectWithoutSso_providersInput[]
    upsert?: sso_domainsUpsertWithWhereUniqueWithoutSso_providersInput | sso_domainsUpsertWithWhereUniqueWithoutSso_providersInput[]
    createMany?: sso_domainsCreateManySso_providersInputEnvelope
    set?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
    disconnect?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
    delete?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
    connect?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
    update?: sso_domainsUpdateWithWhereUniqueWithoutSso_providersInput | sso_domainsUpdateWithWhereUniqueWithoutSso_providersInput[]
    updateMany?: sso_domainsUpdateManyWithWhereWithoutSso_providersInput | sso_domainsUpdateManyWithWhereWithoutSso_providersInput[]
    deleteMany?: sso_domainsScalarWhereInput | sso_domainsScalarWhereInput[]
  }

  export type saml_providersUncheckedUpdateManyWithoutSso_providersNestedInput = {
    create?: XOR<saml_providersCreateWithoutSso_providersInput, saml_providersUncheckedCreateWithoutSso_providersInput> | saml_providersCreateWithoutSso_providersInput[] | saml_providersUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: saml_providersCreateOrConnectWithoutSso_providersInput | saml_providersCreateOrConnectWithoutSso_providersInput[]
    upsert?: saml_providersUpsertWithWhereUniqueWithoutSso_providersInput | saml_providersUpsertWithWhereUniqueWithoutSso_providersInput[]
    createMany?: saml_providersCreateManySso_providersInputEnvelope
    set?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
    disconnect?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
    delete?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
    connect?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
    update?: saml_providersUpdateWithWhereUniqueWithoutSso_providersInput | saml_providersUpdateWithWhereUniqueWithoutSso_providersInput[]
    updateMany?: saml_providersUpdateManyWithWhereWithoutSso_providersInput | saml_providersUpdateManyWithWhereWithoutSso_providersInput[]
    deleteMany?: saml_providersScalarWhereInput | saml_providersScalarWhereInput[]
  }

  export type saml_relay_statesUncheckedUpdateManyWithoutSso_providersNestedInput = {
    create?: XOR<saml_relay_statesCreateWithoutSso_providersInput, saml_relay_statesUncheckedCreateWithoutSso_providersInput> | saml_relay_statesCreateWithoutSso_providersInput[] | saml_relay_statesUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: saml_relay_statesCreateOrConnectWithoutSso_providersInput | saml_relay_statesCreateOrConnectWithoutSso_providersInput[]
    upsert?: saml_relay_statesUpsertWithWhereUniqueWithoutSso_providersInput | saml_relay_statesUpsertWithWhereUniqueWithoutSso_providersInput[]
    createMany?: saml_relay_statesCreateManySso_providersInputEnvelope
    set?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    disconnect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    delete?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    connect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    update?: saml_relay_statesUpdateWithWhereUniqueWithoutSso_providersInput | saml_relay_statesUpdateWithWhereUniqueWithoutSso_providersInput[]
    updateMany?: saml_relay_statesUpdateManyWithWhereWithoutSso_providersInput | saml_relay_statesUpdateManyWithWhereWithoutSso_providersInput[]
    deleteMany?: saml_relay_statesScalarWhereInput | saml_relay_statesScalarWhereInput[]
  }

  export type sso_domainsUncheckedUpdateManyWithoutSso_providersNestedInput = {
    create?: XOR<sso_domainsCreateWithoutSso_providersInput, sso_domainsUncheckedCreateWithoutSso_providersInput> | sso_domainsCreateWithoutSso_providersInput[] | sso_domainsUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: sso_domainsCreateOrConnectWithoutSso_providersInput | sso_domainsCreateOrConnectWithoutSso_providersInput[]
    upsert?: sso_domainsUpsertWithWhereUniqueWithoutSso_providersInput | sso_domainsUpsertWithWhereUniqueWithoutSso_providersInput[]
    createMany?: sso_domainsCreateManySso_providersInputEnvelope
    set?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
    disconnect?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
    delete?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
    connect?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
    update?: sso_domainsUpdateWithWhereUniqueWithoutSso_providersInput | sso_domainsUpdateWithWhereUniqueWithoutSso_providersInput[]
    updateMany?: sso_domainsUpdateManyWithWhereWithoutSso_providersInput | sso_domainsUpdateManyWithWhereWithoutSso_providersInput[]
    deleteMany?: sso_domainsScalarWhereInput | sso_domainsScalarWhereInput[]
  }

  export type identitiesCreateNestedManyWithoutUsersInput = {
    create?: XOR<identitiesCreateWithoutUsersInput, identitiesUncheckedCreateWithoutUsersInput> | identitiesCreateWithoutUsersInput[] | identitiesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: identitiesCreateOrConnectWithoutUsersInput | identitiesCreateOrConnectWithoutUsersInput[]
    createMany?: identitiesCreateManyUsersInputEnvelope
    connect?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
  }

  export type mfa_factorsCreateNestedManyWithoutUsersInput = {
    create?: XOR<mfa_factorsCreateWithoutUsersInput, mfa_factorsUncheckedCreateWithoutUsersInput> | mfa_factorsCreateWithoutUsersInput[] | mfa_factorsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: mfa_factorsCreateOrConnectWithoutUsersInput | mfa_factorsCreateOrConnectWithoutUsersInput[]
    createMany?: mfa_factorsCreateManyUsersInputEnvelope
    connect?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
  }

  export type one_time_tokensCreateNestedManyWithoutUsersInput = {
    create?: XOR<one_time_tokensCreateWithoutUsersInput, one_time_tokensUncheckedCreateWithoutUsersInput> | one_time_tokensCreateWithoutUsersInput[] | one_time_tokensUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: one_time_tokensCreateOrConnectWithoutUsersInput | one_time_tokensCreateOrConnectWithoutUsersInput[]
    createMany?: one_time_tokensCreateManyUsersInputEnvelope
    connect?: one_time_tokensWhereUniqueInput | one_time_tokensWhereUniqueInput[]
  }

  export type sessionsCreateNestedManyWithoutUsersInput = {
    create?: XOR<sessionsCreateWithoutUsersInput, sessionsUncheckedCreateWithoutUsersInput> | sessionsCreateWithoutUsersInput[] | sessionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: sessionsCreateOrConnectWithoutUsersInput | sessionsCreateOrConnectWithoutUsersInput[]
    createMany?: sessionsCreateManyUsersInputEnvelope
    connect?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
  }

  export type identitiesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<identitiesCreateWithoutUsersInput, identitiesUncheckedCreateWithoutUsersInput> | identitiesCreateWithoutUsersInput[] | identitiesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: identitiesCreateOrConnectWithoutUsersInput | identitiesCreateOrConnectWithoutUsersInput[]
    createMany?: identitiesCreateManyUsersInputEnvelope
    connect?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
  }

  export type mfa_factorsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<mfa_factorsCreateWithoutUsersInput, mfa_factorsUncheckedCreateWithoutUsersInput> | mfa_factorsCreateWithoutUsersInput[] | mfa_factorsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: mfa_factorsCreateOrConnectWithoutUsersInput | mfa_factorsCreateOrConnectWithoutUsersInput[]
    createMany?: mfa_factorsCreateManyUsersInputEnvelope
    connect?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
  }

  export type one_time_tokensUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<one_time_tokensCreateWithoutUsersInput, one_time_tokensUncheckedCreateWithoutUsersInput> | one_time_tokensCreateWithoutUsersInput[] | one_time_tokensUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: one_time_tokensCreateOrConnectWithoutUsersInput | one_time_tokensCreateOrConnectWithoutUsersInput[]
    createMany?: one_time_tokensCreateManyUsersInputEnvelope
    connect?: one_time_tokensWhereUniqueInput | one_time_tokensWhereUniqueInput[]
  }

  export type sessionsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<sessionsCreateWithoutUsersInput, sessionsUncheckedCreateWithoutUsersInput> | sessionsCreateWithoutUsersInput[] | sessionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: sessionsCreateOrConnectWithoutUsersInput | sessionsCreateOrConnectWithoutUsersInput[]
    createMany?: sessionsCreateManyUsersInputEnvelope
    connect?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
  }

  export type identitiesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<identitiesCreateWithoutUsersInput, identitiesUncheckedCreateWithoutUsersInput> | identitiesCreateWithoutUsersInput[] | identitiesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: identitiesCreateOrConnectWithoutUsersInput | identitiesCreateOrConnectWithoutUsersInput[]
    upsert?: identitiesUpsertWithWhereUniqueWithoutUsersInput | identitiesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: identitiesCreateManyUsersInputEnvelope
    set?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
    disconnect?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
    delete?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
    connect?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
    update?: identitiesUpdateWithWhereUniqueWithoutUsersInput | identitiesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: identitiesUpdateManyWithWhereWithoutUsersInput | identitiesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: identitiesScalarWhereInput | identitiesScalarWhereInput[]
  }

  export type mfa_factorsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<mfa_factorsCreateWithoutUsersInput, mfa_factorsUncheckedCreateWithoutUsersInput> | mfa_factorsCreateWithoutUsersInput[] | mfa_factorsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: mfa_factorsCreateOrConnectWithoutUsersInput | mfa_factorsCreateOrConnectWithoutUsersInput[]
    upsert?: mfa_factorsUpsertWithWhereUniqueWithoutUsersInput | mfa_factorsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: mfa_factorsCreateManyUsersInputEnvelope
    set?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
    disconnect?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
    delete?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
    connect?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
    update?: mfa_factorsUpdateWithWhereUniqueWithoutUsersInput | mfa_factorsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: mfa_factorsUpdateManyWithWhereWithoutUsersInput | mfa_factorsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: mfa_factorsScalarWhereInput | mfa_factorsScalarWhereInput[]
  }

  export type one_time_tokensUpdateManyWithoutUsersNestedInput = {
    create?: XOR<one_time_tokensCreateWithoutUsersInput, one_time_tokensUncheckedCreateWithoutUsersInput> | one_time_tokensCreateWithoutUsersInput[] | one_time_tokensUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: one_time_tokensCreateOrConnectWithoutUsersInput | one_time_tokensCreateOrConnectWithoutUsersInput[]
    upsert?: one_time_tokensUpsertWithWhereUniqueWithoutUsersInput | one_time_tokensUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: one_time_tokensCreateManyUsersInputEnvelope
    set?: one_time_tokensWhereUniqueInput | one_time_tokensWhereUniqueInput[]
    disconnect?: one_time_tokensWhereUniqueInput | one_time_tokensWhereUniqueInput[]
    delete?: one_time_tokensWhereUniqueInput | one_time_tokensWhereUniqueInput[]
    connect?: one_time_tokensWhereUniqueInput | one_time_tokensWhereUniqueInput[]
    update?: one_time_tokensUpdateWithWhereUniqueWithoutUsersInput | one_time_tokensUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: one_time_tokensUpdateManyWithWhereWithoutUsersInput | one_time_tokensUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: one_time_tokensScalarWhereInput | one_time_tokensScalarWhereInput[]
  }

  export type sessionsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<sessionsCreateWithoutUsersInput, sessionsUncheckedCreateWithoutUsersInput> | sessionsCreateWithoutUsersInput[] | sessionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: sessionsCreateOrConnectWithoutUsersInput | sessionsCreateOrConnectWithoutUsersInput[]
    upsert?: sessionsUpsertWithWhereUniqueWithoutUsersInput | sessionsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: sessionsCreateManyUsersInputEnvelope
    set?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
    disconnect?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
    delete?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
    connect?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
    update?: sessionsUpdateWithWhereUniqueWithoutUsersInput | sessionsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: sessionsUpdateManyWithWhereWithoutUsersInput | sessionsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: sessionsScalarWhereInput | sessionsScalarWhereInput[]
  }

  export type identitiesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<identitiesCreateWithoutUsersInput, identitiesUncheckedCreateWithoutUsersInput> | identitiesCreateWithoutUsersInput[] | identitiesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: identitiesCreateOrConnectWithoutUsersInput | identitiesCreateOrConnectWithoutUsersInput[]
    upsert?: identitiesUpsertWithWhereUniqueWithoutUsersInput | identitiesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: identitiesCreateManyUsersInputEnvelope
    set?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
    disconnect?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
    delete?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
    connect?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
    update?: identitiesUpdateWithWhereUniqueWithoutUsersInput | identitiesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: identitiesUpdateManyWithWhereWithoutUsersInput | identitiesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: identitiesScalarWhereInput | identitiesScalarWhereInput[]
  }

  export type mfa_factorsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<mfa_factorsCreateWithoutUsersInput, mfa_factorsUncheckedCreateWithoutUsersInput> | mfa_factorsCreateWithoutUsersInput[] | mfa_factorsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: mfa_factorsCreateOrConnectWithoutUsersInput | mfa_factorsCreateOrConnectWithoutUsersInput[]
    upsert?: mfa_factorsUpsertWithWhereUniqueWithoutUsersInput | mfa_factorsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: mfa_factorsCreateManyUsersInputEnvelope
    set?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
    disconnect?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
    delete?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
    connect?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
    update?: mfa_factorsUpdateWithWhereUniqueWithoutUsersInput | mfa_factorsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: mfa_factorsUpdateManyWithWhereWithoutUsersInput | mfa_factorsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: mfa_factorsScalarWhereInput | mfa_factorsScalarWhereInput[]
  }

  export type one_time_tokensUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<one_time_tokensCreateWithoutUsersInput, one_time_tokensUncheckedCreateWithoutUsersInput> | one_time_tokensCreateWithoutUsersInput[] | one_time_tokensUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: one_time_tokensCreateOrConnectWithoutUsersInput | one_time_tokensCreateOrConnectWithoutUsersInput[]
    upsert?: one_time_tokensUpsertWithWhereUniqueWithoutUsersInput | one_time_tokensUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: one_time_tokensCreateManyUsersInputEnvelope
    set?: one_time_tokensWhereUniqueInput | one_time_tokensWhereUniqueInput[]
    disconnect?: one_time_tokensWhereUniqueInput | one_time_tokensWhereUniqueInput[]
    delete?: one_time_tokensWhereUniqueInput | one_time_tokensWhereUniqueInput[]
    connect?: one_time_tokensWhereUniqueInput | one_time_tokensWhereUniqueInput[]
    update?: one_time_tokensUpdateWithWhereUniqueWithoutUsersInput | one_time_tokensUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: one_time_tokensUpdateManyWithWhereWithoutUsersInput | one_time_tokensUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: one_time_tokensScalarWhereInput | one_time_tokensScalarWhereInput[]
  }

  export type sessionsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<sessionsCreateWithoutUsersInput, sessionsUncheckedCreateWithoutUsersInput> | sessionsCreateWithoutUsersInput[] | sessionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: sessionsCreateOrConnectWithoutUsersInput | sessionsCreateOrConnectWithoutUsersInput[]
    upsert?: sessionsUpsertWithWhereUniqueWithoutUsersInput | sessionsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: sessionsCreateManyUsersInputEnvelope
    set?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
    disconnect?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
    delete?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
    connect?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
    update?: sessionsUpdateWithWhereUniqueWithoutUsersInput | sessionsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: sessionsUpdateManyWithWhereWithoutUsersInput | sessionsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: sessionsScalarWhereInput | sessionsScalarWhereInput[]
  }

  export type bucketsCreateallowed_mime_typesInput = {
    set: string[]
  }

  export type objectsCreateNestedManyWithoutBucketsInput = {
    create?: XOR<objectsCreateWithoutBucketsInput, objectsUncheckedCreateWithoutBucketsInput> | objectsCreateWithoutBucketsInput[] | objectsUncheckedCreateWithoutBucketsInput[]
    connectOrCreate?: objectsCreateOrConnectWithoutBucketsInput | objectsCreateOrConnectWithoutBucketsInput[]
    createMany?: objectsCreateManyBucketsInputEnvelope
    connect?: objectsWhereUniqueInput | objectsWhereUniqueInput[]
  }

  export type s3_multipart_uploadsCreateNestedManyWithoutBucketsInput = {
    create?: XOR<s3_multipart_uploadsCreateWithoutBucketsInput, s3_multipart_uploadsUncheckedCreateWithoutBucketsInput> | s3_multipart_uploadsCreateWithoutBucketsInput[] | s3_multipart_uploadsUncheckedCreateWithoutBucketsInput[]
    connectOrCreate?: s3_multipart_uploadsCreateOrConnectWithoutBucketsInput | s3_multipart_uploadsCreateOrConnectWithoutBucketsInput[]
    createMany?: s3_multipart_uploadsCreateManyBucketsInputEnvelope
    connect?: s3_multipart_uploadsWhereUniqueInput | s3_multipart_uploadsWhereUniqueInput[]
  }

  export type s3_multipart_uploads_partsCreateNestedManyWithoutBucketsInput = {
    create?: XOR<s3_multipart_uploads_partsCreateWithoutBucketsInput, s3_multipart_uploads_partsUncheckedCreateWithoutBucketsInput> | s3_multipart_uploads_partsCreateWithoutBucketsInput[] | s3_multipart_uploads_partsUncheckedCreateWithoutBucketsInput[]
    connectOrCreate?: s3_multipart_uploads_partsCreateOrConnectWithoutBucketsInput | s3_multipart_uploads_partsCreateOrConnectWithoutBucketsInput[]
    createMany?: s3_multipart_uploads_partsCreateManyBucketsInputEnvelope
    connect?: s3_multipart_uploads_partsWhereUniqueInput | s3_multipart_uploads_partsWhereUniqueInput[]
  }

  export type objectsUncheckedCreateNestedManyWithoutBucketsInput = {
    create?: XOR<objectsCreateWithoutBucketsInput, objectsUncheckedCreateWithoutBucketsInput> | objectsCreateWithoutBucketsInput[] | objectsUncheckedCreateWithoutBucketsInput[]
    connectOrCreate?: objectsCreateOrConnectWithoutBucketsInput | objectsCreateOrConnectWithoutBucketsInput[]
    createMany?: objectsCreateManyBucketsInputEnvelope
    connect?: objectsWhereUniqueInput | objectsWhereUniqueInput[]
  }

  export type s3_multipart_uploadsUncheckedCreateNestedManyWithoutBucketsInput = {
    create?: XOR<s3_multipart_uploadsCreateWithoutBucketsInput, s3_multipart_uploadsUncheckedCreateWithoutBucketsInput> | s3_multipart_uploadsCreateWithoutBucketsInput[] | s3_multipart_uploadsUncheckedCreateWithoutBucketsInput[]
    connectOrCreate?: s3_multipart_uploadsCreateOrConnectWithoutBucketsInput | s3_multipart_uploadsCreateOrConnectWithoutBucketsInput[]
    createMany?: s3_multipart_uploadsCreateManyBucketsInputEnvelope
    connect?: s3_multipart_uploadsWhereUniqueInput | s3_multipart_uploadsWhereUniqueInput[]
  }

  export type s3_multipart_uploads_partsUncheckedCreateNestedManyWithoutBucketsInput = {
    create?: XOR<s3_multipart_uploads_partsCreateWithoutBucketsInput, s3_multipart_uploads_partsUncheckedCreateWithoutBucketsInput> | s3_multipart_uploads_partsCreateWithoutBucketsInput[] | s3_multipart_uploads_partsUncheckedCreateWithoutBucketsInput[]
    connectOrCreate?: s3_multipart_uploads_partsCreateOrConnectWithoutBucketsInput | s3_multipart_uploads_partsCreateOrConnectWithoutBucketsInput[]
    createMany?: s3_multipart_uploads_partsCreateManyBucketsInputEnvelope
    connect?: s3_multipart_uploads_partsWhereUniqueInput | s3_multipart_uploads_partsWhereUniqueInput[]
  }

  export type NullableBigIntFieldUpdateOperationsInput = {
    set?: bigint | number | null
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type bucketsUpdateallowed_mime_typesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type objectsUpdateManyWithoutBucketsNestedInput = {
    create?: XOR<objectsCreateWithoutBucketsInput, objectsUncheckedCreateWithoutBucketsInput> | objectsCreateWithoutBucketsInput[] | objectsUncheckedCreateWithoutBucketsInput[]
    connectOrCreate?: objectsCreateOrConnectWithoutBucketsInput | objectsCreateOrConnectWithoutBucketsInput[]
    upsert?: objectsUpsertWithWhereUniqueWithoutBucketsInput | objectsUpsertWithWhereUniqueWithoutBucketsInput[]
    createMany?: objectsCreateManyBucketsInputEnvelope
    set?: objectsWhereUniqueInput | objectsWhereUniqueInput[]
    disconnect?: objectsWhereUniqueInput | objectsWhereUniqueInput[]
    delete?: objectsWhereUniqueInput | objectsWhereUniqueInput[]
    connect?: objectsWhereUniqueInput | objectsWhereUniqueInput[]
    update?: objectsUpdateWithWhereUniqueWithoutBucketsInput | objectsUpdateWithWhereUniqueWithoutBucketsInput[]
    updateMany?: objectsUpdateManyWithWhereWithoutBucketsInput | objectsUpdateManyWithWhereWithoutBucketsInput[]
    deleteMany?: objectsScalarWhereInput | objectsScalarWhereInput[]
  }

  export type s3_multipart_uploadsUpdateManyWithoutBucketsNestedInput = {
    create?: XOR<s3_multipart_uploadsCreateWithoutBucketsInput, s3_multipart_uploadsUncheckedCreateWithoutBucketsInput> | s3_multipart_uploadsCreateWithoutBucketsInput[] | s3_multipart_uploadsUncheckedCreateWithoutBucketsInput[]
    connectOrCreate?: s3_multipart_uploadsCreateOrConnectWithoutBucketsInput | s3_multipart_uploadsCreateOrConnectWithoutBucketsInput[]
    upsert?: s3_multipart_uploadsUpsertWithWhereUniqueWithoutBucketsInput | s3_multipart_uploadsUpsertWithWhereUniqueWithoutBucketsInput[]
    createMany?: s3_multipart_uploadsCreateManyBucketsInputEnvelope
    set?: s3_multipart_uploadsWhereUniqueInput | s3_multipart_uploadsWhereUniqueInput[]
    disconnect?: s3_multipart_uploadsWhereUniqueInput | s3_multipart_uploadsWhereUniqueInput[]
    delete?: s3_multipart_uploadsWhereUniqueInput | s3_multipart_uploadsWhereUniqueInput[]
    connect?: s3_multipart_uploadsWhereUniqueInput | s3_multipart_uploadsWhereUniqueInput[]
    update?: s3_multipart_uploadsUpdateWithWhereUniqueWithoutBucketsInput | s3_multipart_uploadsUpdateWithWhereUniqueWithoutBucketsInput[]
    updateMany?: s3_multipart_uploadsUpdateManyWithWhereWithoutBucketsInput | s3_multipart_uploadsUpdateManyWithWhereWithoutBucketsInput[]
    deleteMany?: s3_multipart_uploadsScalarWhereInput | s3_multipart_uploadsScalarWhereInput[]
  }

  export type s3_multipart_uploads_partsUpdateManyWithoutBucketsNestedInput = {
    create?: XOR<s3_multipart_uploads_partsCreateWithoutBucketsInput, s3_multipart_uploads_partsUncheckedCreateWithoutBucketsInput> | s3_multipart_uploads_partsCreateWithoutBucketsInput[] | s3_multipart_uploads_partsUncheckedCreateWithoutBucketsInput[]
    connectOrCreate?: s3_multipart_uploads_partsCreateOrConnectWithoutBucketsInput | s3_multipart_uploads_partsCreateOrConnectWithoutBucketsInput[]
    upsert?: s3_multipart_uploads_partsUpsertWithWhereUniqueWithoutBucketsInput | s3_multipart_uploads_partsUpsertWithWhereUniqueWithoutBucketsInput[]
    createMany?: s3_multipart_uploads_partsCreateManyBucketsInputEnvelope
    set?: s3_multipart_uploads_partsWhereUniqueInput | s3_multipart_uploads_partsWhereUniqueInput[]
    disconnect?: s3_multipart_uploads_partsWhereUniqueInput | s3_multipart_uploads_partsWhereUniqueInput[]
    delete?: s3_multipart_uploads_partsWhereUniqueInput | s3_multipart_uploads_partsWhereUniqueInput[]
    connect?: s3_multipart_uploads_partsWhereUniqueInput | s3_multipart_uploads_partsWhereUniqueInput[]
    update?: s3_multipart_uploads_partsUpdateWithWhereUniqueWithoutBucketsInput | s3_multipart_uploads_partsUpdateWithWhereUniqueWithoutBucketsInput[]
    updateMany?: s3_multipart_uploads_partsUpdateManyWithWhereWithoutBucketsInput | s3_multipart_uploads_partsUpdateManyWithWhereWithoutBucketsInput[]
    deleteMany?: s3_multipart_uploads_partsScalarWhereInput | s3_multipart_uploads_partsScalarWhereInput[]
  }

  export type objectsUncheckedUpdateManyWithoutBucketsNestedInput = {
    create?: XOR<objectsCreateWithoutBucketsInput, objectsUncheckedCreateWithoutBucketsInput> | objectsCreateWithoutBucketsInput[] | objectsUncheckedCreateWithoutBucketsInput[]
    connectOrCreate?: objectsCreateOrConnectWithoutBucketsInput | objectsCreateOrConnectWithoutBucketsInput[]
    upsert?: objectsUpsertWithWhereUniqueWithoutBucketsInput | objectsUpsertWithWhereUniqueWithoutBucketsInput[]
    createMany?: objectsCreateManyBucketsInputEnvelope
    set?: objectsWhereUniqueInput | objectsWhereUniqueInput[]
    disconnect?: objectsWhereUniqueInput | objectsWhereUniqueInput[]
    delete?: objectsWhereUniqueInput | objectsWhereUniqueInput[]
    connect?: objectsWhereUniqueInput | objectsWhereUniqueInput[]
    update?: objectsUpdateWithWhereUniqueWithoutBucketsInput | objectsUpdateWithWhereUniqueWithoutBucketsInput[]
    updateMany?: objectsUpdateManyWithWhereWithoutBucketsInput | objectsUpdateManyWithWhereWithoutBucketsInput[]
    deleteMany?: objectsScalarWhereInput | objectsScalarWhereInput[]
  }

  export type s3_multipart_uploadsUncheckedUpdateManyWithoutBucketsNestedInput = {
    create?: XOR<s3_multipart_uploadsCreateWithoutBucketsInput, s3_multipart_uploadsUncheckedCreateWithoutBucketsInput> | s3_multipart_uploadsCreateWithoutBucketsInput[] | s3_multipart_uploadsUncheckedCreateWithoutBucketsInput[]
    connectOrCreate?: s3_multipart_uploadsCreateOrConnectWithoutBucketsInput | s3_multipart_uploadsCreateOrConnectWithoutBucketsInput[]
    upsert?: s3_multipart_uploadsUpsertWithWhereUniqueWithoutBucketsInput | s3_multipart_uploadsUpsertWithWhereUniqueWithoutBucketsInput[]
    createMany?: s3_multipart_uploadsCreateManyBucketsInputEnvelope
    set?: s3_multipart_uploadsWhereUniqueInput | s3_multipart_uploadsWhereUniqueInput[]
    disconnect?: s3_multipart_uploadsWhereUniqueInput | s3_multipart_uploadsWhereUniqueInput[]
    delete?: s3_multipart_uploadsWhereUniqueInput | s3_multipart_uploadsWhereUniqueInput[]
    connect?: s3_multipart_uploadsWhereUniqueInput | s3_multipart_uploadsWhereUniqueInput[]
    update?: s3_multipart_uploadsUpdateWithWhereUniqueWithoutBucketsInput | s3_multipart_uploadsUpdateWithWhereUniqueWithoutBucketsInput[]
    updateMany?: s3_multipart_uploadsUpdateManyWithWhereWithoutBucketsInput | s3_multipart_uploadsUpdateManyWithWhereWithoutBucketsInput[]
    deleteMany?: s3_multipart_uploadsScalarWhereInput | s3_multipart_uploadsScalarWhereInput[]
  }

  export type s3_multipart_uploads_partsUncheckedUpdateManyWithoutBucketsNestedInput = {
    create?: XOR<s3_multipart_uploads_partsCreateWithoutBucketsInput, s3_multipart_uploads_partsUncheckedCreateWithoutBucketsInput> | s3_multipart_uploads_partsCreateWithoutBucketsInput[] | s3_multipart_uploads_partsUncheckedCreateWithoutBucketsInput[]
    connectOrCreate?: s3_multipart_uploads_partsCreateOrConnectWithoutBucketsInput | s3_multipart_uploads_partsCreateOrConnectWithoutBucketsInput[]
    upsert?: s3_multipart_uploads_partsUpsertWithWhereUniqueWithoutBucketsInput | s3_multipart_uploads_partsUpsertWithWhereUniqueWithoutBucketsInput[]
    createMany?: s3_multipart_uploads_partsCreateManyBucketsInputEnvelope
    set?: s3_multipart_uploads_partsWhereUniqueInput | s3_multipart_uploads_partsWhereUniqueInput[]
    disconnect?: s3_multipart_uploads_partsWhereUniqueInput | s3_multipart_uploads_partsWhereUniqueInput[]
    delete?: s3_multipart_uploads_partsWhereUniqueInput | s3_multipart_uploads_partsWhereUniqueInput[]
    connect?: s3_multipart_uploads_partsWhereUniqueInput | s3_multipart_uploads_partsWhereUniqueInput[]
    update?: s3_multipart_uploads_partsUpdateWithWhereUniqueWithoutBucketsInput | s3_multipart_uploads_partsUpdateWithWhereUniqueWithoutBucketsInput[]
    updateMany?: s3_multipart_uploads_partsUpdateManyWithWhereWithoutBucketsInput | s3_multipart_uploads_partsUpdateManyWithWhereWithoutBucketsInput[]
    deleteMany?: s3_multipart_uploads_partsScalarWhereInput | s3_multipart_uploads_partsScalarWhereInput[]
  }

  export type objectsCreatepath_tokensInput = {
    set: string[]
  }

  export type bucketsCreateNestedOneWithoutObjectsInput = {
    create?: XOR<bucketsCreateWithoutObjectsInput, bucketsUncheckedCreateWithoutObjectsInput>
    connectOrCreate?: bucketsCreateOrConnectWithoutObjectsInput
    connect?: bucketsWhereUniqueInput
  }

  export type objectsUpdatepath_tokensInput = {
    set?: string[]
    push?: string | string[]
  }

  export type bucketsUpdateOneWithoutObjectsNestedInput = {
    create?: XOR<bucketsCreateWithoutObjectsInput, bucketsUncheckedCreateWithoutObjectsInput>
    connectOrCreate?: bucketsCreateOrConnectWithoutObjectsInput
    upsert?: bucketsUpsertWithoutObjectsInput
    disconnect?: bucketsWhereInput | boolean
    delete?: bucketsWhereInput | boolean
    connect?: bucketsWhereUniqueInput
    update?: XOR<XOR<bucketsUpdateToOneWithWhereWithoutObjectsInput, bucketsUpdateWithoutObjectsInput>, bucketsUncheckedUpdateWithoutObjectsInput>
  }

  export type bucketsCreateNestedOneWithoutS3_multipart_uploadsInput = {
    create?: XOR<bucketsCreateWithoutS3_multipart_uploadsInput, bucketsUncheckedCreateWithoutS3_multipart_uploadsInput>
    connectOrCreate?: bucketsCreateOrConnectWithoutS3_multipart_uploadsInput
    connect?: bucketsWhereUniqueInput
  }

  export type s3_multipart_uploads_partsCreateNestedManyWithoutS3_multipart_uploadsInput = {
    create?: XOR<s3_multipart_uploads_partsCreateWithoutS3_multipart_uploadsInput, s3_multipart_uploads_partsUncheckedCreateWithoutS3_multipart_uploadsInput> | s3_multipart_uploads_partsCreateWithoutS3_multipart_uploadsInput[] | s3_multipart_uploads_partsUncheckedCreateWithoutS3_multipart_uploadsInput[]
    connectOrCreate?: s3_multipart_uploads_partsCreateOrConnectWithoutS3_multipart_uploadsInput | s3_multipart_uploads_partsCreateOrConnectWithoutS3_multipart_uploadsInput[]
    createMany?: s3_multipart_uploads_partsCreateManyS3_multipart_uploadsInputEnvelope
    connect?: s3_multipart_uploads_partsWhereUniqueInput | s3_multipart_uploads_partsWhereUniqueInput[]
  }

  export type s3_multipart_uploads_partsUncheckedCreateNestedManyWithoutS3_multipart_uploadsInput = {
    create?: XOR<s3_multipart_uploads_partsCreateWithoutS3_multipart_uploadsInput, s3_multipart_uploads_partsUncheckedCreateWithoutS3_multipart_uploadsInput> | s3_multipart_uploads_partsCreateWithoutS3_multipart_uploadsInput[] | s3_multipart_uploads_partsUncheckedCreateWithoutS3_multipart_uploadsInput[]
    connectOrCreate?: s3_multipart_uploads_partsCreateOrConnectWithoutS3_multipart_uploadsInput | s3_multipart_uploads_partsCreateOrConnectWithoutS3_multipart_uploadsInput[]
    createMany?: s3_multipart_uploads_partsCreateManyS3_multipart_uploadsInputEnvelope
    connect?: s3_multipart_uploads_partsWhereUniqueInput | s3_multipart_uploads_partsWhereUniqueInput[]
  }

  export type bucketsUpdateOneRequiredWithoutS3_multipart_uploadsNestedInput = {
    create?: XOR<bucketsCreateWithoutS3_multipart_uploadsInput, bucketsUncheckedCreateWithoutS3_multipart_uploadsInput>
    connectOrCreate?: bucketsCreateOrConnectWithoutS3_multipart_uploadsInput
    upsert?: bucketsUpsertWithoutS3_multipart_uploadsInput
    connect?: bucketsWhereUniqueInput
    update?: XOR<XOR<bucketsUpdateToOneWithWhereWithoutS3_multipart_uploadsInput, bucketsUpdateWithoutS3_multipart_uploadsInput>, bucketsUncheckedUpdateWithoutS3_multipart_uploadsInput>
  }

  export type s3_multipart_uploads_partsUpdateManyWithoutS3_multipart_uploadsNestedInput = {
    create?: XOR<s3_multipart_uploads_partsCreateWithoutS3_multipart_uploadsInput, s3_multipart_uploads_partsUncheckedCreateWithoutS3_multipart_uploadsInput> | s3_multipart_uploads_partsCreateWithoutS3_multipart_uploadsInput[] | s3_multipart_uploads_partsUncheckedCreateWithoutS3_multipart_uploadsInput[]
    connectOrCreate?: s3_multipart_uploads_partsCreateOrConnectWithoutS3_multipart_uploadsInput | s3_multipart_uploads_partsCreateOrConnectWithoutS3_multipart_uploadsInput[]
    upsert?: s3_multipart_uploads_partsUpsertWithWhereUniqueWithoutS3_multipart_uploadsInput | s3_multipart_uploads_partsUpsertWithWhereUniqueWithoutS3_multipart_uploadsInput[]
    createMany?: s3_multipart_uploads_partsCreateManyS3_multipart_uploadsInputEnvelope
    set?: s3_multipart_uploads_partsWhereUniqueInput | s3_multipart_uploads_partsWhereUniqueInput[]
    disconnect?: s3_multipart_uploads_partsWhereUniqueInput | s3_multipart_uploads_partsWhereUniqueInput[]
    delete?: s3_multipart_uploads_partsWhereUniqueInput | s3_multipart_uploads_partsWhereUniqueInput[]
    connect?: s3_multipart_uploads_partsWhereUniqueInput | s3_multipart_uploads_partsWhereUniqueInput[]
    update?: s3_multipart_uploads_partsUpdateWithWhereUniqueWithoutS3_multipart_uploadsInput | s3_multipart_uploads_partsUpdateWithWhereUniqueWithoutS3_multipart_uploadsInput[]
    updateMany?: s3_multipart_uploads_partsUpdateManyWithWhereWithoutS3_multipart_uploadsInput | s3_multipart_uploads_partsUpdateManyWithWhereWithoutS3_multipart_uploadsInput[]
    deleteMany?: s3_multipart_uploads_partsScalarWhereInput | s3_multipart_uploads_partsScalarWhereInput[]
  }

  export type s3_multipart_uploads_partsUncheckedUpdateManyWithoutS3_multipart_uploadsNestedInput = {
    create?: XOR<s3_multipart_uploads_partsCreateWithoutS3_multipart_uploadsInput, s3_multipart_uploads_partsUncheckedCreateWithoutS3_multipart_uploadsInput> | s3_multipart_uploads_partsCreateWithoutS3_multipart_uploadsInput[] | s3_multipart_uploads_partsUncheckedCreateWithoutS3_multipart_uploadsInput[]
    connectOrCreate?: s3_multipart_uploads_partsCreateOrConnectWithoutS3_multipart_uploadsInput | s3_multipart_uploads_partsCreateOrConnectWithoutS3_multipart_uploadsInput[]
    upsert?: s3_multipart_uploads_partsUpsertWithWhereUniqueWithoutS3_multipart_uploadsInput | s3_multipart_uploads_partsUpsertWithWhereUniqueWithoutS3_multipart_uploadsInput[]
    createMany?: s3_multipart_uploads_partsCreateManyS3_multipart_uploadsInputEnvelope
    set?: s3_multipart_uploads_partsWhereUniqueInput | s3_multipart_uploads_partsWhereUniqueInput[]
    disconnect?: s3_multipart_uploads_partsWhereUniqueInput | s3_multipart_uploads_partsWhereUniqueInput[]
    delete?: s3_multipart_uploads_partsWhereUniqueInput | s3_multipart_uploads_partsWhereUniqueInput[]
    connect?: s3_multipart_uploads_partsWhereUniqueInput | s3_multipart_uploads_partsWhereUniqueInput[]
    update?: s3_multipart_uploads_partsUpdateWithWhereUniqueWithoutS3_multipart_uploadsInput | s3_multipart_uploads_partsUpdateWithWhereUniqueWithoutS3_multipart_uploadsInput[]
    updateMany?: s3_multipart_uploads_partsUpdateManyWithWhereWithoutS3_multipart_uploadsInput | s3_multipart_uploads_partsUpdateManyWithWhereWithoutS3_multipart_uploadsInput[]
    deleteMany?: s3_multipart_uploads_partsScalarWhereInput | s3_multipart_uploads_partsScalarWhereInput[]
  }

  export type bucketsCreateNestedOneWithoutS3_multipart_uploads_partsInput = {
    create?: XOR<bucketsCreateWithoutS3_multipart_uploads_partsInput, bucketsUncheckedCreateWithoutS3_multipart_uploads_partsInput>
    connectOrCreate?: bucketsCreateOrConnectWithoutS3_multipart_uploads_partsInput
    connect?: bucketsWhereUniqueInput
  }

  export type s3_multipart_uploadsCreateNestedOneWithoutS3_multipart_uploads_partsInput = {
    create?: XOR<s3_multipart_uploadsCreateWithoutS3_multipart_uploads_partsInput, s3_multipart_uploadsUncheckedCreateWithoutS3_multipart_uploads_partsInput>
    connectOrCreate?: s3_multipart_uploadsCreateOrConnectWithoutS3_multipart_uploads_partsInput
    connect?: s3_multipart_uploadsWhereUniqueInput
  }

  export type bucketsUpdateOneRequiredWithoutS3_multipart_uploads_partsNestedInput = {
    create?: XOR<bucketsCreateWithoutS3_multipart_uploads_partsInput, bucketsUncheckedCreateWithoutS3_multipart_uploads_partsInput>
    connectOrCreate?: bucketsCreateOrConnectWithoutS3_multipart_uploads_partsInput
    upsert?: bucketsUpsertWithoutS3_multipart_uploads_partsInput
    connect?: bucketsWhereUniqueInput
    update?: XOR<XOR<bucketsUpdateToOneWithWhereWithoutS3_multipart_uploads_partsInput, bucketsUpdateWithoutS3_multipart_uploads_partsInput>, bucketsUncheckedUpdateWithoutS3_multipart_uploads_partsInput>
  }

  export type s3_multipart_uploadsUpdateOneRequiredWithoutS3_multipart_uploads_partsNestedInput = {
    create?: XOR<s3_multipart_uploadsCreateWithoutS3_multipart_uploads_partsInput, s3_multipart_uploadsUncheckedCreateWithoutS3_multipart_uploads_partsInput>
    connectOrCreate?: s3_multipart_uploadsCreateOrConnectWithoutS3_multipart_uploads_partsInput
    upsert?: s3_multipart_uploadsUpsertWithoutS3_multipart_uploads_partsInput
    connect?: s3_multipart_uploadsWhereUniqueInput
    update?: XOR<XOR<s3_multipart_uploadsUpdateToOneWithWhereWithoutS3_multipart_uploads_partsInput, s3_multipart_uploadsUpdateWithoutS3_multipart_uploads_partsInput>, s3_multipart_uploadsUncheckedUpdateWithoutS3_multipart_uploads_partsInput>
  }

  export type NestedUuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumPaymentFrequencyFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentFrequency | EnumPaymentFrequencyFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentFrequency[] | ListEnumPaymentFrequencyFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentFrequency[] | ListEnumPaymentFrequencyFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentFrequencyFilter<$PrismaModel> | $Enums.PaymentFrequency
  }

  export type NestedEnumPaymentMethodFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodFilter<$PrismaModel> | $Enums.PaymentMethod
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumPaymentFrequencyWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentFrequency | EnumPaymentFrequencyFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentFrequency[] | ListEnumPaymentFrequencyFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentFrequency[] | ListEnumPaymentFrequencyFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentFrequencyWithAggregatesFilter<$PrismaModel> | $Enums.PaymentFrequency
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentFrequencyFilter<$PrismaModel>
    _max?: NestedEnumPaymentFrequencyFilter<$PrismaModel>
  }

  export type NestedEnumPaymentMethodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodWithAggregatesFilter<$PrismaModel> | $Enums.PaymentMethod
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentMethodFilter<$PrismaModel>
    _max?: NestedEnumPaymentMethodFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedUuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type NestedUuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumcode_challenge_methodFilter<$PrismaModel = never> = {
    equals?: $Enums.code_challenge_method | Enumcode_challenge_methodFieldRefInput<$PrismaModel>
    in?: $Enums.code_challenge_method[] | ListEnumcode_challenge_methodFieldRefInput<$PrismaModel>
    notIn?: $Enums.code_challenge_method[] | ListEnumcode_challenge_methodFieldRefInput<$PrismaModel>
    not?: NestedEnumcode_challenge_methodFilter<$PrismaModel> | $Enums.code_challenge_method
  }

  export type NestedEnumcode_challenge_methodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.code_challenge_method | Enumcode_challenge_methodFieldRefInput<$PrismaModel>
    in?: $Enums.code_challenge_method[] | ListEnumcode_challenge_methodFieldRefInput<$PrismaModel>
    notIn?: $Enums.code_challenge_method[] | ListEnumcode_challenge_methodFieldRefInput<$PrismaModel>
    not?: NestedEnumcode_challenge_methodWithAggregatesFilter<$PrismaModel> | $Enums.code_challenge_method
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumcode_challenge_methodFilter<$PrismaModel>
    _max?: NestedEnumcode_challenge_methodFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumfactor_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.factor_type | Enumfactor_typeFieldRefInput<$PrismaModel>
    in?: $Enums.factor_type[] | ListEnumfactor_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.factor_type[] | ListEnumfactor_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumfactor_typeFilter<$PrismaModel> | $Enums.factor_type
  }

  export type NestedEnumfactor_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.factor_status | Enumfactor_statusFieldRefInput<$PrismaModel>
    in?: $Enums.factor_status[] | ListEnumfactor_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.factor_status[] | ListEnumfactor_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumfactor_statusFilter<$PrismaModel> | $Enums.factor_status
  }

  export type NestedEnumfactor_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.factor_type | Enumfactor_typeFieldRefInput<$PrismaModel>
    in?: $Enums.factor_type[] | ListEnumfactor_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.factor_type[] | ListEnumfactor_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumfactor_typeWithAggregatesFilter<$PrismaModel> | $Enums.factor_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumfactor_typeFilter<$PrismaModel>
    _max?: NestedEnumfactor_typeFilter<$PrismaModel>
  }

  export type NestedEnumfactor_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.factor_status | Enumfactor_statusFieldRefInput<$PrismaModel>
    in?: $Enums.factor_status[] | ListEnumfactor_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.factor_status[] | ListEnumfactor_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumfactor_statusWithAggregatesFilter<$PrismaModel> | $Enums.factor_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumfactor_statusFilter<$PrismaModel>
    _max?: NestedEnumfactor_statusFilter<$PrismaModel>
  }

  export type NestedEnumone_time_token_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.one_time_token_type | Enumone_time_token_typeFieldRefInput<$PrismaModel>
    in?: $Enums.one_time_token_type[] | ListEnumone_time_token_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.one_time_token_type[] | ListEnumone_time_token_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumone_time_token_typeFilter<$PrismaModel> | $Enums.one_time_token_type
  }

  export type NestedEnumone_time_token_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.one_time_token_type | Enumone_time_token_typeFieldRefInput<$PrismaModel>
    in?: $Enums.one_time_token_type[] | ListEnumone_time_token_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.one_time_token_type[] | ListEnumone_time_token_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumone_time_token_typeWithAggregatesFilter<$PrismaModel> | $Enums.one_time_token_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumone_time_token_typeFilter<$PrismaModel>
    _max?: NestedEnumone_time_token_typeFilter<$PrismaModel>
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedEnumaal_levelNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.aal_level | Enumaal_levelFieldRefInput<$PrismaModel> | null
    in?: $Enums.aal_level[] | ListEnumaal_levelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.aal_level[] | ListEnumaal_levelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumaal_levelNullableFilter<$PrismaModel> | $Enums.aal_level | null
  }

  export type NestedEnumaal_levelNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.aal_level | Enumaal_levelFieldRefInput<$PrismaModel> | null
    in?: $Enums.aal_level[] | ListEnumaal_levelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.aal_level[] | ListEnumaal_levelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumaal_levelNullableWithAggregatesFilter<$PrismaModel> | $Enums.aal_level | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumaal_levelNullableFilter<$PrismaModel>
    _max?: NestedEnumaal_levelNullableFilter<$PrismaModel>
  }

  export type NestedBigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type NestedBigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type UserSoftwareCreateWithoutGrantedByInput = {
    id?: string
    accessLevel: string
    role: string
    assignedAt?: Date | string
    software: SoftwareCreateNestedOneWithoutUserSoftwareInput
    user: UserCreateNestedOneWithoutSoftwareInput
  }

  export type UserSoftwareUncheckedCreateWithoutGrantedByInput = {
    id?: string
    userId: string
    softwareId: string
    accessLevel: string
    role: string
    assignedAt?: Date | string
  }

  export type UserSoftwareCreateOrConnectWithoutGrantedByInput = {
    where: UserSoftwareWhereUniqueInput
    create: XOR<UserSoftwareCreateWithoutGrantedByInput, UserSoftwareUncheckedCreateWithoutGrantedByInput>
  }

  export type UserSoftwareCreateManyGrantedByInputEnvelope = {
    data: UserSoftwareCreateManyGrantedByInput | UserSoftwareCreateManyGrantedByInput[]
    skipDuplicates?: boolean
  }

  export type SoftwareCreateWithoutAssignedInput = {
    id?: string
    name: string
    description?: string | null
    category?: string | null
    status?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userCount?: number | null
    notes?: string | null
    accountRep?: string | null
    amount?: number | null
    currency?: string | null
    licenseType?: string | null
    paymentDueDate?: Date | string | null
    paymentFrequency?: $Enums.PaymentFrequency
    paymentMethod?: $Enums.PaymentMethod
    pricePerUser?: number | null
    website?: string | null
    accountReps?: AccountRepCreateNestedManyWithoutSoftwareInput
    notesLastUpdatedBy: UserCreateNestedOneWithoutSoftwareNotesInput
    updatedBy?: UserCreateNestedOneWithoutSoftwareInput
    SoftwareAccess?: SoftwareAccessCreateNestedManyWithoutSoftwareInput
    histories?: SoftwareHistoryCreateNestedManyWithoutSoftwareInput
    UserSoftware?: UserSoftwareCreateNestedManyWithoutSoftwareInput
  }

  export type SoftwareUncheckedCreateWithoutAssignedInput = {
    id?: string
    name: string
    description?: string | null
    category?: string | null
    status?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userCount?: number | null
    notes?: string | null
    notesLastUpdatedById: string
    accountRep?: string | null
    amount?: number | null
    currency?: string | null
    licenseType?: string | null
    paymentDueDate?: Date | string | null
    paymentFrequency?: $Enums.PaymentFrequency
    paymentMethod?: $Enums.PaymentMethod
    pricePerUser?: number | null
    updatedById?: string | null
    website?: string | null
    accountReps?: AccountRepUncheckedCreateNestedManyWithoutSoftwareInput
    SoftwareAccess?: SoftwareAccessUncheckedCreateNestedManyWithoutSoftwareInput
    histories?: SoftwareHistoryUncheckedCreateNestedManyWithoutSoftwareInput
    UserSoftware?: UserSoftwareUncheckedCreateNestedManyWithoutSoftwareInput
  }

  export type SoftwareCreateOrConnectWithoutAssignedInput = {
    where: SoftwareWhereUniqueInput
    create: XOR<SoftwareCreateWithoutAssignedInput, SoftwareUncheckedCreateWithoutAssignedInput>
  }

  export type UserSoftwareUpsertWithWhereUniqueWithoutGrantedByInput = {
    where: UserSoftwareWhereUniqueInput
    update: XOR<UserSoftwareUpdateWithoutGrantedByInput, UserSoftwareUncheckedUpdateWithoutGrantedByInput>
    create: XOR<UserSoftwareCreateWithoutGrantedByInput, UserSoftwareUncheckedCreateWithoutGrantedByInput>
  }

  export type UserSoftwareUpdateWithWhereUniqueWithoutGrantedByInput = {
    where: UserSoftwareWhereUniqueInput
    data: XOR<UserSoftwareUpdateWithoutGrantedByInput, UserSoftwareUncheckedUpdateWithoutGrantedByInput>
  }

  export type UserSoftwareUpdateManyWithWhereWithoutGrantedByInput = {
    where: UserSoftwareScalarWhereInput
    data: XOR<UserSoftwareUpdateManyMutationInput, UserSoftwareUncheckedUpdateManyWithoutGrantedByInput>
  }

  export type UserSoftwareScalarWhereInput = {
    AND?: UserSoftwareScalarWhereInput | UserSoftwareScalarWhereInput[]
    OR?: UserSoftwareScalarWhereInput[]
    NOT?: UserSoftwareScalarWhereInput | UserSoftwareScalarWhereInput[]
    id?: StringFilter<"UserSoftware"> | string
    userId?: StringFilter<"UserSoftware"> | string
    softwareId?: StringFilter<"UserSoftware"> | string
    grantedById?: UuidFilter<"UserSoftware"> | string
    accessLevel?: StringFilter<"UserSoftware"> | string
    role?: StringFilter<"UserSoftware"> | string
    assignedAt?: DateTimeFilter<"UserSoftware"> | Date | string
  }

  export type SoftwareUpsertWithWhereUniqueWithoutAssignedInput = {
    where: SoftwareWhereUniqueInput
    update: XOR<SoftwareUpdateWithoutAssignedInput, SoftwareUncheckedUpdateWithoutAssignedInput>
    create: XOR<SoftwareCreateWithoutAssignedInput, SoftwareUncheckedCreateWithoutAssignedInput>
  }

  export type SoftwareUpdateWithWhereUniqueWithoutAssignedInput = {
    where: SoftwareWhereUniqueInput
    data: XOR<SoftwareUpdateWithoutAssignedInput, SoftwareUncheckedUpdateWithoutAssignedInput>
  }

  export type SoftwareUpdateManyWithWhereWithoutAssignedInput = {
    where: SoftwareScalarWhereInput
    data: XOR<SoftwareUpdateManyMutationInput, SoftwareUncheckedUpdateManyWithoutAssignedInput>
  }

  export type SoftwareScalarWhereInput = {
    AND?: SoftwareScalarWhereInput | SoftwareScalarWhereInput[]
    OR?: SoftwareScalarWhereInput[]
    NOT?: SoftwareScalarWhereInput | SoftwareScalarWhereInput[]
    id?: StringFilter<"Software"> | string
    name?: StringFilter<"Software"> | string
    description?: StringNullableFilter<"Software"> | string | null
    category?: StringNullableFilter<"Software"> | string | null
    status?: StringNullableFilter<"Software"> | string | null
    createdAt?: DateTimeFilter<"Software"> | Date | string
    updatedAt?: DateTimeFilter<"Software"> | Date | string
    userCount?: IntNullableFilter<"Software"> | number | null
    notes?: StringNullableFilter<"Software"> | string | null
    notesLastUpdatedById?: StringFilter<"Software"> | string
    accountRep?: StringNullableFilter<"Software"> | string | null
    amount?: FloatNullableFilter<"Software"> | number | null
    currency?: StringNullableFilter<"Software"> | string | null
    licenseType?: StringNullableFilter<"Software"> | string | null
    paymentDueDate?: DateTimeNullableFilter<"Software"> | Date | string | null
    paymentFrequency?: EnumPaymentFrequencyFilter<"Software"> | $Enums.PaymentFrequency
    paymentMethod?: EnumPaymentMethodFilter<"Software"> | $Enums.PaymentMethod
    pricePerUser?: FloatNullableFilter<"Software"> | number | null
    updatedById?: StringNullableFilter<"Software"> | string | null
    website?: StringNullableFilter<"Software"> | string | null
  }

  export type SharedAccountCreateWithoutUpdatedByInput = {
    id?: string
    email: string
    name: string
    normalizedName: string
    location?: string | null
    type?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    userCount?: number
    histories?: SharedAccountHistoryCreateNestedManyWithoutSharedAccountInput
    softwareAccesses?: SoftwareAccessCreateNestedManyWithoutSharedAccountInput
  }

  export type SharedAccountUncheckedCreateWithoutUpdatedByInput = {
    id?: string
    email: string
    name: string
    normalizedName: string
    location?: string | null
    type?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    userCount?: number
    histories?: SharedAccountHistoryUncheckedCreateNestedManyWithoutSharedAccountInput
    softwareAccesses?: SoftwareAccessUncheckedCreateNestedManyWithoutSharedAccountInput
  }

  export type SharedAccountCreateOrConnectWithoutUpdatedByInput = {
    where: SharedAccountWhereUniqueInput
    create: XOR<SharedAccountCreateWithoutUpdatedByInput, SharedAccountUncheckedCreateWithoutUpdatedByInput>
  }

  export type SharedAccountCreateManyUpdatedByInputEnvelope = {
    data: SharedAccountCreateManyUpdatedByInput | SharedAccountCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type SoftwareCreateWithoutNotesLastUpdatedByInput = {
    id?: string
    name: string
    description?: string | null
    category?: string | null
    status?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userCount?: number | null
    notes?: string | null
    accountRep?: string | null
    amount?: number | null
    currency?: string | null
    licenseType?: string | null
    paymentDueDate?: Date | string | null
    paymentFrequency?: $Enums.PaymentFrequency
    paymentMethod?: $Enums.PaymentMethod
    pricePerUser?: number | null
    website?: string | null
    accountReps?: AccountRepCreateNestedManyWithoutSoftwareInput
    updatedBy?: UserCreateNestedOneWithoutSoftwareInput
    SoftwareAccess?: SoftwareAccessCreateNestedManyWithoutSoftwareInput
    histories?: SoftwareHistoryCreateNestedManyWithoutSoftwareInput
    UserSoftware?: UserSoftwareCreateNestedManyWithoutSoftwareInput
    Assigned?: UserProfilesCreateNestedManyWithoutSoftwareInput
  }

  export type SoftwareUncheckedCreateWithoutNotesLastUpdatedByInput = {
    id?: string
    name: string
    description?: string | null
    category?: string | null
    status?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userCount?: number | null
    notes?: string | null
    accountRep?: string | null
    amount?: number | null
    currency?: string | null
    licenseType?: string | null
    paymentDueDate?: Date | string | null
    paymentFrequency?: $Enums.PaymentFrequency
    paymentMethod?: $Enums.PaymentMethod
    pricePerUser?: number | null
    updatedById?: string | null
    website?: string | null
    accountReps?: AccountRepUncheckedCreateNestedManyWithoutSoftwareInput
    SoftwareAccess?: SoftwareAccessUncheckedCreateNestedManyWithoutSoftwareInput
    histories?: SoftwareHistoryUncheckedCreateNestedManyWithoutSoftwareInput
    UserSoftware?: UserSoftwareUncheckedCreateNestedManyWithoutSoftwareInput
    Assigned?: UserProfilesUncheckedCreateNestedManyWithoutSoftwareInput
  }

  export type SoftwareCreateOrConnectWithoutNotesLastUpdatedByInput = {
    where: SoftwareWhereUniqueInput
    create: XOR<SoftwareCreateWithoutNotesLastUpdatedByInput, SoftwareUncheckedCreateWithoutNotesLastUpdatedByInput>
  }

  export type SoftwareCreateManyNotesLastUpdatedByInputEnvelope = {
    data: SoftwareCreateManyNotesLastUpdatedByInput | SoftwareCreateManyNotesLastUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type SoftwareCreateWithoutUpdatedByInput = {
    id?: string
    name: string
    description?: string | null
    category?: string | null
    status?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userCount?: number | null
    notes?: string | null
    accountRep?: string | null
    amount?: number | null
    currency?: string | null
    licenseType?: string | null
    paymentDueDate?: Date | string | null
    paymentFrequency?: $Enums.PaymentFrequency
    paymentMethod?: $Enums.PaymentMethod
    pricePerUser?: number | null
    website?: string | null
    accountReps?: AccountRepCreateNestedManyWithoutSoftwareInput
    notesLastUpdatedBy: UserCreateNestedOneWithoutSoftwareNotesInput
    SoftwareAccess?: SoftwareAccessCreateNestedManyWithoutSoftwareInput
    histories?: SoftwareHistoryCreateNestedManyWithoutSoftwareInput
    UserSoftware?: UserSoftwareCreateNestedManyWithoutSoftwareInput
    Assigned?: UserProfilesCreateNestedManyWithoutSoftwareInput
  }

  export type SoftwareUncheckedCreateWithoutUpdatedByInput = {
    id?: string
    name: string
    description?: string | null
    category?: string | null
    status?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userCount?: number | null
    notes?: string | null
    notesLastUpdatedById: string
    accountRep?: string | null
    amount?: number | null
    currency?: string | null
    licenseType?: string | null
    paymentDueDate?: Date | string | null
    paymentFrequency?: $Enums.PaymentFrequency
    paymentMethod?: $Enums.PaymentMethod
    pricePerUser?: number | null
    website?: string | null
    accountReps?: AccountRepUncheckedCreateNestedManyWithoutSoftwareInput
    SoftwareAccess?: SoftwareAccessUncheckedCreateNestedManyWithoutSoftwareInput
    histories?: SoftwareHistoryUncheckedCreateNestedManyWithoutSoftwareInput
    UserSoftware?: UserSoftwareUncheckedCreateNestedManyWithoutSoftwareInput
    Assigned?: UserProfilesUncheckedCreateNestedManyWithoutSoftwareInput
  }

  export type SoftwareCreateOrConnectWithoutUpdatedByInput = {
    where: SoftwareWhereUniqueInput
    create: XOR<SoftwareCreateWithoutUpdatedByInput, SoftwareUncheckedCreateWithoutUpdatedByInput>
  }

  export type SoftwareCreateManyUpdatedByInputEnvelope = {
    data: SoftwareCreateManyUpdatedByInput | SoftwareCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutSubordinatesInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: string
    email: string
    name: string
    jobTitle?: string | null
    location?: string | null
    personalEmail?: string | null
    type?: string | null
    status?: string
    SharedAccount?: SharedAccountCreateNestedManyWithoutUpdatedByInput
    softwareNotes?: SoftwareCreateNestedManyWithoutNotesLastUpdatedByInput
    Software?: SoftwareCreateNestedManyWithoutUpdatedByInput
    reportsTo?: UserCreateNestedOneWithoutSubordinatesInput
    histories?: UserHistoryCreateNestedManyWithoutUserInput
    software?: UserSoftwareCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSubordinatesInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: string
    email: string
    name: string
    jobTitle?: string | null
    location?: string | null
    personalEmail?: string | null
    reportsToId?: string | null
    type?: string | null
    status?: string
    SharedAccount?: SharedAccountUncheckedCreateNestedManyWithoutUpdatedByInput
    softwareNotes?: SoftwareUncheckedCreateNestedManyWithoutNotesLastUpdatedByInput
    Software?: SoftwareUncheckedCreateNestedManyWithoutUpdatedByInput
    histories?: UserHistoryUncheckedCreateNestedManyWithoutUserInput
    software?: UserSoftwareUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSubordinatesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSubordinatesInput, UserUncheckedCreateWithoutSubordinatesInput>
  }

  export type UserCreateWithoutReportsToInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: string
    email: string
    name: string
    jobTitle?: string | null
    location?: string | null
    personalEmail?: string | null
    type?: string | null
    status?: string
    SharedAccount?: SharedAccountCreateNestedManyWithoutUpdatedByInput
    softwareNotes?: SoftwareCreateNestedManyWithoutNotesLastUpdatedByInput
    Software?: SoftwareCreateNestedManyWithoutUpdatedByInput
    subordinates?: UserCreateNestedManyWithoutReportsToInput
    histories?: UserHistoryCreateNestedManyWithoutUserInput
    software?: UserSoftwareCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutReportsToInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: string
    email: string
    name: string
    jobTitle?: string | null
    location?: string | null
    personalEmail?: string | null
    type?: string | null
    status?: string
    SharedAccount?: SharedAccountUncheckedCreateNestedManyWithoutUpdatedByInput
    softwareNotes?: SoftwareUncheckedCreateNestedManyWithoutNotesLastUpdatedByInput
    Software?: SoftwareUncheckedCreateNestedManyWithoutUpdatedByInput
    subordinates?: UserUncheckedCreateNestedManyWithoutReportsToInput
    histories?: UserHistoryUncheckedCreateNestedManyWithoutUserInput
    software?: UserSoftwareUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutReportsToInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReportsToInput, UserUncheckedCreateWithoutReportsToInput>
  }

  export type UserCreateManyReportsToInputEnvelope = {
    data: UserCreateManyReportsToInput | UserCreateManyReportsToInput[]
    skipDuplicates?: boolean
  }

  export type UserHistoryCreateWithoutUserInput = {
    id?: string
    action: string
    field: string
    newValue?: string | null
    oldValue?: string | null
    updatedBy: string
    updatedOn?: Date | string
  }

  export type UserHistoryUncheckedCreateWithoutUserInput = {
    id?: string
    action: string
    field: string
    newValue?: string | null
    oldValue?: string | null
    updatedBy: string
    updatedOn?: Date | string
  }

  export type UserHistoryCreateOrConnectWithoutUserInput = {
    where: UserHistoryWhereUniqueInput
    create: XOR<UserHistoryCreateWithoutUserInput, UserHistoryUncheckedCreateWithoutUserInput>
  }

  export type UserHistoryCreateManyUserInputEnvelope = {
    data: UserHistoryCreateManyUserInput | UserHistoryCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UserSoftwareCreateWithoutUserInput = {
    id?: string
    accessLevel: string
    role: string
    assignedAt?: Date | string
    grantedBy: UserProfilesCreateNestedOneWithoutUserSoftwareInput
    software: SoftwareCreateNestedOneWithoutUserSoftwareInput
  }

  export type UserSoftwareUncheckedCreateWithoutUserInput = {
    id?: string
    softwareId: string
    grantedById: string
    accessLevel: string
    role: string
    assignedAt?: Date | string
  }

  export type UserSoftwareCreateOrConnectWithoutUserInput = {
    where: UserSoftwareWhereUniqueInput
    create: XOR<UserSoftwareCreateWithoutUserInput, UserSoftwareUncheckedCreateWithoutUserInput>
  }

  export type UserSoftwareCreateManyUserInputEnvelope = {
    data: UserSoftwareCreateManyUserInput | UserSoftwareCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type SharedAccountUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: SharedAccountWhereUniqueInput
    update: XOR<SharedAccountUpdateWithoutUpdatedByInput, SharedAccountUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<SharedAccountCreateWithoutUpdatedByInput, SharedAccountUncheckedCreateWithoutUpdatedByInput>
  }

  export type SharedAccountUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: SharedAccountWhereUniqueInput
    data: XOR<SharedAccountUpdateWithoutUpdatedByInput, SharedAccountUncheckedUpdateWithoutUpdatedByInput>
  }

  export type SharedAccountUpdateManyWithWhereWithoutUpdatedByInput = {
    where: SharedAccountScalarWhereInput
    data: XOR<SharedAccountUpdateManyMutationInput, SharedAccountUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type SharedAccountScalarWhereInput = {
    AND?: SharedAccountScalarWhereInput | SharedAccountScalarWhereInput[]
    OR?: SharedAccountScalarWhereInput[]
    NOT?: SharedAccountScalarWhereInput | SharedAccountScalarWhereInput[]
    id?: StringFilter<"SharedAccount"> | string
    email?: StringFilter<"SharedAccount"> | string
    name?: StringFilter<"SharedAccount"> | string
    normalizedName?: StringFilter<"SharedAccount"> | string
    location?: StringNullableFilter<"SharedAccount"> | string | null
    type?: StringNullableFilter<"SharedAccount"> | string | null
    active?: BoolFilter<"SharedAccount"> | boolean
    createdAt?: DateTimeFilter<"SharedAccount"> | Date | string
    updatedAt?: DateTimeFilter<"SharedAccount"> | Date | string
    updatedById?: StringFilter<"SharedAccount"> | string
    userCount?: IntFilter<"SharedAccount"> | number
  }

  export type SoftwareUpsertWithWhereUniqueWithoutNotesLastUpdatedByInput = {
    where: SoftwareWhereUniqueInput
    update: XOR<SoftwareUpdateWithoutNotesLastUpdatedByInput, SoftwareUncheckedUpdateWithoutNotesLastUpdatedByInput>
    create: XOR<SoftwareCreateWithoutNotesLastUpdatedByInput, SoftwareUncheckedCreateWithoutNotesLastUpdatedByInput>
  }

  export type SoftwareUpdateWithWhereUniqueWithoutNotesLastUpdatedByInput = {
    where: SoftwareWhereUniqueInput
    data: XOR<SoftwareUpdateWithoutNotesLastUpdatedByInput, SoftwareUncheckedUpdateWithoutNotesLastUpdatedByInput>
  }

  export type SoftwareUpdateManyWithWhereWithoutNotesLastUpdatedByInput = {
    where: SoftwareScalarWhereInput
    data: XOR<SoftwareUpdateManyMutationInput, SoftwareUncheckedUpdateManyWithoutNotesLastUpdatedByInput>
  }

  export type SoftwareUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: SoftwareWhereUniqueInput
    update: XOR<SoftwareUpdateWithoutUpdatedByInput, SoftwareUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<SoftwareCreateWithoutUpdatedByInput, SoftwareUncheckedCreateWithoutUpdatedByInput>
  }

  export type SoftwareUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: SoftwareWhereUniqueInput
    data: XOR<SoftwareUpdateWithoutUpdatedByInput, SoftwareUncheckedUpdateWithoutUpdatedByInput>
  }

  export type SoftwareUpdateManyWithWhereWithoutUpdatedByInput = {
    where: SoftwareScalarWhereInput
    data: XOR<SoftwareUpdateManyMutationInput, SoftwareUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type UserUpsertWithoutSubordinatesInput = {
    update: XOR<UserUpdateWithoutSubordinatesInput, UserUncheckedUpdateWithoutSubordinatesInput>
    create: XOR<UserCreateWithoutSubordinatesInput, UserUncheckedCreateWithoutSubordinatesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSubordinatesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSubordinatesInput, UserUncheckedUpdateWithoutSubordinatesInput>
  }

  export type UserUpdateWithoutSubordinatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    personalEmail?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    SharedAccount?: SharedAccountUpdateManyWithoutUpdatedByNestedInput
    softwareNotes?: SoftwareUpdateManyWithoutNotesLastUpdatedByNestedInput
    Software?: SoftwareUpdateManyWithoutUpdatedByNestedInput
    reportsTo?: UserUpdateOneWithoutSubordinatesNestedInput
    histories?: UserHistoryUpdateManyWithoutUserNestedInput
    software?: UserSoftwareUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSubordinatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    personalEmail?: NullableStringFieldUpdateOperationsInput | string | null
    reportsToId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    SharedAccount?: SharedAccountUncheckedUpdateManyWithoutUpdatedByNestedInput
    softwareNotes?: SoftwareUncheckedUpdateManyWithoutNotesLastUpdatedByNestedInput
    Software?: SoftwareUncheckedUpdateManyWithoutUpdatedByNestedInput
    histories?: UserHistoryUncheckedUpdateManyWithoutUserNestedInput
    software?: UserSoftwareUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutReportsToInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutReportsToInput, UserUncheckedUpdateWithoutReportsToInput>
    create: XOR<UserCreateWithoutReportsToInput, UserUncheckedCreateWithoutReportsToInput>
  }

  export type UserUpdateWithWhereUniqueWithoutReportsToInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutReportsToInput, UserUncheckedUpdateWithoutReportsToInput>
  }

  export type UserUpdateManyWithWhereWithoutReportsToInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutReportsToInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    department?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    name?: StringFilter<"User"> | string
    jobTitle?: StringNullableFilter<"User"> | string | null
    location?: StringNullableFilter<"User"> | string | null
    personalEmail?: StringNullableFilter<"User"> | string | null
    reportsToId?: StringNullableFilter<"User"> | string | null
    type?: StringNullableFilter<"User"> | string | null
    status?: StringFilter<"User"> | string
  }

  export type UserHistoryUpsertWithWhereUniqueWithoutUserInput = {
    where: UserHistoryWhereUniqueInput
    update: XOR<UserHistoryUpdateWithoutUserInput, UserHistoryUncheckedUpdateWithoutUserInput>
    create: XOR<UserHistoryCreateWithoutUserInput, UserHistoryUncheckedCreateWithoutUserInput>
  }

  export type UserHistoryUpdateWithWhereUniqueWithoutUserInput = {
    where: UserHistoryWhereUniqueInput
    data: XOR<UserHistoryUpdateWithoutUserInput, UserHistoryUncheckedUpdateWithoutUserInput>
  }

  export type UserHistoryUpdateManyWithWhereWithoutUserInput = {
    where: UserHistoryScalarWhereInput
    data: XOR<UserHistoryUpdateManyMutationInput, UserHistoryUncheckedUpdateManyWithoutUserInput>
  }

  export type UserHistoryScalarWhereInput = {
    AND?: UserHistoryScalarWhereInput | UserHistoryScalarWhereInput[]
    OR?: UserHistoryScalarWhereInput[]
    NOT?: UserHistoryScalarWhereInput | UserHistoryScalarWhereInput[]
    id?: StringFilter<"UserHistory"> | string
    userId?: StringFilter<"UserHistory"> | string
    action?: StringFilter<"UserHistory"> | string
    field?: StringFilter<"UserHistory"> | string
    newValue?: StringNullableFilter<"UserHistory"> | string | null
    oldValue?: StringNullableFilter<"UserHistory"> | string | null
    updatedBy?: StringFilter<"UserHistory"> | string
    updatedOn?: DateTimeFilter<"UserHistory"> | Date | string
  }

  export type UserSoftwareUpsertWithWhereUniqueWithoutUserInput = {
    where: UserSoftwareWhereUniqueInput
    update: XOR<UserSoftwareUpdateWithoutUserInput, UserSoftwareUncheckedUpdateWithoutUserInput>
    create: XOR<UserSoftwareCreateWithoutUserInput, UserSoftwareUncheckedCreateWithoutUserInput>
  }

  export type UserSoftwareUpdateWithWhereUniqueWithoutUserInput = {
    where: UserSoftwareWhereUniqueInput
    data: XOR<UserSoftwareUpdateWithoutUserInput, UserSoftwareUncheckedUpdateWithoutUserInput>
  }

  export type UserSoftwareUpdateManyWithWhereWithoutUserInput = {
    where: UserSoftwareScalarWhereInput
    data: XOR<UserSoftwareUpdateManyMutationInput, UserSoftwareUncheckedUpdateManyWithoutUserInput>
  }

  export type UserCreateWithoutHistoriesInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: string
    email: string
    name: string
    jobTitle?: string | null
    location?: string | null
    personalEmail?: string | null
    type?: string | null
    status?: string
    SharedAccount?: SharedAccountCreateNestedManyWithoutUpdatedByInput
    softwareNotes?: SoftwareCreateNestedManyWithoutNotesLastUpdatedByInput
    Software?: SoftwareCreateNestedManyWithoutUpdatedByInput
    reportsTo?: UserCreateNestedOneWithoutSubordinatesInput
    subordinates?: UserCreateNestedManyWithoutReportsToInput
    software?: UserSoftwareCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutHistoriesInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: string
    email: string
    name: string
    jobTitle?: string | null
    location?: string | null
    personalEmail?: string | null
    reportsToId?: string | null
    type?: string | null
    status?: string
    SharedAccount?: SharedAccountUncheckedCreateNestedManyWithoutUpdatedByInput
    softwareNotes?: SoftwareUncheckedCreateNestedManyWithoutNotesLastUpdatedByInput
    Software?: SoftwareUncheckedCreateNestedManyWithoutUpdatedByInput
    subordinates?: UserUncheckedCreateNestedManyWithoutReportsToInput
    software?: UserSoftwareUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutHistoriesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutHistoriesInput, UserUncheckedCreateWithoutHistoriesInput>
  }

  export type UserUpsertWithoutHistoriesInput = {
    update: XOR<UserUpdateWithoutHistoriesInput, UserUncheckedUpdateWithoutHistoriesInput>
    create: XOR<UserCreateWithoutHistoriesInput, UserUncheckedCreateWithoutHistoriesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutHistoriesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutHistoriesInput, UserUncheckedUpdateWithoutHistoriesInput>
  }

  export type UserUpdateWithoutHistoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    personalEmail?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    SharedAccount?: SharedAccountUpdateManyWithoutUpdatedByNestedInput
    softwareNotes?: SoftwareUpdateManyWithoutNotesLastUpdatedByNestedInput
    Software?: SoftwareUpdateManyWithoutUpdatedByNestedInput
    reportsTo?: UserUpdateOneWithoutSubordinatesNestedInput
    subordinates?: UserUpdateManyWithoutReportsToNestedInput
    software?: UserSoftwareUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutHistoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    personalEmail?: NullableStringFieldUpdateOperationsInput | string | null
    reportsToId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    SharedAccount?: SharedAccountUncheckedUpdateManyWithoutUpdatedByNestedInput
    softwareNotes?: SoftwareUncheckedUpdateManyWithoutNotesLastUpdatedByNestedInput
    Software?: SoftwareUncheckedUpdateManyWithoutUpdatedByNestedInput
    subordinates?: UserUncheckedUpdateManyWithoutReportsToNestedInput
    software?: UserSoftwareUncheckedUpdateManyWithoutUserNestedInput
  }

  export type SoftwareCreateWithoutAccountRepsInput = {
    id?: string
    name: string
    description?: string | null
    category?: string | null
    status?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userCount?: number | null
    notes?: string | null
    accountRep?: string | null
    amount?: number | null
    currency?: string | null
    licenseType?: string | null
    paymentDueDate?: Date | string | null
    paymentFrequency?: $Enums.PaymentFrequency
    paymentMethod?: $Enums.PaymentMethod
    pricePerUser?: number | null
    website?: string | null
    notesLastUpdatedBy: UserCreateNestedOneWithoutSoftwareNotesInput
    updatedBy?: UserCreateNestedOneWithoutSoftwareInput
    SoftwareAccess?: SoftwareAccessCreateNestedManyWithoutSoftwareInput
    histories?: SoftwareHistoryCreateNestedManyWithoutSoftwareInput
    UserSoftware?: UserSoftwareCreateNestedManyWithoutSoftwareInput
    Assigned?: UserProfilesCreateNestedManyWithoutSoftwareInput
  }

  export type SoftwareUncheckedCreateWithoutAccountRepsInput = {
    id?: string
    name: string
    description?: string | null
    category?: string | null
    status?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userCount?: number | null
    notes?: string | null
    notesLastUpdatedById: string
    accountRep?: string | null
    amount?: number | null
    currency?: string | null
    licenseType?: string | null
    paymentDueDate?: Date | string | null
    paymentFrequency?: $Enums.PaymentFrequency
    paymentMethod?: $Enums.PaymentMethod
    pricePerUser?: number | null
    updatedById?: string | null
    website?: string | null
    SoftwareAccess?: SoftwareAccessUncheckedCreateNestedManyWithoutSoftwareInput
    histories?: SoftwareHistoryUncheckedCreateNestedManyWithoutSoftwareInput
    UserSoftware?: UserSoftwareUncheckedCreateNestedManyWithoutSoftwareInput
    Assigned?: UserProfilesUncheckedCreateNestedManyWithoutSoftwareInput
  }

  export type SoftwareCreateOrConnectWithoutAccountRepsInput = {
    where: SoftwareWhereUniqueInput
    create: XOR<SoftwareCreateWithoutAccountRepsInput, SoftwareUncheckedCreateWithoutAccountRepsInput>
  }

  export type SoftwareUpsertWithoutAccountRepsInput = {
    update: XOR<SoftwareUpdateWithoutAccountRepsInput, SoftwareUncheckedUpdateWithoutAccountRepsInput>
    create: XOR<SoftwareCreateWithoutAccountRepsInput, SoftwareUncheckedCreateWithoutAccountRepsInput>
    where?: SoftwareWhereInput
  }

  export type SoftwareUpdateToOneWithWhereWithoutAccountRepsInput = {
    where?: SoftwareWhereInput
    data: XOR<SoftwareUpdateWithoutAccountRepsInput, SoftwareUncheckedUpdateWithoutAccountRepsInput>
  }

  export type SoftwareUpdateWithoutAccountRepsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    accountRep?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    paymentDueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentFrequency?: EnumPaymentFrequencyFieldUpdateOperationsInput | $Enums.PaymentFrequency
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    pricePerUser?: NullableFloatFieldUpdateOperationsInput | number | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    notesLastUpdatedBy?: UserUpdateOneRequiredWithoutSoftwareNotesNestedInput
    updatedBy?: UserUpdateOneWithoutSoftwareNestedInput
    SoftwareAccess?: SoftwareAccessUpdateManyWithoutSoftwareNestedInput
    histories?: SoftwareHistoryUpdateManyWithoutSoftwareNestedInput
    UserSoftware?: UserSoftwareUpdateManyWithoutSoftwareNestedInput
    Assigned?: UserProfilesUpdateManyWithoutSoftwareNestedInput
  }

  export type SoftwareUncheckedUpdateWithoutAccountRepsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    notesLastUpdatedById?: StringFieldUpdateOperationsInput | string
    accountRep?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    paymentDueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentFrequency?: EnumPaymentFrequencyFieldUpdateOperationsInput | $Enums.PaymentFrequency
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    pricePerUser?: NullableFloatFieldUpdateOperationsInput | number | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    SoftwareAccess?: SoftwareAccessUncheckedUpdateManyWithoutSoftwareNestedInput
    histories?: SoftwareHistoryUncheckedUpdateManyWithoutSoftwareNestedInput
    UserSoftware?: UserSoftwareUncheckedUpdateManyWithoutSoftwareNestedInput
    Assigned?: UserProfilesUncheckedUpdateManyWithoutSoftwareNestedInput
  }

  export type AccountRepCreateWithoutSoftwareInput = {
    id?: string
    email: string
    name: string
    phone: string
  }

  export type AccountRepUncheckedCreateWithoutSoftwareInput = {
    id?: string
    email: string
    name: string
    phone: string
  }

  export type AccountRepCreateOrConnectWithoutSoftwareInput = {
    where: AccountRepWhereUniqueInput
    create: XOR<AccountRepCreateWithoutSoftwareInput, AccountRepUncheckedCreateWithoutSoftwareInput>
  }

  export type AccountRepCreateManySoftwareInputEnvelope = {
    data: AccountRepCreateManySoftwareInput | AccountRepCreateManySoftwareInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutSoftwareNotesInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: string
    email: string
    name: string
    jobTitle?: string | null
    location?: string | null
    personalEmail?: string | null
    type?: string | null
    status?: string
    SharedAccount?: SharedAccountCreateNestedManyWithoutUpdatedByInput
    Software?: SoftwareCreateNestedManyWithoutUpdatedByInput
    reportsTo?: UserCreateNestedOneWithoutSubordinatesInput
    subordinates?: UserCreateNestedManyWithoutReportsToInput
    histories?: UserHistoryCreateNestedManyWithoutUserInput
    software?: UserSoftwareCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSoftwareNotesInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: string
    email: string
    name: string
    jobTitle?: string | null
    location?: string | null
    personalEmail?: string | null
    reportsToId?: string | null
    type?: string | null
    status?: string
    SharedAccount?: SharedAccountUncheckedCreateNestedManyWithoutUpdatedByInput
    Software?: SoftwareUncheckedCreateNestedManyWithoutUpdatedByInput
    subordinates?: UserUncheckedCreateNestedManyWithoutReportsToInput
    histories?: UserHistoryUncheckedCreateNestedManyWithoutUserInput
    software?: UserSoftwareUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSoftwareNotesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSoftwareNotesInput, UserUncheckedCreateWithoutSoftwareNotesInput>
  }

  export type UserCreateWithoutSoftwareInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: string
    email: string
    name: string
    jobTitle?: string | null
    location?: string | null
    personalEmail?: string | null
    type?: string | null
    status?: string
    SharedAccount?: SharedAccountCreateNestedManyWithoutUpdatedByInput
    softwareNotes?: SoftwareCreateNestedManyWithoutNotesLastUpdatedByInput
    reportsTo?: UserCreateNestedOneWithoutSubordinatesInput
    subordinates?: UserCreateNestedManyWithoutReportsToInput
    histories?: UserHistoryCreateNestedManyWithoutUserInput
    software?: UserSoftwareCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSoftwareInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: string
    email: string
    name: string
    jobTitle?: string | null
    location?: string | null
    personalEmail?: string | null
    reportsToId?: string | null
    type?: string | null
    status?: string
    SharedAccount?: SharedAccountUncheckedCreateNestedManyWithoutUpdatedByInput
    softwareNotes?: SoftwareUncheckedCreateNestedManyWithoutNotesLastUpdatedByInput
    subordinates?: UserUncheckedCreateNestedManyWithoutReportsToInput
    histories?: UserHistoryUncheckedCreateNestedManyWithoutUserInput
    software?: UserSoftwareUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSoftwareInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSoftwareInput, UserUncheckedCreateWithoutSoftwareInput>
  }

  export type SoftwareAccessCreateWithoutSoftwareInput = {
    id?: string
    access: boolean
    lastEdited?: Date | string
    lastEditedBy: string
    permissions?: SoftwareAccessCreatepermissionsInput | string[]
    uid: string
    sharedAccount: SharedAccountCreateNestedOneWithoutSoftwareAccessesInput
  }

  export type SoftwareAccessUncheckedCreateWithoutSoftwareInput = {
    id?: string
    sharedAccountId: string
    access: boolean
    lastEdited?: Date | string
    lastEditedBy: string
    permissions?: SoftwareAccessCreatepermissionsInput | string[]
    uid: string
  }

  export type SoftwareAccessCreateOrConnectWithoutSoftwareInput = {
    where: SoftwareAccessWhereUniqueInput
    create: XOR<SoftwareAccessCreateWithoutSoftwareInput, SoftwareAccessUncheckedCreateWithoutSoftwareInput>
  }

  export type SoftwareAccessCreateManySoftwareInputEnvelope = {
    data: SoftwareAccessCreateManySoftwareInput | SoftwareAccessCreateManySoftwareInput[]
    skipDuplicates?: boolean
  }

  export type SoftwareHistoryCreateWithoutSoftwareInput = {
    id?: string
    action: string
    field: string
    newValue?: string | null
    oldValue?: string | null
    updatedBy: string
    updatedOn?: Date | string
  }

  export type SoftwareHistoryUncheckedCreateWithoutSoftwareInput = {
    id?: string
    action: string
    field: string
    newValue?: string | null
    oldValue?: string | null
    updatedBy: string
    updatedOn?: Date | string
  }

  export type SoftwareHistoryCreateOrConnectWithoutSoftwareInput = {
    where: SoftwareHistoryWhereUniqueInput
    create: XOR<SoftwareHistoryCreateWithoutSoftwareInput, SoftwareHistoryUncheckedCreateWithoutSoftwareInput>
  }

  export type SoftwareHistoryCreateManySoftwareInputEnvelope = {
    data: SoftwareHistoryCreateManySoftwareInput | SoftwareHistoryCreateManySoftwareInput[]
    skipDuplicates?: boolean
  }

  export type UserSoftwareCreateWithoutSoftwareInput = {
    id?: string
    accessLevel: string
    role: string
    assignedAt?: Date | string
    grantedBy: UserProfilesCreateNestedOneWithoutUserSoftwareInput
    user: UserCreateNestedOneWithoutSoftwareInput
  }

  export type UserSoftwareUncheckedCreateWithoutSoftwareInput = {
    id?: string
    userId: string
    grantedById: string
    accessLevel: string
    role: string
    assignedAt?: Date | string
  }

  export type UserSoftwareCreateOrConnectWithoutSoftwareInput = {
    where: UserSoftwareWhereUniqueInput
    create: XOR<UserSoftwareCreateWithoutSoftwareInput, UserSoftwareUncheckedCreateWithoutSoftwareInput>
  }

  export type UserSoftwareCreateManySoftwareInputEnvelope = {
    data: UserSoftwareCreateManySoftwareInput | UserSoftwareCreateManySoftwareInput[]
    skipDuplicates?: boolean
  }

  export type UserProfilesCreateWithoutSoftwareInput = {
    id: string
    username?: string | null
    fullName?: string | null
    email?: string | null
    phone?: string | null
    avatarUrl?: string | null
    website?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    UserSoftware?: UserSoftwareCreateNestedManyWithoutGrantedByInput
  }

  export type UserProfilesUncheckedCreateWithoutSoftwareInput = {
    id: string
    username?: string | null
    fullName?: string | null
    email?: string | null
    phone?: string | null
    avatarUrl?: string | null
    website?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    UserSoftware?: UserSoftwareUncheckedCreateNestedManyWithoutGrantedByInput
  }

  export type UserProfilesCreateOrConnectWithoutSoftwareInput = {
    where: UserProfilesWhereUniqueInput
    create: XOR<UserProfilesCreateWithoutSoftwareInput, UserProfilesUncheckedCreateWithoutSoftwareInput>
  }

  export type AccountRepUpsertWithWhereUniqueWithoutSoftwareInput = {
    where: AccountRepWhereUniqueInput
    update: XOR<AccountRepUpdateWithoutSoftwareInput, AccountRepUncheckedUpdateWithoutSoftwareInput>
    create: XOR<AccountRepCreateWithoutSoftwareInput, AccountRepUncheckedCreateWithoutSoftwareInput>
  }

  export type AccountRepUpdateWithWhereUniqueWithoutSoftwareInput = {
    where: AccountRepWhereUniqueInput
    data: XOR<AccountRepUpdateWithoutSoftwareInput, AccountRepUncheckedUpdateWithoutSoftwareInput>
  }

  export type AccountRepUpdateManyWithWhereWithoutSoftwareInput = {
    where: AccountRepScalarWhereInput
    data: XOR<AccountRepUpdateManyMutationInput, AccountRepUncheckedUpdateManyWithoutSoftwareInput>
  }

  export type AccountRepScalarWhereInput = {
    AND?: AccountRepScalarWhereInput | AccountRepScalarWhereInput[]
    OR?: AccountRepScalarWhereInput[]
    NOT?: AccountRepScalarWhereInput | AccountRepScalarWhereInput[]
    id?: StringFilter<"AccountRep"> | string
    softwareId?: StringFilter<"AccountRep"> | string
    email?: StringFilter<"AccountRep"> | string
    name?: StringFilter<"AccountRep"> | string
    phone?: StringFilter<"AccountRep"> | string
  }

  export type UserUpsertWithoutSoftwareNotesInput = {
    update: XOR<UserUpdateWithoutSoftwareNotesInput, UserUncheckedUpdateWithoutSoftwareNotesInput>
    create: XOR<UserCreateWithoutSoftwareNotesInput, UserUncheckedCreateWithoutSoftwareNotesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSoftwareNotesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSoftwareNotesInput, UserUncheckedUpdateWithoutSoftwareNotesInput>
  }

  export type UserUpdateWithoutSoftwareNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    personalEmail?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    SharedAccount?: SharedAccountUpdateManyWithoutUpdatedByNestedInput
    Software?: SoftwareUpdateManyWithoutUpdatedByNestedInput
    reportsTo?: UserUpdateOneWithoutSubordinatesNestedInput
    subordinates?: UserUpdateManyWithoutReportsToNestedInput
    histories?: UserHistoryUpdateManyWithoutUserNestedInput
    software?: UserSoftwareUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSoftwareNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    personalEmail?: NullableStringFieldUpdateOperationsInput | string | null
    reportsToId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    SharedAccount?: SharedAccountUncheckedUpdateManyWithoutUpdatedByNestedInput
    Software?: SoftwareUncheckedUpdateManyWithoutUpdatedByNestedInput
    subordinates?: UserUncheckedUpdateManyWithoutReportsToNestedInput
    histories?: UserHistoryUncheckedUpdateManyWithoutUserNestedInput
    software?: UserSoftwareUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUpsertWithoutSoftwareInput = {
    update: XOR<UserUpdateWithoutSoftwareInput, UserUncheckedUpdateWithoutSoftwareInput>
    create: XOR<UserCreateWithoutSoftwareInput, UserUncheckedCreateWithoutSoftwareInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSoftwareInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSoftwareInput, UserUncheckedUpdateWithoutSoftwareInput>
  }

  export type UserUpdateWithoutSoftwareInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    personalEmail?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    SharedAccount?: SharedAccountUpdateManyWithoutUpdatedByNestedInput
    softwareNotes?: SoftwareUpdateManyWithoutNotesLastUpdatedByNestedInput
    reportsTo?: UserUpdateOneWithoutSubordinatesNestedInput
    subordinates?: UserUpdateManyWithoutReportsToNestedInput
    histories?: UserHistoryUpdateManyWithoutUserNestedInput
    software?: UserSoftwareUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSoftwareInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    personalEmail?: NullableStringFieldUpdateOperationsInput | string | null
    reportsToId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    SharedAccount?: SharedAccountUncheckedUpdateManyWithoutUpdatedByNestedInput
    softwareNotes?: SoftwareUncheckedUpdateManyWithoutNotesLastUpdatedByNestedInput
    subordinates?: UserUncheckedUpdateManyWithoutReportsToNestedInput
    histories?: UserHistoryUncheckedUpdateManyWithoutUserNestedInput
    software?: UserSoftwareUncheckedUpdateManyWithoutUserNestedInput
  }

  export type SoftwareAccessUpsertWithWhereUniqueWithoutSoftwareInput = {
    where: SoftwareAccessWhereUniqueInput
    update: XOR<SoftwareAccessUpdateWithoutSoftwareInput, SoftwareAccessUncheckedUpdateWithoutSoftwareInput>
    create: XOR<SoftwareAccessCreateWithoutSoftwareInput, SoftwareAccessUncheckedCreateWithoutSoftwareInput>
  }

  export type SoftwareAccessUpdateWithWhereUniqueWithoutSoftwareInput = {
    where: SoftwareAccessWhereUniqueInput
    data: XOR<SoftwareAccessUpdateWithoutSoftwareInput, SoftwareAccessUncheckedUpdateWithoutSoftwareInput>
  }

  export type SoftwareAccessUpdateManyWithWhereWithoutSoftwareInput = {
    where: SoftwareAccessScalarWhereInput
    data: XOR<SoftwareAccessUpdateManyMutationInput, SoftwareAccessUncheckedUpdateManyWithoutSoftwareInput>
  }

  export type SoftwareAccessScalarWhereInput = {
    AND?: SoftwareAccessScalarWhereInput | SoftwareAccessScalarWhereInput[]
    OR?: SoftwareAccessScalarWhereInput[]
    NOT?: SoftwareAccessScalarWhereInput | SoftwareAccessScalarWhereInput[]
    id?: StringFilter<"SoftwareAccess"> | string
    sharedAccountId?: StringFilter<"SoftwareAccess"> | string
    softwareId?: StringFilter<"SoftwareAccess"> | string
    access?: BoolFilter<"SoftwareAccess"> | boolean
    lastEdited?: DateTimeFilter<"SoftwareAccess"> | Date | string
    lastEditedBy?: StringFilter<"SoftwareAccess"> | string
    permissions?: StringNullableListFilter<"SoftwareAccess">
    uid?: StringFilter<"SoftwareAccess"> | string
  }

  export type SoftwareHistoryUpsertWithWhereUniqueWithoutSoftwareInput = {
    where: SoftwareHistoryWhereUniqueInput
    update: XOR<SoftwareHistoryUpdateWithoutSoftwareInput, SoftwareHistoryUncheckedUpdateWithoutSoftwareInput>
    create: XOR<SoftwareHistoryCreateWithoutSoftwareInput, SoftwareHistoryUncheckedCreateWithoutSoftwareInput>
  }

  export type SoftwareHistoryUpdateWithWhereUniqueWithoutSoftwareInput = {
    where: SoftwareHistoryWhereUniqueInput
    data: XOR<SoftwareHistoryUpdateWithoutSoftwareInput, SoftwareHistoryUncheckedUpdateWithoutSoftwareInput>
  }

  export type SoftwareHistoryUpdateManyWithWhereWithoutSoftwareInput = {
    where: SoftwareHistoryScalarWhereInput
    data: XOR<SoftwareHistoryUpdateManyMutationInput, SoftwareHistoryUncheckedUpdateManyWithoutSoftwareInput>
  }

  export type SoftwareHistoryScalarWhereInput = {
    AND?: SoftwareHistoryScalarWhereInput | SoftwareHistoryScalarWhereInput[]
    OR?: SoftwareHistoryScalarWhereInput[]
    NOT?: SoftwareHistoryScalarWhereInput | SoftwareHistoryScalarWhereInput[]
    id?: StringFilter<"SoftwareHistory"> | string
    softwareId?: StringFilter<"SoftwareHistory"> | string
    action?: StringFilter<"SoftwareHistory"> | string
    field?: StringFilter<"SoftwareHistory"> | string
    newValue?: StringNullableFilter<"SoftwareHistory"> | string | null
    oldValue?: StringNullableFilter<"SoftwareHistory"> | string | null
    updatedBy?: StringFilter<"SoftwareHistory"> | string
    updatedOn?: DateTimeFilter<"SoftwareHistory"> | Date | string
  }

  export type UserSoftwareUpsertWithWhereUniqueWithoutSoftwareInput = {
    where: UserSoftwareWhereUniqueInput
    update: XOR<UserSoftwareUpdateWithoutSoftwareInput, UserSoftwareUncheckedUpdateWithoutSoftwareInput>
    create: XOR<UserSoftwareCreateWithoutSoftwareInput, UserSoftwareUncheckedCreateWithoutSoftwareInput>
  }

  export type UserSoftwareUpdateWithWhereUniqueWithoutSoftwareInput = {
    where: UserSoftwareWhereUniqueInput
    data: XOR<UserSoftwareUpdateWithoutSoftwareInput, UserSoftwareUncheckedUpdateWithoutSoftwareInput>
  }

  export type UserSoftwareUpdateManyWithWhereWithoutSoftwareInput = {
    where: UserSoftwareScalarWhereInput
    data: XOR<UserSoftwareUpdateManyMutationInput, UserSoftwareUncheckedUpdateManyWithoutSoftwareInput>
  }

  export type UserProfilesUpsertWithWhereUniqueWithoutSoftwareInput = {
    where: UserProfilesWhereUniqueInput
    update: XOR<UserProfilesUpdateWithoutSoftwareInput, UserProfilesUncheckedUpdateWithoutSoftwareInput>
    create: XOR<UserProfilesCreateWithoutSoftwareInput, UserProfilesUncheckedCreateWithoutSoftwareInput>
  }

  export type UserProfilesUpdateWithWhereUniqueWithoutSoftwareInput = {
    where: UserProfilesWhereUniqueInput
    data: XOR<UserProfilesUpdateWithoutSoftwareInput, UserProfilesUncheckedUpdateWithoutSoftwareInput>
  }

  export type UserProfilesUpdateManyWithWhereWithoutSoftwareInput = {
    where: UserProfilesScalarWhereInput
    data: XOR<UserProfilesUpdateManyMutationInput, UserProfilesUncheckedUpdateManyWithoutSoftwareInput>
  }

  export type UserProfilesScalarWhereInput = {
    AND?: UserProfilesScalarWhereInput | UserProfilesScalarWhereInput[]
    OR?: UserProfilesScalarWhereInput[]
    NOT?: UserProfilesScalarWhereInput | UserProfilesScalarWhereInput[]
    id?: UuidFilter<"UserProfiles"> | string
    username?: StringNullableFilter<"UserProfiles"> | string | null
    fullName?: StringNullableFilter<"UserProfiles"> | string | null
    email?: StringNullableFilter<"UserProfiles"> | string | null
    phone?: StringNullableFilter<"UserProfiles"> | string | null
    avatarUrl?: StringNullableFilter<"UserProfiles"> | string | null
    website?: StringNullableFilter<"UserProfiles"> | string | null
    createdAt?: DateTimeFilter<"UserProfiles"> | Date | string
    updatedAt?: DateTimeFilter<"UserProfiles"> | Date | string
  }

  export type SoftwareCreateWithoutHistoriesInput = {
    id?: string
    name: string
    description?: string | null
    category?: string | null
    status?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userCount?: number | null
    notes?: string | null
    accountRep?: string | null
    amount?: number | null
    currency?: string | null
    licenseType?: string | null
    paymentDueDate?: Date | string | null
    paymentFrequency?: $Enums.PaymentFrequency
    paymentMethod?: $Enums.PaymentMethod
    pricePerUser?: number | null
    website?: string | null
    accountReps?: AccountRepCreateNestedManyWithoutSoftwareInput
    notesLastUpdatedBy: UserCreateNestedOneWithoutSoftwareNotesInput
    updatedBy?: UserCreateNestedOneWithoutSoftwareInput
    SoftwareAccess?: SoftwareAccessCreateNestedManyWithoutSoftwareInput
    UserSoftware?: UserSoftwareCreateNestedManyWithoutSoftwareInput
    Assigned?: UserProfilesCreateNestedManyWithoutSoftwareInput
  }

  export type SoftwareUncheckedCreateWithoutHistoriesInput = {
    id?: string
    name: string
    description?: string | null
    category?: string | null
    status?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userCount?: number | null
    notes?: string | null
    notesLastUpdatedById: string
    accountRep?: string | null
    amount?: number | null
    currency?: string | null
    licenseType?: string | null
    paymentDueDate?: Date | string | null
    paymentFrequency?: $Enums.PaymentFrequency
    paymentMethod?: $Enums.PaymentMethod
    pricePerUser?: number | null
    updatedById?: string | null
    website?: string | null
    accountReps?: AccountRepUncheckedCreateNestedManyWithoutSoftwareInput
    SoftwareAccess?: SoftwareAccessUncheckedCreateNestedManyWithoutSoftwareInput
    UserSoftware?: UserSoftwareUncheckedCreateNestedManyWithoutSoftwareInput
    Assigned?: UserProfilesUncheckedCreateNestedManyWithoutSoftwareInput
  }

  export type SoftwareCreateOrConnectWithoutHistoriesInput = {
    where: SoftwareWhereUniqueInput
    create: XOR<SoftwareCreateWithoutHistoriesInput, SoftwareUncheckedCreateWithoutHistoriesInput>
  }

  export type SoftwareUpsertWithoutHistoriesInput = {
    update: XOR<SoftwareUpdateWithoutHistoriesInput, SoftwareUncheckedUpdateWithoutHistoriesInput>
    create: XOR<SoftwareCreateWithoutHistoriesInput, SoftwareUncheckedCreateWithoutHistoriesInput>
    where?: SoftwareWhereInput
  }

  export type SoftwareUpdateToOneWithWhereWithoutHistoriesInput = {
    where?: SoftwareWhereInput
    data: XOR<SoftwareUpdateWithoutHistoriesInput, SoftwareUncheckedUpdateWithoutHistoriesInput>
  }

  export type SoftwareUpdateWithoutHistoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    accountRep?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    paymentDueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentFrequency?: EnumPaymentFrequencyFieldUpdateOperationsInput | $Enums.PaymentFrequency
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    pricePerUser?: NullableFloatFieldUpdateOperationsInput | number | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    accountReps?: AccountRepUpdateManyWithoutSoftwareNestedInput
    notesLastUpdatedBy?: UserUpdateOneRequiredWithoutSoftwareNotesNestedInput
    updatedBy?: UserUpdateOneWithoutSoftwareNestedInput
    SoftwareAccess?: SoftwareAccessUpdateManyWithoutSoftwareNestedInput
    UserSoftware?: UserSoftwareUpdateManyWithoutSoftwareNestedInput
    Assigned?: UserProfilesUpdateManyWithoutSoftwareNestedInput
  }

  export type SoftwareUncheckedUpdateWithoutHistoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    notesLastUpdatedById?: StringFieldUpdateOperationsInput | string
    accountRep?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    paymentDueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentFrequency?: EnumPaymentFrequencyFieldUpdateOperationsInput | $Enums.PaymentFrequency
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    pricePerUser?: NullableFloatFieldUpdateOperationsInput | number | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    accountReps?: AccountRepUncheckedUpdateManyWithoutSoftwareNestedInput
    SoftwareAccess?: SoftwareAccessUncheckedUpdateManyWithoutSoftwareNestedInput
    UserSoftware?: UserSoftwareUncheckedUpdateManyWithoutSoftwareNestedInput
    Assigned?: UserProfilesUncheckedUpdateManyWithoutSoftwareNestedInput
  }

  export type UserProfilesCreateWithoutUserSoftwareInput = {
    id: string
    username?: string | null
    fullName?: string | null
    email?: string | null
    phone?: string | null
    avatarUrl?: string | null
    website?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Software?: SoftwareCreateNestedManyWithoutAssignedInput
  }

  export type UserProfilesUncheckedCreateWithoutUserSoftwareInput = {
    id: string
    username?: string | null
    fullName?: string | null
    email?: string | null
    phone?: string | null
    avatarUrl?: string | null
    website?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Software?: SoftwareUncheckedCreateNestedManyWithoutAssignedInput
  }

  export type UserProfilesCreateOrConnectWithoutUserSoftwareInput = {
    where: UserProfilesWhereUniqueInput
    create: XOR<UserProfilesCreateWithoutUserSoftwareInput, UserProfilesUncheckedCreateWithoutUserSoftwareInput>
  }

  export type SoftwareCreateWithoutUserSoftwareInput = {
    id?: string
    name: string
    description?: string | null
    category?: string | null
    status?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userCount?: number | null
    notes?: string | null
    accountRep?: string | null
    amount?: number | null
    currency?: string | null
    licenseType?: string | null
    paymentDueDate?: Date | string | null
    paymentFrequency?: $Enums.PaymentFrequency
    paymentMethod?: $Enums.PaymentMethod
    pricePerUser?: number | null
    website?: string | null
    accountReps?: AccountRepCreateNestedManyWithoutSoftwareInput
    notesLastUpdatedBy: UserCreateNestedOneWithoutSoftwareNotesInput
    updatedBy?: UserCreateNestedOneWithoutSoftwareInput
    SoftwareAccess?: SoftwareAccessCreateNestedManyWithoutSoftwareInput
    histories?: SoftwareHistoryCreateNestedManyWithoutSoftwareInput
    Assigned?: UserProfilesCreateNestedManyWithoutSoftwareInput
  }

  export type SoftwareUncheckedCreateWithoutUserSoftwareInput = {
    id?: string
    name: string
    description?: string | null
    category?: string | null
    status?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userCount?: number | null
    notes?: string | null
    notesLastUpdatedById: string
    accountRep?: string | null
    amount?: number | null
    currency?: string | null
    licenseType?: string | null
    paymentDueDate?: Date | string | null
    paymentFrequency?: $Enums.PaymentFrequency
    paymentMethod?: $Enums.PaymentMethod
    pricePerUser?: number | null
    updatedById?: string | null
    website?: string | null
    accountReps?: AccountRepUncheckedCreateNestedManyWithoutSoftwareInput
    SoftwareAccess?: SoftwareAccessUncheckedCreateNestedManyWithoutSoftwareInput
    histories?: SoftwareHistoryUncheckedCreateNestedManyWithoutSoftwareInput
    Assigned?: UserProfilesUncheckedCreateNestedManyWithoutSoftwareInput
  }

  export type SoftwareCreateOrConnectWithoutUserSoftwareInput = {
    where: SoftwareWhereUniqueInput
    create: XOR<SoftwareCreateWithoutUserSoftwareInput, SoftwareUncheckedCreateWithoutUserSoftwareInput>
  }

  export type UserCreateWithoutSoftwareInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: string
    email: string
    name: string
    jobTitle?: string | null
    location?: string | null
    personalEmail?: string | null
    type?: string | null
    status?: string
    SharedAccount?: SharedAccountCreateNestedManyWithoutUpdatedByInput
    softwareNotes?: SoftwareCreateNestedManyWithoutNotesLastUpdatedByInput
    Software?: SoftwareCreateNestedManyWithoutUpdatedByInput
    reportsTo?: UserCreateNestedOneWithoutSubordinatesInput
    subordinates?: UserCreateNestedManyWithoutReportsToInput
    histories?: UserHistoryCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSoftwareInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: string
    email: string
    name: string
    jobTitle?: string | null
    location?: string | null
    personalEmail?: string | null
    reportsToId?: string | null
    type?: string | null
    status?: string
    SharedAccount?: SharedAccountUncheckedCreateNestedManyWithoutUpdatedByInput
    softwareNotes?: SoftwareUncheckedCreateNestedManyWithoutNotesLastUpdatedByInput
    Software?: SoftwareUncheckedCreateNestedManyWithoutUpdatedByInput
    subordinates?: UserUncheckedCreateNestedManyWithoutReportsToInput
    histories?: UserHistoryUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserProfilesUpsertWithoutUserSoftwareInput = {
    update: XOR<UserProfilesUpdateWithoutUserSoftwareInput, UserProfilesUncheckedUpdateWithoutUserSoftwareInput>
    create: XOR<UserProfilesCreateWithoutUserSoftwareInput, UserProfilesUncheckedCreateWithoutUserSoftwareInput>
    where?: UserProfilesWhereInput
  }

  export type UserProfilesUpdateToOneWithWhereWithoutUserSoftwareInput = {
    where?: UserProfilesWhereInput
    data: XOR<UserProfilesUpdateWithoutUserSoftwareInput, UserProfilesUncheckedUpdateWithoutUserSoftwareInput>
  }

  export type UserProfilesUpdateWithoutUserSoftwareInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Software?: SoftwareUpdateManyWithoutAssignedNestedInput
  }

  export type UserProfilesUncheckedUpdateWithoutUserSoftwareInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Software?: SoftwareUncheckedUpdateManyWithoutAssignedNestedInput
  }

  export type SoftwareUpsertWithoutUserSoftwareInput = {
    update: XOR<SoftwareUpdateWithoutUserSoftwareInput, SoftwareUncheckedUpdateWithoutUserSoftwareInput>
    create: XOR<SoftwareCreateWithoutUserSoftwareInput, SoftwareUncheckedCreateWithoutUserSoftwareInput>
    where?: SoftwareWhereInput
  }

  export type SoftwareUpdateToOneWithWhereWithoutUserSoftwareInput = {
    where?: SoftwareWhereInput
    data: XOR<SoftwareUpdateWithoutUserSoftwareInput, SoftwareUncheckedUpdateWithoutUserSoftwareInput>
  }

  export type SoftwareUpdateWithoutUserSoftwareInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    accountRep?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    paymentDueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentFrequency?: EnumPaymentFrequencyFieldUpdateOperationsInput | $Enums.PaymentFrequency
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    pricePerUser?: NullableFloatFieldUpdateOperationsInput | number | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    accountReps?: AccountRepUpdateManyWithoutSoftwareNestedInput
    notesLastUpdatedBy?: UserUpdateOneRequiredWithoutSoftwareNotesNestedInput
    updatedBy?: UserUpdateOneWithoutSoftwareNestedInput
    SoftwareAccess?: SoftwareAccessUpdateManyWithoutSoftwareNestedInput
    histories?: SoftwareHistoryUpdateManyWithoutSoftwareNestedInput
    Assigned?: UserProfilesUpdateManyWithoutSoftwareNestedInput
  }

  export type SoftwareUncheckedUpdateWithoutUserSoftwareInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    notesLastUpdatedById?: StringFieldUpdateOperationsInput | string
    accountRep?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    paymentDueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentFrequency?: EnumPaymentFrequencyFieldUpdateOperationsInput | $Enums.PaymentFrequency
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    pricePerUser?: NullableFloatFieldUpdateOperationsInput | number | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    accountReps?: AccountRepUncheckedUpdateManyWithoutSoftwareNestedInput
    SoftwareAccess?: SoftwareAccessUncheckedUpdateManyWithoutSoftwareNestedInput
    histories?: SoftwareHistoryUncheckedUpdateManyWithoutSoftwareNestedInput
    Assigned?: UserProfilesUncheckedUpdateManyWithoutSoftwareNestedInput
  }

  export type UserUpsertWithoutSoftwareInput = {
    update: XOR<UserUpdateWithoutSoftwareInput, UserUncheckedUpdateWithoutSoftwareInput>
    create: XOR<UserCreateWithoutSoftwareInput, UserUncheckedCreateWithoutSoftwareInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSoftwareInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSoftwareInput, UserUncheckedUpdateWithoutSoftwareInput>
  }

  export type UserUpdateWithoutSoftwareInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    personalEmail?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    SharedAccount?: SharedAccountUpdateManyWithoutUpdatedByNestedInput
    softwareNotes?: SoftwareUpdateManyWithoutNotesLastUpdatedByNestedInput
    Software?: SoftwareUpdateManyWithoutUpdatedByNestedInput
    reportsTo?: UserUpdateOneWithoutSubordinatesNestedInput
    subordinates?: UserUpdateManyWithoutReportsToNestedInput
    histories?: UserHistoryUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSoftwareInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    personalEmail?: NullableStringFieldUpdateOperationsInput | string | null
    reportsToId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    SharedAccount?: SharedAccountUncheckedUpdateManyWithoutUpdatedByNestedInput
    softwareNotes?: SoftwareUncheckedUpdateManyWithoutNotesLastUpdatedByNestedInput
    Software?: SoftwareUncheckedUpdateManyWithoutUpdatedByNestedInput
    subordinates?: UserUncheckedUpdateManyWithoutReportsToNestedInput
    histories?: UserHistoryUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutSharedAccountInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: string
    email: string
    name: string
    jobTitle?: string | null
    location?: string | null
    personalEmail?: string | null
    type?: string | null
    status?: string
    softwareNotes?: SoftwareCreateNestedManyWithoutNotesLastUpdatedByInput
    Software?: SoftwareCreateNestedManyWithoutUpdatedByInput
    reportsTo?: UserCreateNestedOneWithoutSubordinatesInput
    subordinates?: UserCreateNestedManyWithoutReportsToInput
    histories?: UserHistoryCreateNestedManyWithoutUserInput
    software?: UserSoftwareCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSharedAccountInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: string
    email: string
    name: string
    jobTitle?: string | null
    location?: string | null
    personalEmail?: string | null
    reportsToId?: string | null
    type?: string | null
    status?: string
    softwareNotes?: SoftwareUncheckedCreateNestedManyWithoutNotesLastUpdatedByInput
    Software?: SoftwareUncheckedCreateNestedManyWithoutUpdatedByInput
    subordinates?: UserUncheckedCreateNestedManyWithoutReportsToInput
    histories?: UserHistoryUncheckedCreateNestedManyWithoutUserInput
    software?: UserSoftwareUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSharedAccountInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSharedAccountInput, UserUncheckedCreateWithoutSharedAccountInput>
  }

  export type SharedAccountHistoryCreateWithoutSharedAccountInput = {
    id?: string
    action: string
    field: string
    newValue?: string | null
    oldValue?: string | null
    updatedBy: string
    updatedOn?: Date | string
  }

  export type SharedAccountHistoryUncheckedCreateWithoutSharedAccountInput = {
    id?: string
    action: string
    field: string
    newValue?: string | null
    oldValue?: string | null
    updatedBy: string
    updatedOn?: Date | string
  }

  export type SharedAccountHistoryCreateOrConnectWithoutSharedAccountInput = {
    where: SharedAccountHistoryWhereUniqueInput
    create: XOR<SharedAccountHistoryCreateWithoutSharedAccountInput, SharedAccountHistoryUncheckedCreateWithoutSharedAccountInput>
  }

  export type SharedAccountHistoryCreateManySharedAccountInputEnvelope = {
    data: SharedAccountHistoryCreateManySharedAccountInput | SharedAccountHistoryCreateManySharedAccountInput[]
    skipDuplicates?: boolean
  }

  export type SoftwareAccessCreateWithoutSharedAccountInput = {
    id?: string
    access: boolean
    lastEdited?: Date | string
    lastEditedBy: string
    permissions?: SoftwareAccessCreatepermissionsInput | string[]
    uid: string
    software: SoftwareCreateNestedOneWithoutSoftwareAccessInput
  }

  export type SoftwareAccessUncheckedCreateWithoutSharedAccountInput = {
    id?: string
    softwareId: string
    access: boolean
    lastEdited?: Date | string
    lastEditedBy: string
    permissions?: SoftwareAccessCreatepermissionsInput | string[]
    uid: string
  }

  export type SoftwareAccessCreateOrConnectWithoutSharedAccountInput = {
    where: SoftwareAccessWhereUniqueInput
    create: XOR<SoftwareAccessCreateWithoutSharedAccountInput, SoftwareAccessUncheckedCreateWithoutSharedAccountInput>
  }

  export type SoftwareAccessCreateManySharedAccountInputEnvelope = {
    data: SoftwareAccessCreateManySharedAccountInput | SoftwareAccessCreateManySharedAccountInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutSharedAccountInput = {
    update: XOR<UserUpdateWithoutSharedAccountInput, UserUncheckedUpdateWithoutSharedAccountInput>
    create: XOR<UserCreateWithoutSharedAccountInput, UserUncheckedCreateWithoutSharedAccountInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSharedAccountInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSharedAccountInput, UserUncheckedUpdateWithoutSharedAccountInput>
  }

  export type UserUpdateWithoutSharedAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    personalEmail?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    softwareNotes?: SoftwareUpdateManyWithoutNotesLastUpdatedByNestedInput
    Software?: SoftwareUpdateManyWithoutUpdatedByNestedInput
    reportsTo?: UserUpdateOneWithoutSubordinatesNestedInput
    subordinates?: UserUpdateManyWithoutReportsToNestedInput
    histories?: UserHistoryUpdateManyWithoutUserNestedInput
    software?: UserSoftwareUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSharedAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    personalEmail?: NullableStringFieldUpdateOperationsInput | string | null
    reportsToId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    softwareNotes?: SoftwareUncheckedUpdateManyWithoutNotesLastUpdatedByNestedInput
    Software?: SoftwareUncheckedUpdateManyWithoutUpdatedByNestedInput
    subordinates?: UserUncheckedUpdateManyWithoutReportsToNestedInput
    histories?: UserHistoryUncheckedUpdateManyWithoutUserNestedInput
    software?: UserSoftwareUncheckedUpdateManyWithoutUserNestedInput
  }

  export type SharedAccountHistoryUpsertWithWhereUniqueWithoutSharedAccountInput = {
    where: SharedAccountHistoryWhereUniqueInput
    update: XOR<SharedAccountHistoryUpdateWithoutSharedAccountInput, SharedAccountHistoryUncheckedUpdateWithoutSharedAccountInput>
    create: XOR<SharedAccountHistoryCreateWithoutSharedAccountInput, SharedAccountHistoryUncheckedCreateWithoutSharedAccountInput>
  }

  export type SharedAccountHistoryUpdateWithWhereUniqueWithoutSharedAccountInput = {
    where: SharedAccountHistoryWhereUniqueInput
    data: XOR<SharedAccountHistoryUpdateWithoutSharedAccountInput, SharedAccountHistoryUncheckedUpdateWithoutSharedAccountInput>
  }

  export type SharedAccountHistoryUpdateManyWithWhereWithoutSharedAccountInput = {
    where: SharedAccountHistoryScalarWhereInput
    data: XOR<SharedAccountHistoryUpdateManyMutationInput, SharedAccountHistoryUncheckedUpdateManyWithoutSharedAccountInput>
  }

  export type SharedAccountHistoryScalarWhereInput = {
    AND?: SharedAccountHistoryScalarWhereInput | SharedAccountHistoryScalarWhereInput[]
    OR?: SharedAccountHistoryScalarWhereInput[]
    NOT?: SharedAccountHistoryScalarWhereInput | SharedAccountHistoryScalarWhereInput[]
    id?: StringFilter<"SharedAccountHistory"> | string
    sharedAccountId?: StringFilter<"SharedAccountHistory"> | string
    action?: StringFilter<"SharedAccountHistory"> | string
    field?: StringFilter<"SharedAccountHistory"> | string
    newValue?: StringNullableFilter<"SharedAccountHistory"> | string | null
    oldValue?: StringNullableFilter<"SharedAccountHistory"> | string | null
    updatedBy?: StringFilter<"SharedAccountHistory"> | string
    updatedOn?: DateTimeFilter<"SharedAccountHistory"> | Date | string
  }

  export type SoftwareAccessUpsertWithWhereUniqueWithoutSharedAccountInput = {
    where: SoftwareAccessWhereUniqueInput
    update: XOR<SoftwareAccessUpdateWithoutSharedAccountInput, SoftwareAccessUncheckedUpdateWithoutSharedAccountInput>
    create: XOR<SoftwareAccessCreateWithoutSharedAccountInput, SoftwareAccessUncheckedCreateWithoutSharedAccountInput>
  }

  export type SoftwareAccessUpdateWithWhereUniqueWithoutSharedAccountInput = {
    where: SoftwareAccessWhereUniqueInput
    data: XOR<SoftwareAccessUpdateWithoutSharedAccountInput, SoftwareAccessUncheckedUpdateWithoutSharedAccountInput>
  }

  export type SoftwareAccessUpdateManyWithWhereWithoutSharedAccountInput = {
    where: SoftwareAccessScalarWhereInput
    data: XOR<SoftwareAccessUpdateManyMutationInput, SoftwareAccessUncheckedUpdateManyWithoutSharedAccountInput>
  }

  export type SharedAccountCreateWithoutHistoriesInput = {
    id?: string
    email: string
    name: string
    normalizedName: string
    location?: string | null
    type?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    userCount?: number
    updatedBy: UserCreateNestedOneWithoutSharedAccountInput
    softwareAccesses?: SoftwareAccessCreateNestedManyWithoutSharedAccountInput
  }

  export type SharedAccountUncheckedCreateWithoutHistoriesInput = {
    id?: string
    email: string
    name: string
    normalizedName: string
    location?: string | null
    type?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    updatedById: string
    userCount?: number
    softwareAccesses?: SoftwareAccessUncheckedCreateNestedManyWithoutSharedAccountInput
  }

  export type SharedAccountCreateOrConnectWithoutHistoriesInput = {
    where: SharedAccountWhereUniqueInput
    create: XOR<SharedAccountCreateWithoutHistoriesInput, SharedAccountUncheckedCreateWithoutHistoriesInput>
  }

  export type SharedAccountUpsertWithoutHistoriesInput = {
    update: XOR<SharedAccountUpdateWithoutHistoriesInput, SharedAccountUncheckedUpdateWithoutHistoriesInput>
    create: XOR<SharedAccountCreateWithoutHistoriesInput, SharedAccountUncheckedCreateWithoutHistoriesInput>
    where?: SharedAccountWhereInput
  }

  export type SharedAccountUpdateToOneWithWhereWithoutHistoriesInput = {
    where?: SharedAccountWhereInput
    data: XOR<SharedAccountUpdateWithoutHistoriesInput, SharedAccountUncheckedUpdateWithoutHistoriesInput>
  }

  export type SharedAccountUpdateWithoutHistoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    normalizedName?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: IntFieldUpdateOperationsInput | number
    updatedBy?: UserUpdateOneRequiredWithoutSharedAccountNestedInput
    softwareAccesses?: SoftwareAccessUpdateManyWithoutSharedAccountNestedInput
  }

  export type SharedAccountUncheckedUpdateWithoutHistoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    normalizedName?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedById?: StringFieldUpdateOperationsInput | string
    userCount?: IntFieldUpdateOperationsInput | number
    softwareAccesses?: SoftwareAccessUncheckedUpdateManyWithoutSharedAccountNestedInput
  }

  export type SharedAccountCreateWithoutSoftwareAccessesInput = {
    id?: string
    email: string
    name: string
    normalizedName: string
    location?: string | null
    type?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    userCount?: number
    updatedBy: UserCreateNestedOneWithoutSharedAccountInput
    histories?: SharedAccountHistoryCreateNestedManyWithoutSharedAccountInput
  }

  export type SharedAccountUncheckedCreateWithoutSoftwareAccessesInput = {
    id?: string
    email: string
    name: string
    normalizedName: string
    location?: string | null
    type?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    updatedById: string
    userCount?: number
    histories?: SharedAccountHistoryUncheckedCreateNestedManyWithoutSharedAccountInput
  }

  export type SharedAccountCreateOrConnectWithoutSoftwareAccessesInput = {
    where: SharedAccountWhereUniqueInput
    create: XOR<SharedAccountCreateWithoutSoftwareAccessesInput, SharedAccountUncheckedCreateWithoutSoftwareAccessesInput>
  }

  export type SoftwareCreateWithoutSoftwareAccessInput = {
    id?: string
    name: string
    description?: string | null
    category?: string | null
    status?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userCount?: number | null
    notes?: string | null
    accountRep?: string | null
    amount?: number | null
    currency?: string | null
    licenseType?: string | null
    paymentDueDate?: Date | string | null
    paymentFrequency?: $Enums.PaymentFrequency
    paymentMethod?: $Enums.PaymentMethod
    pricePerUser?: number | null
    website?: string | null
    accountReps?: AccountRepCreateNestedManyWithoutSoftwareInput
    notesLastUpdatedBy: UserCreateNestedOneWithoutSoftwareNotesInput
    updatedBy?: UserCreateNestedOneWithoutSoftwareInput
    histories?: SoftwareHistoryCreateNestedManyWithoutSoftwareInput
    UserSoftware?: UserSoftwareCreateNestedManyWithoutSoftwareInput
    Assigned?: UserProfilesCreateNestedManyWithoutSoftwareInput
  }

  export type SoftwareUncheckedCreateWithoutSoftwareAccessInput = {
    id?: string
    name: string
    description?: string | null
    category?: string | null
    status?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userCount?: number | null
    notes?: string | null
    notesLastUpdatedById: string
    accountRep?: string | null
    amount?: number | null
    currency?: string | null
    licenseType?: string | null
    paymentDueDate?: Date | string | null
    paymentFrequency?: $Enums.PaymentFrequency
    paymentMethod?: $Enums.PaymentMethod
    pricePerUser?: number | null
    updatedById?: string | null
    website?: string | null
    accountReps?: AccountRepUncheckedCreateNestedManyWithoutSoftwareInput
    histories?: SoftwareHistoryUncheckedCreateNestedManyWithoutSoftwareInput
    UserSoftware?: UserSoftwareUncheckedCreateNestedManyWithoutSoftwareInput
    Assigned?: UserProfilesUncheckedCreateNestedManyWithoutSoftwareInput
  }

  export type SoftwareCreateOrConnectWithoutSoftwareAccessInput = {
    where: SoftwareWhereUniqueInput
    create: XOR<SoftwareCreateWithoutSoftwareAccessInput, SoftwareUncheckedCreateWithoutSoftwareAccessInput>
  }

  export type SharedAccountUpsertWithoutSoftwareAccessesInput = {
    update: XOR<SharedAccountUpdateWithoutSoftwareAccessesInput, SharedAccountUncheckedUpdateWithoutSoftwareAccessesInput>
    create: XOR<SharedAccountCreateWithoutSoftwareAccessesInput, SharedAccountUncheckedCreateWithoutSoftwareAccessesInput>
    where?: SharedAccountWhereInput
  }

  export type SharedAccountUpdateToOneWithWhereWithoutSoftwareAccessesInput = {
    where?: SharedAccountWhereInput
    data: XOR<SharedAccountUpdateWithoutSoftwareAccessesInput, SharedAccountUncheckedUpdateWithoutSoftwareAccessesInput>
  }

  export type SharedAccountUpdateWithoutSoftwareAccessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    normalizedName?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: IntFieldUpdateOperationsInput | number
    updatedBy?: UserUpdateOneRequiredWithoutSharedAccountNestedInput
    histories?: SharedAccountHistoryUpdateManyWithoutSharedAccountNestedInput
  }

  export type SharedAccountUncheckedUpdateWithoutSoftwareAccessesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    normalizedName?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedById?: StringFieldUpdateOperationsInput | string
    userCount?: IntFieldUpdateOperationsInput | number
    histories?: SharedAccountHistoryUncheckedUpdateManyWithoutSharedAccountNestedInput
  }

  export type SoftwareUpsertWithoutSoftwareAccessInput = {
    update: XOR<SoftwareUpdateWithoutSoftwareAccessInput, SoftwareUncheckedUpdateWithoutSoftwareAccessInput>
    create: XOR<SoftwareCreateWithoutSoftwareAccessInput, SoftwareUncheckedCreateWithoutSoftwareAccessInput>
    where?: SoftwareWhereInput
  }

  export type SoftwareUpdateToOneWithWhereWithoutSoftwareAccessInput = {
    where?: SoftwareWhereInput
    data: XOR<SoftwareUpdateWithoutSoftwareAccessInput, SoftwareUncheckedUpdateWithoutSoftwareAccessInput>
  }

  export type SoftwareUpdateWithoutSoftwareAccessInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    accountRep?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    paymentDueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentFrequency?: EnumPaymentFrequencyFieldUpdateOperationsInput | $Enums.PaymentFrequency
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    pricePerUser?: NullableFloatFieldUpdateOperationsInput | number | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    accountReps?: AccountRepUpdateManyWithoutSoftwareNestedInput
    notesLastUpdatedBy?: UserUpdateOneRequiredWithoutSoftwareNotesNestedInput
    updatedBy?: UserUpdateOneWithoutSoftwareNestedInput
    histories?: SoftwareHistoryUpdateManyWithoutSoftwareNestedInput
    UserSoftware?: UserSoftwareUpdateManyWithoutSoftwareNestedInput
    Assigned?: UserProfilesUpdateManyWithoutSoftwareNestedInput
  }

  export type SoftwareUncheckedUpdateWithoutSoftwareAccessInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    notesLastUpdatedById?: StringFieldUpdateOperationsInput | string
    accountRep?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    paymentDueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentFrequency?: EnumPaymentFrequencyFieldUpdateOperationsInput | $Enums.PaymentFrequency
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    pricePerUser?: NullableFloatFieldUpdateOperationsInput | number | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    accountReps?: AccountRepUncheckedUpdateManyWithoutSoftwareNestedInput
    histories?: SoftwareHistoryUncheckedUpdateManyWithoutSoftwareNestedInput
    UserSoftware?: UserSoftwareUncheckedUpdateManyWithoutSoftwareNestedInput
    Assigned?: UserProfilesUncheckedUpdateManyWithoutSoftwareNestedInput
  }

  export type saml_relay_statesCreateWithoutFlow_stateInput = {
    id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    sso_providers: sso_providersCreateNestedOneWithoutSaml_relay_statesInput
  }

  export type saml_relay_statesUncheckedCreateWithoutFlow_stateInput = {
    id: string
    sso_provider_id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type saml_relay_statesCreateOrConnectWithoutFlow_stateInput = {
    where: saml_relay_statesWhereUniqueInput
    create: XOR<saml_relay_statesCreateWithoutFlow_stateInput, saml_relay_statesUncheckedCreateWithoutFlow_stateInput>
  }

  export type saml_relay_statesCreateManyFlow_stateInputEnvelope = {
    data: saml_relay_statesCreateManyFlow_stateInput | saml_relay_statesCreateManyFlow_stateInput[]
    skipDuplicates?: boolean
  }

  export type saml_relay_statesUpsertWithWhereUniqueWithoutFlow_stateInput = {
    where: saml_relay_statesWhereUniqueInput
    update: XOR<saml_relay_statesUpdateWithoutFlow_stateInput, saml_relay_statesUncheckedUpdateWithoutFlow_stateInput>
    create: XOR<saml_relay_statesCreateWithoutFlow_stateInput, saml_relay_statesUncheckedCreateWithoutFlow_stateInput>
  }

  export type saml_relay_statesUpdateWithWhereUniqueWithoutFlow_stateInput = {
    where: saml_relay_statesWhereUniqueInput
    data: XOR<saml_relay_statesUpdateWithoutFlow_stateInput, saml_relay_statesUncheckedUpdateWithoutFlow_stateInput>
  }

  export type saml_relay_statesUpdateManyWithWhereWithoutFlow_stateInput = {
    where: saml_relay_statesScalarWhereInput
    data: XOR<saml_relay_statesUpdateManyMutationInput, saml_relay_statesUncheckedUpdateManyWithoutFlow_stateInput>
  }

  export type saml_relay_statesScalarWhereInput = {
    AND?: saml_relay_statesScalarWhereInput | saml_relay_statesScalarWhereInput[]
    OR?: saml_relay_statesScalarWhereInput[]
    NOT?: saml_relay_statesScalarWhereInput | saml_relay_statesScalarWhereInput[]
    id?: UuidFilter<"saml_relay_states"> | string
    sso_provider_id?: UuidFilter<"saml_relay_states"> | string
    request_id?: StringFilter<"saml_relay_states"> | string
    for_email?: StringNullableFilter<"saml_relay_states"> | string | null
    redirect_to?: StringNullableFilter<"saml_relay_states"> | string | null
    created_at?: DateTimeNullableFilter<"saml_relay_states"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"saml_relay_states"> | Date | string | null
    flow_state_id?: UuidNullableFilter<"saml_relay_states"> | string | null
  }

  export type usersCreateWithoutIdentitiesInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    is_anonymous?: boolean
    mfa_factors?: mfa_factorsCreateNestedManyWithoutUsersInput
    one_time_tokens?: one_time_tokensCreateNestedManyWithoutUsersInput
    sessions?: sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutIdentitiesInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    is_anonymous?: boolean
    mfa_factors?: mfa_factorsUncheckedCreateNestedManyWithoutUsersInput
    one_time_tokens?: one_time_tokensUncheckedCreateNestedManyWithoutUsersInput
    sessions?: sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutIdentitiesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutIdentitiesInput, usersUncheckedCreateWithoutIdentitiesInput>
  }

  export type usersUpsertWithoutIdentitiesInput = {
    update: XOR<usersUpdateWithoutIdentitiesInput, usersUncheckedUpdateWithoutIdentitiesInput>
    create: XOR<usersCreateWithoutIdentitiesInput, usersUncheckedCreateWithoutIdentitiesInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutIdentitiesInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutIdentitiesInput, usersUncheckedUpdateWithoutIdentitiesInput>
  }

  export type usersUpdateWithoutIdentitiesInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    mfa_factors?: mfa_factorsUpdateManyWithoutUsersNestedInput
    one_time_tokens?: one_time_tokensUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutIdentitiesInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    mfa_factors?: mfa_factorsUncheckedUpdateManyWithoutUsersNestedInput
    one_time_tokens?: one_time_tokensUncheckedUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type sessionsCreateWithoutMfa_amr_claimsInput = {
    id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
    refresh_tokens?: refresh_tokensCreateNestedManyWithoutSessionsInput
    users: usersCreateNestedOneWithoutSessionsInput
  }

  export type sessionsUncheckedCreateWithoutMfa_amr_claimsInput = {
    id: string
    user_id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
    refresh_tokens?: refresh_tokensUncheckedCreateNestedManyWithoutSessionsInput
  }

  export type sessionsCreateOrConnectWithoutMfa_amr_claimsInput = {
    where: sessionsWhereUniqueInput
    create: XOR<sessionsCreateWithoutMfa_amr_claimsInput, sessionsUncheckedCreateWithoutMfa_amr_claimsInput>
  }

  export type sessionsUpsertWithoutMfa_amr_claimsInput = {
    update: XOR<sessionsUpdateWithoutMfa_amr_claimsInput, sessionsUncheckedUpdateWithoutMfa_amr_claimsInput>
    create: XOR<sessionsCreateWithoutMfa_amr_claimsInput, sessionsUncheckedCreateWithoutMfa_amr_claimsInput>
    where?: sessionsWhereInput
  }

  export type sessionsUpdateToOneWithWhereWithoutMfa_amr_claimsInput = {
    where?: sessionsWhereInput
    data: XOR<sessionsUpdateWithoutMfa_amr_claimsInput, sessionsUncheckedUpdateWithoutMfa_amr_claimsInput>
  }

  export type sessionsUpdateWithoutMfa_amr_claimsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_tokens?: refresh_tokensUpdateManyWithoutSessionsNestedInput
    users?: usersUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type sessionsUncheckedUpdateWithoutMfa_amr_claimsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_tokens?: refresh_tokensUncheckedUpdateManyWithoutSessionsNestedInput
  }

  export type mfa_factorsCreateWithoutMfa_challengesInput = {
    id: string
    friendly_name?: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date | string
    updated_at: Date | string
    secret?: string | null
    phone?: string | null
    last_challenged_at?: Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: string | null
    users: usersCreateNestedOneWithoutMfa_factorsInput
  }

  export type mfa_factorsUncheckedCreateWithoutMfa_challengesInput = {
    id: string
    user_id: string
    friendly_name?: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date | string
    updated_at: Date | string
    secret?: string | null
    phone?: string | null
    last_challenged_at?: Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: string | null
  }

  export type mfa_factorsCreateOrConnectWithoutMfa_challengesInput = {
    where: mfa_factorsWhereUniqueInput
    create: XOR<mfa_factorsCreateWithoutMfa_challengesInput, mfa_factorsUncheckedCreateWithoutMfa_challengesInput>
  }

  export type mfa_factorsUpsertWithoutMfa_challengesInput = {
    update: XOR<mfa_factorsUpdateWithoutMfa_challengesInput, mfa_factorsUncheckedUpdateWithoutMfa_challengesInput>
    create: XOR<mfa_factorsCreateWithoutMfa_challengesInput, mfa_factorsUncheckedCreateWithoutMfa_challengesInput>
    where?: mfa_factorsWhereInput
  }

  export type mfa_factorsUpdateToOneWithWhereWithoutMfa_challengesInput = {
    where?: mfa_factorsWhereInput
    data: XOR<mfa_factorsUpdateWithoutMfa_challengesInput, mfa_factorsUncheckedUpdateWithoutMfa_challengesInput>
  }

  export type mfa_factorsUpdateWithoutMfa_challengesInput = {
    id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    last_challenged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneRequiredWithoutMfa_factorsNestedInput
  }

  export type mfa_factorsUncheckedUpdateWithoutMfa_challengesInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    last_challenged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type mfa_challengesCreateWithoutMfa_factorsInput = {
    id: string
    created_at: Date | string
    verified_at?: Date | string | null
    ip_address: string
    otp_code?: string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type mfa_challengesUncheckedCreateWithoutMfa_factorsInput = {
    id: string
    created_at: Date | string
    verified_at?: Date | string | null
    ip_address: string
    otp_code?: string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type mfa_challengesCreateOrConnectWithoutMfa_factorsInput = {
    where: mfa_challengesWhereUniqueInput
    create: XOR<mfa_challengesCreateWithoutMfa_factorsInput, mfa_challengesUncheckedCreateWithoutMfa_factorsInput>
  }

  export type mfa_challengesCreateManyMfa_factorsInputEnvelope = {
    data: mfa_challengesCreateManyMfa_factorsInput | mfa_challengesCreateManyMfa_factorsInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutMfa_factorsInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    is_anonymous?: boolean
    identities?: identitiesCreateNestedManyWithoutUsersInput
    one_time_tokens?: one_time_tokensCreateNestedManyWithoutUsersInput
    sessions?: sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutMfa_factorsInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    is_anonymous?: boolean
    identities?: identitiesUncheckedCreateNestedManyWithoutUsersInput
    one_time_tokens?: one_time_tokensUncheckedCreateNestedManyWithoutUsersInput
    sessions?: sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutMfa_factorsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutMfa_factorsInput, usersUncheckedCreateWithoutMfa_factorsInput>
  }

  export type mfa_challengesUpsertWithWhereUniqueWithoutMfa_factorsInput = {
    where: mfa_challengesWhereUniqueInput
    update: XOR<mfa_challengesUpdateWithoutMfa_factorsInput, mfa_challengesUncheckedUpdateWithoutMfa_factorsInput>
    create: XOR<mfa_challengesCreateWithoutMfa_factorsInput, mfa_challengesUncheckedCreateWithoutMfa_factorsInput>
  }

  export type mfa_challengesUpdateWithWhereUniqueWithoutMfa_factorsInput = {
    where: mfa_challengesWhereUniqueInput
    data: XOR<mfa_challengesUpdateWithoutMfa_factorsInput, mfa_challengesUncheckedUpdateWithoutMfa_factorsInput>
  }

  export type mfa_challengesUpdateManyWithWhereWithoutMfa_factorsInput = {
    where: mfa_challengesScalarWhereInput
    data: XOR<mfa_challengesUpdateManyMutationInput, mfa_challengesUncheckedUpdateManyWithoutMfa_factorsInput>
  }

  export type mfa_challengesScalarWhereInput = {
    AND?: mfa_challengesScalarWhereInput | mfa_challengesScalarWhereInput[]
    OR?: mfa_challengesScalarWhereInput[]
    NOT?: mfa_challengesScalarWhereInput | mfa_challengesScalarWhereInput[]
    id?: UuidFilter<"mfa_challenges"> | string
    factor_id?: UuidFilter<"mfa_challenges"> | string
    created_at?: DateTimeFilter<"mfa_challenges"> | Date | string
    verified_at?: DateTimeNullableFilter<"mfa_challenges"> | Date | string | null
    ip_address?: StringFilter<"mfa_challenges"> | string
    otp_code?: StringNullableFilter<"mfa_challenges"> | string | null
    web_authn_session_data?: JsonNullableFilter<"mfa_challenges">
  }

  export type usersUpsertWithoutMfa_factorsInput = {
    update: XOR<usersUpdateWithoutMfa_factorsInput, usersUncheckedUpdateWithoutMfa_factorsInput>
    create: XOR<usersCreateWithoutMfa_factorsInput, usersUncheckedCreateWithoutMfa_factorsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutMfa_factorsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutMfa_factorsInput, usersUncheckedUpdateWithoutMfa_factorsInput>
  }

  export type usersUpdateWithoutMfa_factorsInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    identities?: identitiesUpdateManyWithoutUsersNestedInput
    one_time_tokens?: one_time_tokensUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutMfa_factorsInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    identities?: identitiesUncheckedUpdateManyWithoutUsersNestedInput
    one_time_tokens?: one_time_tokensUncheckedUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateWithoutOne_time_tokensInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    is_anonymous?: boolean
    identities?: identitiesCreateNestedManyWithoutUsersInput
    mfa_factors?: mfa_factorsCreateNestedManyWithoutUsersInput
    sessions?: sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutOne_time_tokensInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    is_anonymous?: boolean
    identities?: identitiesUncheckedCreateNestedManyWithoutUsersInput
    mfa_factors?: mfa_factorsUncheckedCreateNestedManyWithoutUsersInput
    sessions?: sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutOne_time_tokensInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutOne_time_tokensInput, usersUncheckedCreateWithoutOne_time_tokensInput>
  }

  export type usersUpsertWithoutOne_time_tokensInput = {
    update: XOR<usersUpdateWithoutOne_time_tokensInput, usersUncheckedUpdateWithoutOne_time_tokensInput>
    create: XOR<usersCreateWithoutOne_time_tokensInput, usersUncheckedCreateWithoutOne_time_tokensInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutOne_time_tokensInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutOne_time_tokensInput, usersUncheckedUpdateWithoutOne_time_tokensInput>
  }

  export type usersUpdateWithoutOne_time_tokensInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    identities?: identitiesUpdateManyWithoutUsersNestedInput
    mfa_factors?: mfa_factorsUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutOne_time_tokensInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    identities?: identitiesUncheckedUpdateManyWithoutUsersNestedInput
    mfa_factors?: mfa_factorsUncheckedUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type sessionsCreateWithoutRefresh_tokensInput = {
    id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
    mfa_amr_claims?: mfa_amr_claimsCreateNestedManyWithoutSessionsInput
    users: usersCreateNestedOneWithoutSessionsInput
  }

  export type sessionsUncheckedCreateWithoutRefresh_tokensInput = {
    id: string
    user_id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
    mfa_amr_claims?: mfa_amr_claimsUncheckedCreateNestedManyWithoutSessionsInput
  }

  export type sessionsCreateOrConnectWithoutRefresh_tokensInput = {
    where: sessionsWhereUniqueInput
    create: XOR<sessionsCreateWithoutRefresh_tokensInput, sessionsUncheckedCreateWithoutRefresh_tokensInput>
  }

  export type sessionsUpsertWithoutRefresh_tokensInput = {
    update: XOR<sessionsUpdateWithoutRefresh_tokensInput, sessionsUncheckedUpdateWithoutRefresh_tokensInput>
    create: XOR<sessionsCreateWithoutRefresh_tokensInput, sessionsUncheckedCreateWithoutRefresh_tokensInput>
    where?: sessionsWhereInput
  }

  export type sessionsUpdateToOneWithWhereWithoutRefresh_tokensInput = {
    where?: sessionsWhereInput
    data: XOR<sessionsUpdateWithoutRefresh_tokensInput, sessionsUncheckedUpdateWithoutRefresh_tokensInput>
  }

  export type sessionsUpdateWithoutRefresh_tokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_amr_claims?: mfa_amr_claimsUpdateManyWithoutSessionsNestedInput
    users?: usersUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type sessionsUncheckedUpdateWithoutRefresh_tokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_amr_claims?: mfa_amr_claimsUncheckedUpdateManyWithoutSessionsNestedInput
  }

  export type sso_providersCreateWithoutSaml_providersInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    saml_relay_states?: saml_relay_statesCreateNestedManyWithoutSso_providersInput
    sso_domains?: sso_domainsCreateNestedManyWithoutSso_providersInput
  }

  export type sso_providersUncheckedCreateWithoutSaml_providersInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    saml_relay_states?: saml_relay_statesUncheckedCreateNestedManyWithoutSso_providersInput
    sso_domains?: sso_domainsUncheckedCreateNestedManyWithoutSso_providersInput
  }

  export type sso_providersCreateOrConnectWithoutSaml_providersInput = {
    where: sso_providersWhereUniqueInput
    create: XOR<sso_providersCreateWithoutSaml_providersInput, sso_providersUncheckedCreateWithoutSaml_providersInput>
  }

  export type sso_providersUpsertWithoutSaml_providersInput = {
    update: XOR<sso_providersUpdateWithoutSaml_providersInput, sso_providersUncheckedUpdateWithoutSaml_providersInput>
    create: XOR<sso_providersCreateWithoutSaml_providersInput, sso_providersUncheckedCreateWithoutSaml_providersInput>
    where?: sso_providersWhereInput
  }

  export type sso_providersUpdateToOneWithWhereWithoutSaml_providersInput = {
    where?: sso_providersWhereInput
    data: XOR<sso_providersUpdateWithoutSaml_providersInput, sso_providersUncheckedUpdateWithoutSaml_providersInput>
  }

  export type sso_providersUpdateWithoutSaml_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_relay_states?: saml_relay_statesUpdateManyWithoutSso_providersNestedInput
    sso_domains?: sso_domainsUpdateManyWithoutSso_providersNestedInput
  }

  export type sso_providersUncheckedUpdateWithoutSaml_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_relay_states?: saml_relay_statesUncheckedUpdateManyWithoutSso_providersNestedInput
    sso_domains?: sso_domainsUncheckedUpdateManyWithoutSso_providersNestedInput
  }

  export type flow_stateCreateWithoutSaml_relay_statesInput = {
    id: string
    user_id?: string | null
    auth_code: string
    code_challenge_method: $Enums.code_challenge_method
    code_challenge: string
    provider_type: string
    provider_access_token?: string | null
    provider_refresh_token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    authentication_method: string
    auth_code_issued_at?: Date | string | null
  }

  export type flow_stateUncheckedCreateWithoutSaml_relay_statesInput = {
    id: string
    user_id?: string | null
    auth_code: string
    code_challenge_method: $Enums.code_challenge_method
    code_challenge: string
    provider_type: string
    provider_access_token?: string | null
    provider_refresh_token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    authentication_method: string
    auth_code_issued_at?: Date | string | null
  }

  export type flow_stateCreateOrConnectWithoutSaml_relay_statesInput = {
    where: flow_stateWhereUniqueInput
    create: XOR<flow_stateCreateWithoutSaml_relay_statesInput, flow_stateUncheckedCreateWithoutSaml_relay_statesInput>
  }

  export type sso_providersCreateWithoutSaml_relay_statesInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    saml_providers?: saml_providersCreateNestedManyWithoutSso_providersInput
    sso_domains?: sso_domainsCreateNestedManyWithoutSso_providersInput
  }

  export type sso_providersUncheckedCreateWithoutSaml_relay_statesInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    saml_providers?: saml_providersUncheckedCreateNestedManyWithoutSso_providersInput
    sso_domains?: sso_domainsUncheckedCreateNestedManyWithoutSso_providersInput
  }

  export type sso_providersCreateOrConnectWithoutSaml_relay_statesInput = {
    where: sso_providersWhereUniqueInput
    create: XOR<sso_providersCreateWithoutSaml_relay_statesInput, sso_providersUncheckedCreateWithoutSaml_relay_statesInput>
  }

  export type flow_stateUpsertWithoutSaml_relay_statesInput = {
    update: XOR<flow_stateUpdateWithoutSaml_relay_statesInput, flow_stateUncheckedUpdateWithoutSaml_relay_statesInput>
    create: XOR<flow_stateCreateWithoutSaml_relay_statesInput, flow_stateUncheckedCreateWithoutSaml_relay_statesInput>
    where?: flow_stateWhereInput
  }

  export type flow_stateUpdateToOneWithWhereWithoutSaml_relay_statesInput = {
    where?: flow_stateWhereInput
    data: XOR<flow_stateUpdateWithoutSaml_relay_statesInput, flow_stateUncheckedUpdateWithoutSaml_relay_statesInput>
  }

  export type flow_stateUpdateWithoutSaml_relay_statesInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    auth_code?: StringFieldUpdateOperationsInput | string
    code_challenge_method?: Enumcode_challenge_methodFieldUpdateOperationsInput | $Enums.code_challenge_method
    code_challenge?: StringFieldUpdateOperationsInput | string
    provider_type?: StringFieldUpdateOperationsInput | string
    provider_access_token?: NullableStringFieldUpdateOperationsInput | string | null
    provider_refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authentication_method?: StringFieldUpdateOperationsInput | string
    auth_code_issued_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type flow_stateUncheckedUpdateWithoutSaml_relay_statesInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    auth_code?: StringFieldUpdateOperationsInput | string
    code_challenge_method?: Enumcode_challenge_methodFieldUpdateOperationsInput | $Enums.code_challenge_method
    code_challenge?: StringFieldUpdateOperationsInput | string
    provider_type?: StringFieldUpdateOperationsInput | string
    provider_access_token?: NullableStringFieldUpdateOperationsInput | string | null
    provider_refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authentication_method?: StringFieldUpdateOperationsInput | string
    auth_code_issued_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sso_providersUpsertWithoutSaml_relay_statesInput = {
    update: XOR<sso_providersUpdateWithoutSaml_relay_statesInput, sso_providersUncheckedUpdateWithoutSaml_relay_statesInput>
    create: XOR<sso_providersCreateWithoutSaml_relay_statesInput, sso_providersUncheckedCreateWithoutSaml_relay_statesInput>
    where?: sso_providersWhereInput
  }

  export type sso_providersUpdateToOneWithWhereWithoutSaml_relay_statesInput = {
    where?: sso_providersWhereInput
    data: XOR<sso_providersUpdateWithoutSaml_relay_statesInput, sso_providersUncheckedUpdateWithoutSaml_relay_statesInput>
  }

  export type sso_providersUpdateWithoutSaml_relay_statesInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_providers?: saml_providersUpdateManyWithoutSso_providersNestedInput
    sso_domains?: sso_domainsUpdateManyWithoutSso_providersNestedInput
  }

  export type sso_providersUncheckedUpdateWithoutSaml_relay_statesInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_providers?: saml_providersUncheckedUpdateManyWithoutSso_providersNestedInput
    sso_domains?: sso_domainsUncheckedUpdateManyWithoutSso_providersNestedInput
  }

  export type mfa_amr_claimsCreateWithoutSessionsInput = {
    created_at: Date | string
    updated_at: Date | string
    authentication_method: string
    id: string
  }

  export type mfa_amr_claimsUncheckedCreateWithoutSessionsInput = {
    created_at: Date | string
    updated_at: Date | string
    authentication_method: string
    id: string
  }

  export type mfa_amr_claimsCreateOrConnectWithoutSessionsInput = {
    where: mfa_amr_claimsWhereUniqueInput
    create: XOR<mfa_amr_claimsCreateWithoutSessionsInput, mfa_amr_claimsUncheckedCreateWithoutSessionsInput>
  }

  export type mfa_amr_claimsCreateManySessionsInputEnvelope = {
    data: mfa_amr_claimsCreateManySessionsInput | mfa_amr_claimsCreateManySessionsInput[]
    skipDuplicates?: boolean
  }

  export type refresh_tokensCreateWithoutSessionsInput = {
    instance_id?: string | null
    id?: bigint | number
    token?: string | null
    user_id?: string | null
    revoked?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    parent?: string | null
  }

  export type refresh_tokensUncheckedCreateWithoutSessionsInput = {
    instance_id?: string | null
    id?: bigint | number
    token?: string | null
    user_id?: string | null
    revoked?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    parent?: string | null
  }

  export type refresh_tokensCreateOrConnectWithoutSessionsInput = {
    where: refresh_tokensWhereUniqueInput
    create: XOR<refresh_tokensCreateWithoutSessionsInput, refresh_tokensUncheckedCreateWithoutSessionsInput>
  }

  export type refresh_tokensCreateManySessionsInputEnvelope = {
    data: refresh_tokensCreateManySessionsInput | refresh_tokensCreateManySessionsInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutSessionsInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    is_anonymous?: boolean
    identities?: identitiesCreateNestedManyWithoutUsersInput
    mfa_factors?: mfa_factorsCreateNestedManyWithoutUsersInput
    one_time_tokens?: one_time_tokensCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutSessionsInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    is_anonymous?: boolean
    identities?: identitiesUncheckedCreateNestedManyWithoutUsersInput
    mfa_factors?: mfa_factorsUncheckedCreateNestedManyWithoutUsersInput
    one_time_tokens?: one_time_tokensUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutSessionsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutSessionsInput, usersUncheckedCreateWithoutSessionsInput>
  }

  export type mfa_amr_claimsUpsertWithWhereUniqueWithoutSessionsInput = {
    where: mfa_amr_claimsWhereUniqueInput
    update: XOR<mfa_amr_claimsUpdateWithoutSessionsInput, mfa_amr_claimsUncheckedUpdateWithoutSessionsInput>
    create: XOR<mfa_amr_claimsCreateWithoutSessionsInput, mfa_amr_claimsUncheckedCreateWithoutSessionsInput>
  }

  export type mfa_amr_claimsUpdateWithWhereUniqueWithoutSessionsInput = {
    where: mfa_amr_claimsWhereUniqueInput
    data: XOR<mfa_amr_claimsUpdateWithoutSessionsInput, mfa_amr_claimsUncheckedUpdateWithoutSessionsInput>
  }

  export type mfa_amr_claimsUpdateManyWithWhereWithoutSessionsInput = {
    where: mfa_amr_claimsScalarWhereInput
    data: XOR<mfa_amr_claimsUpdateManyMutationInput, mfa_amr_claimsUncheckedUpdateManyWithoutSessionsInput>
  }

  export type mfa_amr_claimsScalarWhereInput = {
    AND?: mfa_amr_claimsScalarWhereInput | mfa_amr_claimsScalarWhereInput[]
    OR?: mfa_amr_claimsScalarWhereInput[]
    NOT?: mfa_amr_claimsScalarWhereInput | mfa_amr_claimsScalarWhereInput[]
    session_id?: UuidFilter<"mfa_amr_claims"> | string
    created_at?: DateTimeFilter<"mfa_amr_claims"> | Date | string
    updated_at?: DateTimeFilter<"mfa_amr_claims"> | Date | string
    authentication_method?: StringFilter<"mfa_amr_claims"> | string
    id?: UuidFilter<"mfa_amr_claims"> | string
  }

  export type refresh_tokensUpsertWithWhereUniqueWithoutSessionsInput = {
    where: refresh_tokensWhereUniqueInput
    update: XOR<refresh_tokensUpdateWithoutSessionsInput, refresh_tokensUncheckedUpdateWithoutSessionsInput>
    create: XOR<refresh_tokensCreateWithoutSessionsInput, refresh_tokensUncheckedCreateWithoutSessionsInput>
  }

  export type refresh_tokensUpdateWithWhereUniqueWithoutSessionsInput = {
    where: refresh_tokensWhereUniqueInput
    data: XOR<refresh_tokensUpdateWithoutSessionsInput, refresh_tokensUncheckedUpdateWithoutSessionsInput>
  }

  export type refresh_tokensUpdateManyWithWhereWithoutSessionsInput = {
    where: refresh_tokensScalarWhereInput
    data: XOR<refresh_tokensUpdateManyMutationInput, refresh_tokensUncheckedUpdateManyWithoutSessionsInput>
  }

  export type refresh_tokensScalarWhereInput = {
    AND?: refresh_tokensScalarWhereInput | refresh_tokensScalarWhereInput[]
    OR?: refresh_tokensScalarWhereInput[]
    NOT?: refresh_tokensScalarWhereInput | refresh_tokensScalarWhereInput[]
    instance_id?: UuidNullableFilter<"refresh_tokens"> | string | null
    id?: BigIntFilter<"refresh_tokens"> | bigint | number
    token?: StringNullableFilter<"refresh_tokens"> | string | null
    user_id?: StringNullableFilter<"refresh_tokens"> | string | null
    revoked?: BoolNullableFilter<"refresh_tokens"> | boolean | null
    created_at?: DateTimeNullableFilter<"refresh_tokens"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"refresh_tokens"> | Date | string | null
    parent?: StringNullableFilter<"refresh_tokens"> | string | null
    session_id?: UuidNullableFilter<"refresh_tokens"> | string | null
  }

  export type usersUpsertWithoutSessionsInput = {
    update: XOR<usersUpdateWithoutSessionsInput, usersUncheckedUpdateWithoutSessionsInput>
    create: XOR<usersCreateWithoutSessionsInput, usersUncheckedCreateWithoutSessionsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutSessionsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutSessionsInput, usersUncheckedUpdateWithoutSessionsInput>
  }

  export type usersUpdateWithoutSessionsInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    identities?: identitiesUpdateManyWithoutUsersNestedInput
    mfa_factors?: mfa_factorsUpdateManyWithoutUsersNestedInput
    one_time_tokens?: one_time_tokensUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutSessionsInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    identities?: identitiesUncheckedUpdateManyWithoutUsersNestedInput
    mfa_factors?: mfa_factorsUncheckedUpdateManyWithoutUsersNestedInput
    one_time_tokens?: one_time_tokensUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type sso_providersCreateWithoutSso_domainsInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    saml_providers?: saml_providersCreateNestedManyWithoutSso_providersInput
    saml_relay_states?: saml_relay_statesCreateNestedManyWithoutSso_providersInput
  }

  export type sso_providersUncheckedCreateWithoutSso_domainsInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    saml_providers?: saml_providersUncheckedCreateNestedManyWithoutSso_providersInput
    saml_relay_states?: saml_relay_statesUncheckedCreateNestedManyWithoutSso_providersInput
  }

  export type sso_providersCreateOrConnectWithoutSso_domainsInput = {
    where: sso_providersWhereUniqueInput
    create: XOR<sso_providersCreateWithoutSso_domainsInput, sso_providersUncheckedCreateWithoutSso_domainsInput>
  }

  export type sso_providersUpsertWithoutSso_domainsInput = {
    update: XOR<sso_providersUpdateWithoutSso_domainsInput, sso_providersUncheckedUpdateWithoutSso_domainsInput>
    create: XOR<sso_providersCreateWithoutSso_domainsInput, sso_providersUncheckedCreateWithoutSso_domainsInput>
    where?: sso_providersWhereInput
  }

  export type sso_providersUpdateToOneWithWhereWithoutSso_domainsInput = {
    where?: sso_providersWhereInput
    data: XOR<sso_providersUpdateWithoutSso_domainsInput, sso_providersUncheckedUpdateWithoutSso_domainsInput>
  }

  export type sso_providersUpdateWithoutSso_domainsInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_providers?: saml_providersUpdateManyWithoutSso_providersNestedInput
    saml_relay_states?: saml_relay_statesUpdateManyWithoutSso_providersNestedInput
  }

  export type sso_providersUncheckedUpdateWithoutSso_domainsInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_providers?: saml_providersUncheckedUpdateManyWithoutSso_providersNestedInput
    saml_relay_states?: saml_relay_statesUncheckedUpdateManyWithoutSso_providersNestedInput
  }

  export type saml_providersCreateWithoutSso_providersInput = {
    id: string
    entity_id: string
    metadata_xml: string
    metadata_url?: string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    name_id_format?: string | null
  }

  export type saml_providersUncheckedCreateWithoutSso_providersInput = {
    id: string
    entity_id: string
    metadata_xml: string
    metadata_url?: string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    name_id_format?: string | null
  }

  export type saml_providersCreateOrConnectWithoutSso_providersInput = {
    where: saml_providersWhereUniqueInput
    create: XOR<saml_providersCreateWithoutSso_providersInput, saml_providersUncheckedCreateWithoutSso_providersInput>
  }

  export type saml_providersCreateManySso_providersInputEnvelope = {
    data: saml_providersCreateManySso_providersInput | saml_providersCreateManySso_providersInput[]
    skipDuplicates?: boolean
  }

  export type saml_relay_statesCreateWithoutSso_providersInput = {
    id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    flow_state?: flow_stateCreateNestedOneWithoutSaml_relay_statesInput
  }

  export type saml_relay_statesUncheckedCreateWithoutSso_providersInput = {
    id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    flow_state_id?: string | null
  }

  export type saml_relay_statesCreateOrConnectWithoutSso_providersInput = {
    where: saml_relay_statesWhereUniqueInput
    create: XOR<saml_relay_statesCreateWithoutSso_providersInput, saml_relay_statesUncheckedCreateWithoutSso_providersInput>
  }

  export type saml_relay_statesCreateManySso_providersInputEnvelope = {
    data: saml_relay_statesCreateManySso_providersInput | saml_relay_statesCreateManySso_providersInput[]
    skipDuplicates?: boolean
  }

  export type sso_domainsCreateWithoutSso_providersInput = {
    id: string
    domain: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type sso_domainsUncheckedCreateWithoutSso_providersInput = {
    id: string
    domain: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type sso_domainsCreateOrConnectWithoutSso_providersInput = {
    where: sso_domainsWhereUniqueInput
    create: XOR<sso_domainsCreateWithoutSso_providersInput, sso_domainsUncheckedCreateWithoutSso_providersInput>
  }

  export type sso_domainsCreateManySso_providersInputEnvelope = {
    data: sso_domainsCreateManySso_providersInput | sso_domainsCreateManySso_providersInput[]
    skipDuplicates?: boolean
  }

  export type saml_providersUpsertWithWhereUniqueWithoutSso_providersInput = {
    where: saml_providersWhereUniqueInput
    update: XOR<saml_providersUpdateWithoutSso_providersInput, saml_providersUncheckedUpdateWithoutSso_providersInput>
    create: XOR<saml_providersCreateWithoutSso_providersInput, saml_providersUncheckedCreateWithoutSso_providersInput>
  }

  export type saml_providersUpdateWithWhereUniqueWithoutSso_providersInput = {
    where: saml_providersWhereUniqueInput
    data: XOR<saml_providersUpdateWithoutSso_providersInput, saml_providersUncheckedUpdateWithoutSso_providersInput>
  }

  export type saml_providersUpdateManyWithWhereWithoutSso_providersInput = {
    where: saml_providersScalarWhereInput
    data: XOR<saml_providersUpdateManyMutationInput, saml_providersUncheckedUpdateManyWithoutSso_providersInput>
  }

  export type saml_providersScalarWhereInput = {
    AND?: saml_providersScalarWhereInput | saml_providersScalarWhereInput[]
    OR?: saml_providersScalarWhereInput[]
    NOT?: saml_providersScalarWhereInput | saml_providersScalarWhereInput[]
    id?: UuidFilter<"saml_providers"> | string
    sso_provider_id?: UuidFilter<"saml_providers"> | string
    entity_id?: StringFilter<"saml_providers"> | string
    metadata_xml?: StringFilter<"saml_providers"> | string
    metadata_url?: StringNullableFilter<"saml_providers"> | string | null
    attribute_mapping?: JsonNullableFilter<"saml_providers">
    created_at?: DateTimeNullableFilter<"saml_providers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"saml_providers"> | Date | string | null
    name_id_format?: StringNullableFilter<"saml_providers"> | string | null
  }

  export type saml_relay_statesUpsertWithWhereUniqueWithoutSso_providersInput = {
    where: saml_relay_statesWhereUniqueInput
    update: XOR<saml_relay_statesUpdateWithoutSso_providersInput, saml_relay_statesUncheckedUpdateWithoutSso_providersInput>
    create: XOR<saml_relay_statesCreateWithoutSso_providersInput, saml_relay_statesUncheckedCreateWithoutSso_providersInput>
  }

  export type saml_relay_statesUpdateWithWhereUniqueWithoutSso_providersInput = {
    where: saml_relay_statesWhereUniqueInput
    data: XOR<saml_relay_statesUpdateWithoutSso_providersInput, saml_relay_statesUncheckedUpdateWithoutSso_providersInput>
  }

  export type saml_relay_statesUpdateManyWithWhereWithoutSso_providersInput = {
    where: saml_relay_statesScalarWhereInput
    data: XOR<saml_relay_statesUpdateManyMutationInput, saml_relay_statesUncheckedUpdateManyWithoutSso_providersInput>
  }

  export type sso_domainsUpsertWithWhereUniqueWithoutSso_providersInput = {
    where: sso_domainsWhereUniqueInput
    update: XOR<sso_domainsUpdateWithoutSso_providersInput, sso_domainsUncheckedUpdateWithoutSso_providersInput>
    create: XOR<sso_domainsCreateWithoutSso_providersInput, sso_domainsUncheckedCreateWithoutSso_providersInput>
  }

  export type sso_domainsUpdateWithWhereUniqueWithoutSso_providersInput = {
    where: sso_domainsWhereUniqueInput
    data: XOR<sso_domainsUpdateWithoutSso_providersInput, sso_domainsUncheckedUpdateWithoutSso_providersInput>
  }

  export type sso_domainsUpdateManyWithWhereWithoutSso_providersInput = {
    where: sso_domainsScalarWhereInput
    data: XOR<sso_domainsUpdateManyMutationInput, sso_domainsUncheckedUpdateManyWithoutSso_providersInput>
  }

  export type sso_domainsScalarWhereInput = {
    AND?: sso_domainsScalarWhereInput | sso_domainsScalarWhereInput[]
    OR?: sso_domainsScalarWhereInput[]
    NOT?: sso_domainsScalarWhereInput | sso_domainsScalarWhereInput[]
    id?: UuidFilter<"sso_domains"> | string
    sso_provider_id?: UuidFilter<"sso_domains"> | string
    domain?: StringFilter<"sso_domains"> | string
    created_at?: DateTimeNullableFilter<"sso_domains"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sso_domains"> | Date | string | null
  }

  export type identitiesCreateWithoutUsersInput = {
    provider_id: string
    identity_data: JsonNullValueInput | InputJsonValue
    provider: string
    last_sign_in_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    email?: string | null
    id?: string
  }

  export type identitiesUncheckedCreateWithoutUsersInput = {
    provider_id: string
    identity_data: JsonNullValueInput | InputJsonValue
    provider: string
    last_sign_in_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    email?: string | null
    id?: string
  }

  export type identitiesCreateOrConnectWithoutUsersInput = {
    where: identitiesWhereUniqueInput
    create: XOR<identitiesCreateWithoutUsersInput, identitiesUncheckedCreateWithoutUsersInput>
  }

  export type identitiesCreateManyUsersInputEnvelope = {
    data: identitiesCreateManyUsersInput | identitiesCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type mfa_factorsCreateWithoutUsersInput = {
    id: string
    friendly_name?: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date | string
    updated_at: Date | string
    secret?: string | null
    phone?: string | null
    last_challenged_at?: Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: string | null
    mfa_challenges?: mfa_challengesCreateNestedManyWithoutMfa_factorsInput
  }

  export type mfa_factorsUncheckedCreateWithoutUsersInput = {
    id: string
    friendly_name?: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date | string
    updated_at: Date | string
    secret?: string | null
    phone?: string | null
    last_challenged_at?: Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: string | null
    mfa_challenges?: mfa_challengesUncheckedCreateNestedManyWithoutMfa_factorsInput
  }

  export type mfa_factorsCreateOrConnectWithoutUsersInput = {
    where: mfa_factorsWhereUniqueInput
    create: XOR<mfa_factorsCreateWithoutUsersInput, mfa_factorsUncheckedCreateWithoutUsersInput>
  }

  export type mfa_factorsCreateManyUsersInputEnvelope = {
    data: mfa_factorsCreateManyUsersInput | mfa_factorsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type one_time_tokensCreateWithoutUsersInput = {
    id: string
    token_type: $Enums.one_time_token_type
    token_hash: string
    relates_to: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type one_time_tokensUncheckedCreateWithoutUsersInput = {
    id: string
    token_type: $Enums.one_time_token_type
    token_hash: string
    relates_to: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type one_time_tokensCreateOrConnectWithoutUsersInput = {
    where: one_time_tokensWhereUniqueInput
    create: XOR<one_time_tokensCreateWithoutUsersInput, one_time_tokensUncheckedCreateWithoutUsersInput>
  }

  export type one_time_tokensCreateManyUsersInputEnvelope = {
    data: one_time_tokensCreateManyUsersInput | one_time_tokensCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type sessionsCreateWithoutUsersInput = {
    id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
    mfa_amr_claims?: mfa_amr_claimsCreateNestedManyWithoutSessionsInput
    refresh_tokens?: refresh_tokensCreateNestedManyWithoutSessionsInput
  }

  export type sessionsUncheckedCreateWithoutUsersInput = {
    id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
    mfa_amr_claims?: mfa_amr_claimsUncheckedCreateNestedManyWithoutSessionsInput
    refresh_tokens?: refresh_tokensUncheckedCreateNestedManyWithoutSessionsInput
  }

  export type sessionsCreateOrConnectWithoutUsersInput = {
    where: sessionsWhereUniqueInput
    create: XOR<sessionsCreateWithoutUsersInput, sessionsUncheckedCreateWithoutUsersInput>
  }

  export type sessionsCreateManyUsersInputEnvelope = {
    data: sessionsCreateManyUsersInput | sessionsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type identitiesUpsertWithWhereUniqueWithoutUsersInput = {
    where: identitiesWhereUniqueInput
    update: XOR<identitiesUpdateWithoutUsersInput, identitiesUncheckedUpdateWithoutUsersInput>
    create: XOR<identitiesCreateWithoutUsersInput, identitiesUncheckedCreateWithoutUsersInput>
  }

  export type identitiesUpdateWithWhereUniqueWithoutUsersInput = {
    where: identitiesWhereUniqueInput
    data: XOR<identitiesUpdateWithoutUsersInput, identitiesUncheckedUpdateWithoutUsersInput>
  }

  export type identitiesUpdateManyWithWhereWithoutUsersInput = {
    where: identitiesScalarWhereInput
    data: XOR<identitiesUpdateManyMutationInput, identitiesUncheckedUpdateManyWithoutUsersInput>
  }

  export type identitiesScalarWhereInput = {
    AND?: identitiesScalarWhereInput | identitiesScalarWhereInput[]
    OR?: identitiesScalarWhereInput[]
    NOT?: identitiesScalarWhereInput | identitiesScalarWhereInput[]
    provider_id?: StringFilter<"identities"> | string
    user_id?: UuidFilter<"identities"> | string
    identity_data?: JsonFilter<"identities">
    provider?: StringFilter<"identities"> | string
    last_sign_in_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    created_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    email?: StringNullableFilter<"identities"> | string | null
    id?: UuidFilter<"identities"> | string
  }

  export type mfa_factorsUpsertWithWhereUniqueWithoutUsersInput = {
    where: mfa_factorsWhereUniqueInput
    update: XOR<mfa_factorsUpdateWithoutUsersInput, mfa_factorsUncheckedUpdateWithoutUsersInput>
    create: XOR<mfa_factorsCreateWithoutUsersInput, mfa_factorsUncheckedCreateWithoutUsersInput>
  }

  export type mfa_factorsUpdateWithWhereUniqueWithoutUsersInput = {
    where: mfa_factorsWhereUniqueInput
    data: XOR<mfa_factorsUpdateWithoutUsersInput, mfa_factorsUncheckedUpdateWithoutUsersInput>
  }

  export type mfa_factorsUpdateManyWithWhereWithoutUsersInput = {
    where: mfa_factorsScalarWhereInput
    data: XOR<mfa_factorsUpdateManyMutationInput, mfa_factorsUncheckedUpdateManyWithoutUsersInput>
  }

  export type mfa_factorsScalarWhereInput = {
    AND?: mfa_factorsScalarWhereInput | mfa_factorsScalarWhereInput[]
    OR?: mfa_factorsScalarWhereInput[]
    NOT?: mfa_factorsScalarWhereInput | mfa_factorsScalarWhereInput[]
    id?: UuidFilter<"mfa_factors"> | string
    user_id?: UuidFilter<"mfa_factors"> | string
    friendly_name?: StringNullableFilter<"mfa_factors"> | string | null
    factor_type?: Enumfactor_typeFilter<"mfa_factors"> | $Enums.factor_type
    status?: Enumfactor_statusFilter<"mfa_factors"> | $Enums.factor_status
    created_at?: DateTimeFilter<"mfa_factors"> | Date | string
    updated_at?: DateTimeFilter<"mfa_factors"> | Date | string
    secret?: StringNullableFilter<"mfa_factors"> | string | null
    phone?: StringNullableFilter<"mfa_factors"> | string | null
    last_challenged_at?: DateTimeNullableFilter<"mfa_factors"> | Date | string | null
    web_authn_credential?: JsonNullableFilter<"mfa_factors">
    web_authn_aaguid?: UuidNullableFilter<"mfa_factors"> | string | null
  }

  export type one_time_tokensUpsertWithWhereUniqueWithoutUsersInput = {
    where: one_time_tokensWhereUniqueInput
    update: XOR<one_time_tokensUpdateWithoutUsersInput, one_time_tokensUncheckedUpdateWithoutUsersInput>
    create: XOR<one_time_tokensCreateWithoutUsersInput, one_time_tokensUncheckedCreateWithoutUsersInput>
  }

  export type one_time_tokensUpdateWithWhereUniqueWithoutUsersInput = {
    where: one_time_tokensWhereUniqueInput
    data: XOR<one_time_tokensUpdateWithoutUsersInput, one_time_tokensUncheckedUpdateWithoutUsersInput>
  }

  export type one_time_tokensUpdateManyWithWhereWithoutUsersInput = {
    where: one_time_tokensScalarWhereInput
    data: XOR<one_time_tokensUpdateManyMutationInput, one_time_tokensUncheckedUpdateManyWithoutUsersInput>
  }

  export type one_time_tokensScalarWhereInput = {
    AND?: one_time_tokensScalarWhereInput | one_time_tokensScalarWhereInput[]
    OR?: one_time_tokensScalarWhereInput[]
    NOT?: one_time_tokensScalarWhereInput | one_time_tokensScalarWhereInput[]
    id?: UuidFilter<"one_time_tokens"> | string
    user_id?: UuidFilter<"one_time_tokens"> | string
    token_type?: Enumone_time_token_typeFilter<"one_time_tokens"> | $Enums.one_time_token_type
    token_hash?: StringFilter<"one_time_tokens"> | string
    relates_to?: StringFilter<"one_time_tokens"> | string
    created_at?: DateTimeFilter<"one_time_tokens"> | Date | string
    updated_at?: DateTimeFilter<"one_time_tokens"> | Date | string
  }

  export type sessionsUpsertWithWhereUniqueWithoutUsersInput = {
    where: sessionsWhereUniqueInput
    update: XOR<sessionsUpdateWithoutUsersInput, sessionsUncheckedUpdateWithoutUsersInput>
    create: XOR<sessionsCreateWithoutUsersInput, sessionsUncheckedCreateWithoutUsersInput>
  }

  export type sessionsUpdateWithWhereUniqueWithoutUsersInput = {
    where: sessionsWhereUniqueInput
    data: XOR<sessionsUpdateWithoutUsersInput, sessionsUncheckedUpdateWithoutUsersInput>
  }

  export type sessionsUpdateManyWithWhereWithoutUsersInput = {
    where: sessionsScalarWhereInput
    data: XOR<sessionsUpdateManyMutationInput, sessionsUncheckedUpdateManyWithoutUsersInput>
  }

  export type sessionsScalarWhereInput = {
    AND?: sessionsScalarWhereInput | sessionsScalarWhereInput[]
    OR?: sessionsScalarWhereInput[]
    NOT?: sessionsScalarWhereInput | sessionsScalarWhereInput[]
    id?: UuidFilter<"sessions"> | string
    user_id?: UuidFilter<"sessions"> | string
    created_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    factor_id?: UuidNullableFilter<"sessions"> | string | null
    aal?: Enumaal_levelNullableFilter<"sessions"> | $Enums.aal_level | null
    not_after?: DateTimeNullableFilter<"sessions"> | Date | string | null
    refreshed_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    user_agent?: StringNullableFilter<"sessions"> | string | null
    ip?: StringNullableFilter<"sessions"> | string | null
    tag?: StringNullableFilter<"sessions"> | string | null
  }

  export type objectsCreateWithoutBucketsInput = {
    id?: string
    name?: string | null
    owner?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    last_accessed_at?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    path_tokens?: objectsCreatepath_tokensInput | string[]
    version?: string | null
    owner_id?: string | null
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type objectsUncheckedCreateWithoutBucketsInput = {
    id?: string
    name?: string | null
    owner?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    last_accessed_at?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    path_tokens?: objectsCreatepath_tokensInput | string[]
    version?: string | null
    owner_id?: string | null
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type objectsCreateOrConnectWithoutBucketsInput = {
    where: objectsWhereUniqueInput
    create: XOR<objectsCreateWithoutBucketsInput, objectsUncheckedCreateWithoutBucketsInput>
  }

  export type objectsCreateManyBucketsInputEnvelope = {
    data: objectsCreateManyBucketsInput | objectsCreateManyBucketsInput[]
    skipDuplicates?: boolean
  }

  export type s3_multipart_uploadsCreateWithoutBucketsInput = {
    id: string
    in_progress_size?: bigint | number
    upload_signature: string
    key: string
    version: string
    owner_id?: string | null
    created_at?: Date | string
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
    s3_multipart_uploads_parts?: s3_multipart_uploads_partsCreateNestedManyWithoutS3_multipart_uploadsInput
  }

  export type s3_multipart_uploadsUncheckedCreateWithoutBucketsInput = {
    id: string
    in_progress_size?: bigint | number
    upload_signature: string
    key: string
    version: string
    owner_id?: string | null
    created_at?: Date | string
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
    s3_multipart_uploads_parts?: s3_multipart_uploads_partsUncheckedCreateNestedManyWithoutS3_multipart_uploadsInput
  }

  export type s3_multipart_uploadsCreateOrConnectWithoutBucketsInput = {
    where: s3_multipart_uploadsWhereUniqueInput
    create: XOR<s3_multipart_uploadsCreateWithoutBucketsInput, s3_multipart_uploadsUncheckedCreateWithoutBucketsInput>
  }

  export type s3_multipart_uploadsCreateManyBucketsInputEnvelope = {
    data: s3_multipart_uploadsCreateManyBucketsInput | s3_multipart_uploadsCreateManyBucketsInput[]
    skipDuplicates?: boolean
  }

  export type s3_multipart_uploads_partsCreateWithoutBucketsInput = {
    id?: string
    size?: bigint | number
    part_number: number
    key: string
    etag: string
    owner_id?: string | null
    version: string
    created_at?: Date | string
    s3_multipart_uploads: s3_multipart_uploadsCreateNestedOneWithoutS3_multipart_uploads_partsInput
  }

  export type s3_multipart_uploads_partsUncheckedCreateWithoutBucketsInput = {
    id?: string
    upload_id: string
    size?: bigint | number
    part_number: number
    key: string
    etag: string
    owner_id?: string | null
    version: string
    created_at?: Date | string
  }

  export type s3_multipart_uploads_partsCreateOrConnectWithoutBucketsInput = {
    where: s3_multipart_uploads_partsWhereUniqueInput
    create: XOR<s3_multipart_uploads_partsCreateWithoutBucketsInput, s3_multipart_uploads_partsUncheckedCreateWithoutBucketsInput>
  }

  export type s3_multipart_uploads_partsCreateManyBucketsInputEnvelope = {
    data: s3_multipart_uploads_partsCreateManyBucketsInput | s3_multipart_uploads_partsCreateManyBucketsInput[]
    skipDuplicates?: boolean
  }

  export type objectsUpsertWithWhereUniqueWithoutBucketsInput = {
    where: objectsWhereUniqueInput
    update: XOR<objectsUpdateWithoutBucketsInput, objectsUncheckedUpdateWithoutBucketsInput>
    create: XOR<objectsCreateWithoutBucketsInput, objectsUncheckedCreateWithoutBucketsInput>
  }

  export type objectsUpdateWithWhereUniqueWithoutBucketsInput = {
    where: objectsWhereUniqueInput
    data: XOR<objectsUpdateWithoutBucketsInput, objectsUncheckedUpdateWithoutBucketsInput>
  }

  export type objectsUpdateManyWithWhereWithoutBucketsInput = {
    where: objectsScalarWhereInput
    data: XOR<objectsUpdateManyMutationInput, objectsUncheckedUpdateManyWithoutBucketsInput>
  }

  export type objectsScalarWhereInput = {
    AND?: objectsScalarWhereInput | objectsScalarWhereInput[]
    OR?: objectsScalarWhereInput[]
    NOT?: objectsScalarWhereInput | objectsScalarWhereInput[]
    id?: UuidFilter<"objects"> | string
    bucket_id?: StringNullableFilter<"objects"> | string | null
    name?: StringNullableFilter<"objects"> | string | null
    owner?: UuidNullableFilter<"objects"> | string | null
    created_at?: DateTimeNullableFilter<"objects"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"objects"> | Date | string | null
    last_accessed_at?: DateTimeNullableFilter<"objects"> | Date | string | null
    metadata?: JsonNullableFilter<"objects">
    path_tokens?: StringNullableListFilter<"objects">
    version?: StringNullableFilter<"objects"> | string | null
    owner_id?: StringNullableFilter<"objects"> | string | null
    user_metadata?: JsonNullableFilter<"objects">
  }

  export type s3_multipart_uploadsUpsertWithWhereUniqueWithoutBucketsInput = {
    where: s3_multipart_uploadsWhereUniqueInput
    update: XOR<s3_multipart_uploadsUpdateWithoutBucketsInput, s3_multipart_uploadsUncheckedUpdateWithoutBucketsInput>
    create: XOR<s3_multipart_uploadsCreateWithoutBucketsInput, s3_multipart_uploadsUncheckedCreateWithoutBucketsInput>
  }

  export type s3_multipart_uploadsUpdateWithWhereUniqueWithoutBucketsInput = {
    where: s3_multipart_uploadsWhereUniqueInput
    data: XOR<s3_multipart_uploadsUpdateWithoutBucketsInput, s3_multipart_uploadsUncheckedUpdateWithoutBucketsInput>
  }

  export type s3_multipart_uploadsUpdateManyWithWhereWithoutBucketsInput = {
    where: s3_multipart_uploadsScalarWhereInput
    data: XOR<s3_multipart_uploadsUpdateManyMutationInput, s3_multipart_uploadsUncheckedUpdateManyWithoutBucketsInput>
  }

  export type s3_multipart_uploadsScalarWhereInput = {
    AND?: s3_multipart_uploadsScalarWhereInput | s3_multipart_uploadsScalarWhereInput[]
    OR?: s3_multipart_uploadsScalarWhereInput[]
    NOT?: s3_multipart_uploadsScalarWhereInput | s3_multipart_uploadsScalarWhereInput[]
    id?: StringFilter<"s3_multipart_uploads"> | string
    in_progress_size?: BigIntFilter<"s3_multipart_uploads"> | bigint | number
    upload_signature?: StringFilter<"s3_multipart_uploads"> | string
    bucket_id?: StringFilter<"s3_multipart_uploads"> | string
    key?: StringFilter<"s3_multipart_uploads"> | string
    version?: StringFilter<"s3_multipart_uploads"> | string
    owner_id?: StringNullableFilter<"s3_multipart_uploads"> | string | null
    created_at?: DateTimeFilter<"s3_multipart_uploads"> | Date | string
    user_metadata?: JsonNullableFilter<"s3_multipart_uploads">
  }

  export type s3_multipart_uploads_partsUpsertWithWhereUniqueWithoutBucketsInput = {
    where: s3_multipart_uploads_partsWhereUniqueInput
    update: XOR<s3_multipart_uploads_partsUpdateWithoutBucketsInput, s3_multipart_uploads_partsUncheckedUpdateWithoutBucketsInput>
    create: XOR<s3_multipart_uploads_partsCreateWithoutBucketsInput, s3_multipart_uploads_partsUncheckedCreateWithoutBucketsInput>
  }

  export type s3_multipart_uploads_partsUpdateWithWhereUniqueWithoutBucketsInput = {
    where: s3_multipart_uploads_partsWhereUniqueInput
    data: XOR<s3_multipart_uploads_partsUpdateWithoutBucketsInput, s3_multipart_uploads_partsUncheckedUpdateWithoutBucketsInput>
  }

  export type s3_multipart_uploads_partsUpdateManyWithWhereWithoutBucketsInput = {
    where: s3_multipart_uploads_partsScalarWhereInput
    data: XOR<s3_multipart_uploads_partsUpdateManyMutationInput, s3_multipart_uploads_partsUncheckedUpdateManyWithoutBucketsInput>
  }

  export type s3_multipart_uploads_partsScalarWhereInput = {
    AND?: s3_multipart_uploads_partsScalarWhereInput | s3_multipart_uploads_partsScalarWhereInput[]
    OR?: s3_multipart_uploads_partsScalarWhereInput[]
    NOT?: s3_multipart_uploads_partsScalarWhereInput | s3_multipart_uploads_partsScalarWhereInput[]
    id?: UuidFilter<"s3_multipart_uploads_parts"> | string
    upload_id?: StringFilter<"s3_multipart_uploads_parts"> | string
    size?: BigIntFilter<"s3_multipart_uploads_parts"> | bigint | number
    part_number?: IntFilter<"s3_multipart_uploads_parts"> | number
    bucket_id?: StringFilter<"s3_multipart_uploads_parts"> | string
    key?: StringFilter<"s3_multipart_uploads_parts"> | string
    etag?: StringFilter<"s3_multipart_uploads_parts"> | string
    owner_id?: StringNullableFilter<"s3_multipart_uploads_parts"> | string | null
    version?: StringFilter<"s3_multipart_uploads_parts"> | string
    created_at?: DateTimeFilter<"s3_multipart_uploads_parts"> | Date | string
  }

  export type bucketsCreateWithoutObjectsInput = {
    id: string
    name: string
    owner?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    public?: boolean | null
    avif_autodetection?: boolean | null
    file_size_limit?: bigint | number | null
    allowed_mime_types?: bucketsCreateallowed_mime_typesInput | string[]
    owner_id?: string | null
    s3_multipart_uploads?: s3_multipart_uploadsCreateNestedManyWithoutBucketsInput
    s3_multipart_uploads_parts?: s3_multipart_uploads_partsCreateNestedManyWithoutBucketsInput
  }

  export type bucketsUncheckedCreateWithoutObjectsInput = {
    id: string
    name: string
    owner?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    public?: boolean | null
    avif_autodetection?: boolean | null
    file_size_limit?: bigint | number | null
    allowed_mime_types?: bucketsCreateallowed_mime_typesInput | string[]
    owner_id?: string | null
    s3_multipart_uploads?: s3_multipart_uploadsUncheckedCreateNestedManyWithoutBucketsInput
    s3_multipart_uploads_parts?: s3_multipart_uploads_partsUncheckedCreateNestedManyWithoutBucketsInput
  }

  export type bucketsCreateOrConnectWithoutObjectsInput = {
    where: bucketsWhereUniqueInput
    create: XOR<bucketsCreateWithoutObjectsInput, bucketsUncheckedCreateWithoutObjectsInput>
  }

  export type bucketsUpsertWithoutObjectsInput = {
    update: XOR<bucketsUpdateWithoutObjectsInput, bucketsUncheckedUpdateWithoutObjectsInput>
    create: XOR<bucketsCreateWithoutObjectsInput, bucketsUncheckedCreateWithoutObjectsInput>
    where?: bucketsWhereInput
  }

  export type bucketsUpdateToOneWithWhereWithoutObjectsInput = {
    where?: bucketsWhereInput
    data: XOR<bucketsUpdateWithoutObjectsInput, bucketsUncheckedUpdateWithoutObjectsInput>
  }

  export type bucketsUpdateWithoutObjectsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    public?: NullableBoolFieldUpdateOperationsInput | boolean | null
    avif_autodetection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    file_size_limit?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    allowed_mime_types?: bucketsUpdateallowed_mime_typesInput | string[]
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    s3_multipart_uploads?: s3_multipart_uploadsUpdateManyWithoutBucketsNestedInput
    s3_multipart_uploads_parts?: s3_multipart_uploads_partsUpdateManyWithoutBucketsNestedInput
  }

  export type bucketsUncheckedUpdateWithoutObjectsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    public?: NullableBoolFieldUpdateOperationsInput | boolean | null
    avif_autodetection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    file_size_limit?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    allowed_mime_types?: bucketsUpdateallowed_mime_typesInput | string[]
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    s3_multipart_uploads?: s3_multipart_uploadsUncheckedUpdateManyWithoutBucketsNestedInput
    s3_multipart_uploads_parts?: s3_multipart_uploads_partsUncheckedUpdateManyWithoutBucketsNestedInput
  }

  export type bucketsCreateWithoutS3_multipart_uploadsInput = {
    id: string
    name: string
    owner?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    public?: boolean | null
    avif_autodetection?: boolean | null
    file_size_limit?: bigint | number | null
    allowed_mime_types?: bucketsCreateallowed_mime_typesInput | string[]
    owner_id?: string | null
    objects?: objectsCreateNestedManyWithoutBucketsInput
    s3_multipart_uploads_parts?: s3_multipart_uploads_partsCreateNestedManyWithoutBucketsInput
  }

  export type bucketsUncheckedCreateWithoutS3_multipart_uploadsInput = {
    id: string
    name: string
    owner?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    public?: boolean | null
    avif_autodetection?: boolean | null
    file_size_limit?: bigint | number | null
    allowed_mime_types?: bucketsCreateallowed_mime_typesInput | string[]
    owner_id?: string | null
    objects?: objectsUncheckedCreateNestedManyWithoutBucketsInput
    s3_multipart_uploads_parts?: s3_multipart_uploads_partsUncheckedCreateNestedManyWithoutBucketsInput
  }

  export type bucketsCreateOrConnectWithoutS3_multipart_uploadsInput = {
    where: bucketsWhereUniqueInput
    create: XOR<bucketsCreateWithoutS3_multipart_uploadsInput, bucketsUncheckedCreateWithoutS3_multipart_uploadsInput>
  }

  export type s3_multipart_uploads_partsCreateWithoutS3_multipart_uploadsInput = {
    id?: string
    size?: bigint | number
    part_number: number
    key: string
    etag: string
    owner_id?: string | null
    version: string
    created_at?: Date | string
    buckets: bucketsCreateNestedOneWithoutS3_multipart_uploads_partsInput
  }

  export type s3_multipart_uploads_partsUncheckedCreateWithoutS3_multipart_uploadsInput = {
    id?: string
    size?: bigint | number
    part_number: number
    bucket_id: string
    key: string
    etag: string
    owner_id?: string | null
    version: string
    created_at?: Date | string
  }

  export type s3_multipart_uploads_partsCreateOrConnectWithoutS3_multipart_uploadsInput = {
    where: s3_multipart_uploads_partsWhereUniqueInput
    create: XOR<s3_multipart_uploads_partsCreateWithoutS3_multipart_uploadsInput, s3_multipart_uploads_partsUncheckedCreateWithoutS3_multipart_uploadsInput>
  }

  export type s3_multipart_uploads_partsCreateManyS3_multipart_uploadsInputEnvelope = {
    data: s3_multipart_uploads_partsCreateManyS3_multipart_uploadsInput | s3_multipart_uploads_partsCreateManyS3_multipart_uploadsInput[]
    skipDuplicates?: boolean
  }

  export type bucketsUpsertWithoutS3_multipart_uploadsInput = {
    update: XOR<bucketsUpdateWithoutS3_multipart_uploadsInput, bucketsUncheckedUpdateWithoutS3_multipart_uploadsInput>
    create: XOR<bucketsCreateWithoutS3_multipart_uploadsInput, bucketsUncheckedCreateWithoutS3_multipart_uploadsInput>
    where?: bucketsWhereInput
  }

  export type bucketsUpdateToOneWithWhereWithoutS3_multipart_uploadsInput = {
    where?: bucketsWhereInput
    data: XOR<bucketsUpdateWithoutS3_multipart_uploadsInput, bucketsUncheckedUpdateWithoutS3_multipart_uploadsInput>
  }

  export type bucketsUpdateWithoutS3_multipart_uploadsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    public?: NullableBoolFieldUpdateOperationsInput | boolean | null
    avif_autodetection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    file_size_limit?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    allowed_mime_types?: bucketsUpdateallowed_mime_typesInput | string[]
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    objects?: objectsUpdateManyWithoutBucketsNestedInput
    s3_multipart_uploads_parts?: s3_multipart_uploads_partsUpdateManyWithoutBucketsNestedInput
  }

  export type bucketsUncheckedUpdateWithoutS3_multipart_uploadsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    public?: NullableBoolFieldUpdateOperationsInput | boolean | null
    avif_autodetection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    file_size_limit?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    allowed_mime_types?: bucketsUpdateallowed_mime_typesInput | string[]
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    objects?: objectsUncheckedUpdateManyWithoutBucketsNestedInput
    s3_multipart_uploads_parts?: s3_multipart_uploads_partsUncheckedUpdateManyWithoutBucketsNestedInput
  }

  export type s3_multipart_uploads_partsUpsertWithWhereUniqueWithoutS3_multipart_uploadsInput = {
    where: s3_multipart_uploads_partsWhereUniqueInput
    update: XOR<s3_multipart_uploads_partsUpdateWithoutS3_multipart_uploadsInput, s3_multipart_uploads_partsUncheckedUpdateWithoutS3_multipart_uploadsInput>
    create: XOR<s3_multipart_uploads_partsCreateWithoutS3_multipart_uploadsInput, s3_multipart_uploads_partsUncheckedCreateWithoutS3_multipart_uploadsInput>
  }

  export type s3_multipart_uploads_partsUpdateWithWhereUniqueWithoutS3_multipart_uploadsInput = {
    where: s3_multipart_uploads_partsWhereUniqueInput
    data: XOR<s3_multipart_uploads_partsUpdateWithoutS3_multipart_uploadsInput, s3_multipart_uploads_partsUncheckedUpdateWithoutS3_multipart_uploadsInput>
  }

  export type s3_multipart_uploads_partsUpdateManyWithWhereWithoutS3_multipart_uploadsInput = {
    where: s3_multipart_uploads_partsScalarWhereInput
    data: XOR<s3_multipart_uploads_partsUpdateManyMutationInput, s3_multipart_uploads_partsUncheckedUpdateManyWithoutS3_multipart_uploadsInput>
  }

  export type bucketsCreateWithoutS3_multipart_uploads_partsInput = {
    id: string
    name: string
    owner?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    public?: boolean | null
    avif_autodetection?: boolean | null
    file_size_limit?: bigint | number | null
    allowed_mime_types?: bucketsCreateallowed_mime_typesInput | string[]
    owner_id?: string | null
    objects?: objectsCreateNestedManyWithoutBucketsInput
    s3_multipart_uploads?: s3_multipart_uploadsCreateNestedManyWithoutBucketsInput
  }

  export type bucketsUncheckedCreateWithoutS3_multipart_uploads_partsInput = {
    id: string
    name: string
    owner?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    public?: boolean | null
    avif_autodetection?: boolean | null
    file_size_limit?: bigint | number | null
    allowed_mime_types?: bucketsCreateallowed_mime_typesInput | string[]
    owner_id?: string | null
    objects?: objectsUncheckedCreateNestedManyWithoutBucketsInput
    s3_multipart_uploads?: s3_multipart_uploadsUncheckedCreateNestedManyWithoutBucketsInput
  }

  export type bucketsCreateOrConnectWithoutS3_multipart_uploads_partsInput = {
    where: bucketsWhereUniqueInput
    create: XOR<bucketsCreateWithoutS3_multipart_uploads_partsInput, bucketsUncheckedCreateWithoutS3_multipart_uploads_partsInput>
  }

  export type s3_multipart_uploadsCreateWithoutS3_multipart_uploads_partsInput = {
    id: string
    in_progress_size?: bigint | number
    upload_signature: string
    key: string
    version: string
    owner_id?: string | null
    created_at?: Date | string
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
    buckets: bucketsCreateNestedOneWithoutS3_multipart_uploadsInput
  }

  export type s3_multipart_uploadsUncheckedCreateWithoutS3_multipart_uploads_partsInput = {
    id: string
    in_progress_size?: bigint | number
    upload_signature: string
    bucket_id: string
    key: string
    version: string
    owner_id?: string | null
    created_at?: Date | string
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type s3_multipart_uploadsCreateOrConnectWithoutS3_multipart_uploads_partsInput = {
    where: s3_multipart_uploadsWhereUniqueInput
    create: XOR<s3_multipart_uploadsCreateWithoutS3_multipart_uploads_partsInput, s3_multipart_uploadsUncheckedCreateWithoutS3_multipart_uploads_partsInput>
  }

  export type bucketsUpsertWithoutS3_multipart_uploads_partsInput = {
    update: XOR<bucketsUpdateWithoutS3_multipart_uploads_partsInput, bucketsUncheckedUpdateWithoutS3_multipart_uploads_partsInput>
    create: XOR<bucketsCreateWithoutS3_multipart_uploads_partsInput, bucketsUncheckedCreateWithoutS3_multipart_uploads_partsInput>
    where?: bucketsWhereInput
  }

  export type bucketsUpdateToOneWithWhereWithoutS3_multipart_uploads_partsInput = {
    where?: bucketsWhereInput
    data: XOR<bucketsUpdateWithoutS3_multipart_uploads_partsInput, bucketsUncheckedUpdateWithoutS3_multipart_uploads_partsInput>
  }

  export type bucketsUpdateWithoutS3_multipart_uploads_partsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    public?: NullableBoolFieldUpdateOperationsInput | boolean | null
    avif_autodetection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    file_size_limit?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    allowed_mime_types?: bucketsUpdateallowed_mime_typesInput | string[]
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    objects?: objectsUpdateManyWithoutBucketsNestedInput
    s3_multipart_uploads?: s3_multipart_uploadsUpdateManyWithoutBucketsNestedInput
  }

  export type bucketsUncheckedUpdateWithoutS3_multipart_uploads_partsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    public?: NullableBoolFieldUpdateOperationsInput | boolean | null
    avif_autodetection?: NullableBoolFieldUpdateOperationsInput | boolean | null
    file_size_limit?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    allowed_mime_types?: bucketsUpdateallowed_mime_typesInput | string[]
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    objects?: objectsUncheckedUpdateManyWithoutBucketsNestedInput
    s3_multipart_uploads?: s3_multipart_uploadsUncheckedUpdateManyWithoutBucketsNestedInput
  }

  export type s3_multipart_uploadsUpsertWithoutS3_multipart_uploads_partsInput = {
    update: XOR<s3_multipart_uploadsUpdateWithoutS3_multipart_uploads_partsInput, s3_multipart_uploadsUncheckedUpdateWithoutS3_multipart_uploads_partsInput>
    create: XOR<s3_multipart_uploadsCreateWithoutS3_multipart_uploads_partsInput, s3_multipart_uploadsUncheckedCreateWithoutS3_multipart_uploads_partsInput>
    where?: s3_multipart_uploadsWhereInput
  }

  export type s3_multipart_uploadsUpdateToOneWithWhereWithoutS3_multipart_uploads_partsInput = {
    where?: s3_multipart_uploadsWhereInput
    data: XOR<s3_multipart_uploadsUpdateWithoutS3_multipart_uploads_partsInput, s3_multipart_uploadsUncheckedUpdateWithoutS3_multipart_uploads_partsInput>
  }

  export type s3_multipart_uploadsUpdateWithoutS3_multipart_uploads_partsInput = {
    id?: StringFieldUpdateOperationsInput | string
    in_progress_size?: BigIntFieldUpdateOperationsInput | bigint | number
    upload_signature?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
    buckets?: bucketsUpdateOneRequiredWithoutS3_multipart_uploadsNestedInput
  }

  export type s3_multipart_uploadsUncheckedUpdateWithoutS3_multipart_uploads_partsInput = {
    id?: StringFieldUpdateOperationsInput | string
    in_progress_size?: BigIntFieldUpdateOperationsInput | bigint | number
    upload_signature?: StringFieldUpdateOperationsInput | string
    bucket_id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type UserSoftwareCreateManyGrantedByInput = {
    id?: string
    userId: string
    softwareId: string
    accessLevel: string
    role: string
    assignedAt?: Date | string
  }

  export type UserSoftwareUpdateWithoutGrantedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    accessLevel?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    software?: SoftwareUpdateOneRequiredWithoutUserSoftwareNestedInput
    user?: UserUpdateOneRequiredWithoutSoftwareNestedInput
  }

  export type UserSoftwareUncheckedUpdateWithoutGrantedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    softwareId?: StringFieldUpdateOperationsInput | string
    accessLevel?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSoftwareUncheckedUpdateManyWithoutGrantedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    softwareId?: StringFieldUpdateOperationsInput | string
    accessLevel?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SoftwareUpdateWithoutAssignedInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    accountRep?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    paymentDueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentFrequency?: EnumPaymentFrequencyFieldUpdateOperationsInput | $Enums.PaymentFrequency
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    pricePerUser?: NullableFloatFieldUpdateOperationsInput | number | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    accountReps?: AccountRepUpdateManyWithoutSoftwareNestedInput
    notesLastUpdatedBy?: UserUpdateOneRequiredWithoutSoftwareNotesNestedInput
    updatedBy?: UserUpdateOneWithoutSoftwareNestedInput
    SoftwareAccess?: SoftwareAccessUpdateManyWithoutSoftwareNestedInput
    histories?: SoftwareHistoryUpdateManyWithoutSoftwareNestedInput
    UserSoftware?: UserSoftwareUpdateManyWithoutSoftwareNestedInput
  }

  export type SoftwareUncheckedUpdateWithoutAssignedInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    notesLastUpdatedById?: StringFieldUpdateOperationsInput | string
    accountRep?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    paymentDueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentFrequency?: EnumPaymentFrequencyFieldUpdateOperationsInput | $Enums.PaymentFrequency
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    pricePerUser?: NullableFloatFieldUpdateOperationsInput | number | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    accountReps?: AccountRepUncheckedUpdateManyWithoutSoftwareNestedInput
    SoftwareAccess?: SoftwareAccessUncheckedUpdateManyWithoutSoftwareNestedInput
    histories?: SoftwareHistoryUncheckedUpdateManyWithoutSoftwareNestedInput
    UserSoftware?: UserSoftwareUncheckedUpdateManyWithoutSoftwareNestedInput
  }

  export type SoftwareUncheckedUpdateManyWithoutAssignedInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    notesLastUpdatedById?: StringFieldUpdateOperationsInput | string
    accountRep?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    paymentDueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentFrequency?: EnumPaymentFrequencyFieldUpdateOperationsInput | $Enums.PaymentFrequency
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    pricePerUser?: NullableFloatFieldUpdateOperationsInput | number | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SharedAccountCreateManyUpdatedByInput = {
    id?: string
    email: string
    name: string
    normalizedName: string
    location?: string | null
    type?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    userCount?: number
  }

  export type SoftwareCreateManyNotesLastUpdatedByInput = {
    id?: string
    name: string
    description?: string | null
    category?: string | null
    status?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userCount?: number | null
    notes?: string | null
    accountRep?: string | null
    amount?: number | null
    currency?: string | null
    licenseType?: string | null
    paymentDueDate?: Date | string | null
    paymentFrequency?: $Enums.PaymentFrequency
    paymentMethod?: $Enums.PaymentMethod
    pricePerUser?: number | null
    updatedById?: string | null
    website?: string | null
  }

  export type SoftwareCreateManyUpdatedByInput = {
    id?: string
    name: string
    description?: string | null
    category?: string | null
    status?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userCount?: number | null
    notes?: string | null
    notesLastUpdatedById: string
    accountRep?: string | null
    amount?: number | null
    currency?: string | null
    licenseType?: string | null
    paymentDueDate?: Date | string | null
    paymentFrequency?: $Enums.PaymentFrequency
    paymentMethod?: $Enums.PaymentMethod
    pricePerUser?: number | null
    website?: string | null
  }

  export type UserCreateManyReportsToInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: string
    email: string
    name: string
    jobTitle?: string | null
    location?: string | null
    personalEmail?: string | null
    type?: string | null
    status?: string
  }

  export type UserHistoryCreateManyUserInput = {
    id?: string
    action: string
    field: string
    newValue?: string | null
    oldValue?: string | null
    updatedBy: string
    updatedOn?: Date | string
  }

  export type UserSoftwareCreateManyUserInput = {
    id?: string
    softwareId: string
    grantedById: string
    accessLevel: string
    role: string
    assignedAt?: Date | string
  }

  export type SharedAccountUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    normalizedName?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: IntFieldUpdateOperationsInput | number
    histories?: SharedAccountHistoryUpdateManyWithoutSharedAccountNestedInput
    softwareAccesses?: SoftwareAccessUpdateManyWithoutSharedAccountNestedInput
  }

  export type SharedAccountUncheckedUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    normalizedName?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: IntFieldUpdateOperationsInput | number
    histories?: SharedAccountHistoryUncheckedUpdateManyWithoutSharedAccountNestedInput
    softwareAccesses?: SoftwareAccessUncheckedUpdateManyWithoutSharedAccountNestedInput
  }

  export type SharedAccountUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    normalizedName?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: IntFieldUpdateOperationsInput | number
  }

  export type SoftwareUpdateWithoutNotesLastUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    accountRep?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    paymentDueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentFrequency?: EnumPaymentFrequencyFieldUpdateOperationsInput | $Enums.PaymentFrequency
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    pricePerUser?: NullableFloatFieldUpdateOperationsInput | number | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    accountReps?: AccountRepUpdateManyWithoutSoftwareNestedInput
    updatedBy?: UserUpdateOneWithoutSoftwareNestedInput
    SoftwareAccess?: SoftwareAccessUpdateManyWithoutSoftwareNestedInput
    histories?: SoftwareHistoryUpdateManyWithoutSoftwareNestedInput
    UserSoftware?: UserSoftwareUpdateManyWithoutSoftwareNestedInput
    Assigned?: UserProfilesUpdateManyWithoutSoftwareNestedInput
  }

  export type SoftwareUncheckedUpdateWithoutNotesLastUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    accountRep?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    paymentDueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentFrequency?: EnumPaymentFrequencyFieldUpdateOperationsInput | $Enums.PaymentFrequency
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    pricePerUser?: NullableFloatFieldUpdateOperationsInput | number | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    accountReps?: AccountRepUncheckedUpdateManyWithoutSoftwareNestedInput
    SoftwareAccess?: SoftwareAccessUncheckedUpdateManyWithoutSoftwareNestedInput
    histories?: SoftwareHistoryUncheckedUpdateManyWithoutSoftwareNestedInput
    UserSoftware?: UserSoftwareUncheckedUpdateManyWithoutSoftwareNestedInput
    Assigned?: UserProfilesUncheckedUpdateManyWithoutSoftwareNestedInput
  }

  export type SoftwareUncheckedUpdateManyWithoutNotesLastUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    accountRep?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    paymentDueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentFrequency?: EnumPaymentFrequencyFieldUpdateOperationsInput | $Enums.PaymentFrequency
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    pricePerUser?: NullableFloatFieldUpdateOperationsInput | number | null
    updatedById?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SoftwareUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    accountRep?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    paymentDueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentFrequency?: EnumPaymentFrequencyFieldUpdateOperationsInput | $Enums.PaymentFrequency
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    pricePerUser?: NullableFloatFieldUpdateOperationsInput | number | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    accountReps?: AccountRepUpdateManyWithoutSoftwareNestedInput
    notesLastUpdatedBy?: UserUpdateOneRequiredWithoutSoftwareNotesNestedInput
    SoftwareAccess?: SoftwareAccessUpdateManyWithoutSoftwareNestedInput
    histories?: SoftwareHistoryUpdateManyWithoutSoftwareNestedInput
    UserSoftware?: UserSoftwareUpdateManyWithoutSoftwareNestedInput
    Assigned?: UserProfilesUpdateManyWithoutSoftwareNestedInput
  }

  export type SoftwareUncheckedUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    notesLastUpdatedById?: StringFieldUpdateOperationsInput | string
    accountRep?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    paymentDueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentFrequency?: EnumPaymentFrequencyFieldUpdateOperationsInput | $Enums.PaymentFrequency
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    pricePerUser?: NullableFloatFieldUpdateOperationsInput | number | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    accountReps?: AccountRepUncheckedUpdateManyWithoutSoftwareNestedInput
    SoftwareAccess?: SoftwareAccessUncheckedUpdateManyWithoutSoftwareNestedInput
    histories?: SoftwareHistoryUncheckedUpdateManyWithoutSoftwareNestedInput
    UserSoftware?: UserSoftwareUncheckedUpdateManyWithoutSoftwareNestedInput
    Assigned?: UserProfilesUncheckedUpdateManyWithoutSoftwareNestedInput
  }

  export type SoftwareUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    notesLastUpdatedById?: StringFieldUpdateOperationsInput | string
    accountRep?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    paymentDueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentFrequency?: EnumPaymentFrequencyFieldUpdateOperationsInput | $Enums.PaymentFrequency
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    pricePerUser?: NullableFloatFieldUpdateOperationsInput | number | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUpdateWithoutReportsToInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    personalEmail?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    SharedAccount?: SharedAccountUpdateManyWithoutUpdatedByNestedInput
    softwareNotes?: SoftwareUpdateManyWithoutNotesLastUpdatedByNestedInput
    Software?: SoftwareUpdateManyWithoutUpdatedByNestedInput
    subordinates?: UserUpdateManyWithoutReportsToNestedInput
    histories?: UserHistoryUpdateManyWithoutUserNestedInput
    software?: UserSoftwareUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutReportsToInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    personalEmail?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    SharedAccount?: SharedAccountUncheckedUpdateManyWithoutUpdatedByNestedInput
    softwareNotes?: SoftwareUncheckedUpdateManyWithoutNotesLastUpdatedByNestedInput
    Software?: SoftwareUncheckedUpdateManyWithoutUpdatedByNestedInput
    subordinates?: UserUncheckedUpdateManyWithoutReportsToNestedInput
    histories?: UserHistoryUncheckedUpdateManyWithoutUserNestedInput
    software?: UserSoftwareUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateManyWithoutReportsToInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    personalEmail?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
  }

  export type UserHistoryUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: StringFieldUpdateOperationsInput | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserHistoryUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: StringFieldUpdateOperationsInput | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserHistoryUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: StringFieldUpdateOperationsInput | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSoftwareUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    accessLevel?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    grantedBy?: UserProfilesUpdateOneRequiredWithoutUserSoftwareNestedInput
    software?: SoftwareUpdateOneRequiredWithoutUserSoftwareNestedInput
  }

  export type UserSoftwareUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    softwareId?: StringFieldUpdateOperationsInput | string
    grantedById?: StringFieldUpdateOperationsInput | string
    accessLevel?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSoftwareUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    softwareId?: StringFieldUpdateOperationsInput | string
    grantedById?: StringFieldUpdateOperationsInput | string
    accessLevel?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountRepCreateManySoftwareInput = {
    id?: string
    email: string
    name: string
    phone: string
  }

  export type SoftwareAccessCreateManySoftwareInput = {
    id?: string
    sharedAccountId: string
    access: boolean
    lastEdited?: Date | string
    lastEditedBy: string
    permissions?: SoftwareAccessCreatepermissionsInput | string[]
    uid: string
  }

  export type SoftwareHistoryCreateManySoftwareInput = {
    id?: string
    action: string
    field: string
    newValue?: string | null
    oldValue?: string | null
    updatedBy: string
    updatedOn?: Date | string
  }

  export type UserSoftwareCreateManySoftwareInput = {
    id?: string
    userId: string
    grantedById: string
    accessLevel: string
    role: string
    assignedAt?: Date | string
  }

  export type AccountRepUpdateWithoutSoftwareInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
  }

  export type AccountRepUncheckedUpdateWithoutSoftwareInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
  }

  export type AccountRepUncheckedUpdateManyWithoutSoftwareInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
  }

  export type SoftwareAccessUpdateWithoutSoftwareInput = {
    id?: StringFieldUpdateOperationsInput | string
    access?: BoolFieldUpdateOperationsInput | boolean
    lastEdited?: DateTimeFieldUpdateOperationsInput | Date | string
    lastEditedBy?: StringFieldUpdateOperationsInput | string
    permissions?: SoftwareAccessUpdatepermissionsInput | string[]
    uid?: StringFieldUpdateOperationsInput | string
    sharedAccount?: SharedAccountUpdateOneRequiredWithoutSoftwareAccessesNestedInput
  }

  export type SoftwareAccessUncheckedUpdateWithoutSoftwareInput = {
    id?: StringFieldUpdateOperationsInput | string
    sharedAccountId?: StringFieldUpdateOperationsInput | string
    access?: BoolFieldUpdateOperationsInput | boolean
    lastEdited?: DateTimeFieldUpdateOperationsInput | Date | string
    lastEditedBy?: StringFieldUpdateOperationsInput | string
    permissions?: SoftwareAccessUpdatepermissionsInput | string[]
    uid?: StringFieldUpdateOperationsInput | string
  }

  export type SoftwareAccessUncheckedUpdateManyWithoutSoftwareInput = {
    id?: StringFieldUpdateOperationsInput | string
    sharedAccountId?: StringFieldUpdateOperationsInput | string
    access?: BoolFieldUpdateOperationsInput | boolean
    lastEdited?: DateTimeFieldUpdateOperationsInput | Date | string
    lastEditedBy?: StringFieldUpdateOperationsInput | string
    permissions?: SoftwareAccessUpdatepermissionsInput | string[]
    uid?: StringFieldUpdateOperationsInput | string
  }

  export type SoftwareHistoryUpdateWithoutSoftwareInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: StringFieldUpdateOperationsInput | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SoftwareHistoryUncheckedUpdateWithoutSoftwareInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: StringFieldUpdateOperationsInput | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SoftwareHistoryUncheckedUpdateManyWithoutSoftwareInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: StringFieldUpdateOperationsInput | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSoftwareUpdateWithoutSoftwareInput = {
    id?: StringFieldUpdateOperationsInput | string
    accessLevel?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    grantedBy?: UserProfilesUpdateOneRequiredWithoutUserSoftwareNestedInput
    user?: UserUpdateOneRequiredWithoutSoftwareNestedInput
  }

  export type UserSoftwareUncheckedUpdateWithoutSoftwareInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    grantedById?: StringFieldUpdateOperationsInput | string
    accessLevel?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSoftwareUncheckedUpdateManyWithoutSoftwareInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    grantedById?: StringFieldUpdateOperationsInput | string
    accessLevel?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserProfilesUpdateWithoutSoftwareInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UserSoftware?: UserSoftwareUpdateManyWithoutGrantedByNestedInput
  }

  export type UserProfilesUncheckedUpdateWithoutSoftwareInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UserSoftware?: UserSoftwareUncheckedUpdateManyWithoutGrantedByNestedInput
  }

  export type UserProfilesUncheckedUpdateManyWithoutSoftwareInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SharedAccountHistoryCreateManySharedAccountInput = {
    id?: string
    action: string
    field: string
    newValue?: string | null
    oldValue?: string | null
    updatedBy: string
    updatedOn?: Date | string
  }

  export type SoftwareAccessCreateManySharedAccountInput = {
    id?: string
    softwareId: string
    access: boolean
    lastEdited?: Date | string
    lastEditedBy: string
    permissions?: SoftwareAccessCreatepermissionsInput | string[]
    uid: string
  }

  export type SharedAccountHistoryUpdateWithoutSharedAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: StringFieldUpdateOperationsInput | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SharedAccountHistoryUncheckedUpdateWithoutSharedAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: StringFieldUpdateOperationsInput | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SharedAccountHistoryUncheckedUpdateManyWithoutSharedAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: StringFieldUpdateOperationsInput | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SoftwareAccessUpdateWithoutSharedAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    access?: BoolFieldUpdateOperationsInput | boolean
    lastEdited?: DateTimeFieldUpdateOperationsInput | Date | string
    lastEditedBy?: StringFieldUpdateOperationsInput | string
    permissions?: SoftwareAccessUpdatepermissionsInput | string[]
    uid?: StringFieldUpdateOperationsInput | string
    software?: SoftwareUpdateOneRequiredWithoutSoftwareAccessNestedInput
  }

  export type SoftwareAccessUncheckedUpdateWithoutSharedAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    softwareId?: StringFieldUpdateOperationsInput | string
    access?: BoolFieldUpdateOperationsInput | boolean
    lastEdited?: DateTimeFieldUpdateOperationsInput | Date | string
    lastEditedBy?: StringFieldUpdateOperationsInput | string
    permissions?: SoftwareAccessUpdatepermissionsInput | string[]
    uid?: StringFieldUpdateOperationsInput | string
  }

  export type SoftwareAccessUncheckedUpdateManyWithoutSharedAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    softwareId?: StringFieldUpdateOperationsInput | string
    access?: BoolFieldUpdateOperationsInput | boolean
    lastEdited?: DateTimeFieldUpdateOperationsInput | Date | string
    lastEditedBy?: StringFieldUpdateOperationsInput | string
    permissions?: SoftwareAccessUpdatepermissionsInput | string[]
    uid?: StringFieldUpdateOperationsInput | string
  }

  export type saml_relay_statesCreateManyFlow_stateInput = {
    id: string
    sso_provider_id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type saml_relay_statesUpdateWithoutFlow_stateInput = {
    id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sso_providers?: sso_providersUpdateOneRequiredWithoutSaml_relay_statesNestedInput
  }

  export type saml_relay_statesUncheckedUpdateWithoutFlow_stateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sso_provider_id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type saml_relay_statesUncheckedUpdateManyWithoutFlow_stateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sso_provider_id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type mfa_challengesCreateManyMfa_factorsInput = {
    id: string
    created_at: Date | string
    verified_at?: Date | string | null
    ip_address: string
    otp_code?: string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type mfa_challengesUpdateWithoutMfa_factorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type mfa_challengesUncheckedUpdateWithoutMfa_factorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type mfa_challengesUncheckedUpdateManyWithoutMfa_factorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type mfa_amr_claimsCreateManySessionsInput = {
    created_at: Date | string
    updated_at: Date | string
    authentication_method: string
    id: string
  }

  export type refresh_tokensCreateManySessionsInput = {
    instance_id?: string | null
    id?: bigint | number
    token?: string | null
    user_id?: string | null
    revoked?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    parent?: string | null
  }

  export type mfa_amr_claimsUpdateWithoutSessionsInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    authentication_method?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
  }

  export type mfa_amr_claimsUncheckedUpdateWithoutSessionsInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    authentication_method?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
  }

  export type mfa_amr_claimsUncheckedUpdateManyWithoutSessionsInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    authentication_method?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
  }

  export type refresh_tokensUpdateWithoutSessionsInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type refresh_tokensUncheckedUpdateWithoutSessionsInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type refresh_tokensUncheckedUpdateManyWithoutSessionsInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type saml_providersCreateManySso_providersInput = {
    id: string
    entity_id: string
    metadata_xml: string
    metadata_url?: string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    name_id_format?: string | null
  }

  export type saml_relay_statesCreateManySso_providersInput = {
    id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    flow_state_id?: string | null
  }

  export type sso_domainsCreateManySso_providersInput = {
    id: string
    domain: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type saml_providersUpdateWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    metadata_xml?: StringFieldUpdateOperationsInput | string
    metadata_url?: NullableStringFieldUpdateOperationsInput | string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_id_format?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type saml_providersUncheckedUpdateWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    metadata_xml?: StringFieldUpdateOperationsInput | string
    metadata_url?: NullableStringFieldUpdateOperationsInput | string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_id_format?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type saml_providersUncheckedUpdateManyWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    metadata_xml?: StringFieldUpdateOperationsInput | string
    metadata_url?: NullableStringFieldUpdateOperationsInput | string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_id_format?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type saml_relay_statesUpdateWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    flow_state?: flow_stateUpdateOneWithoutSaml_relay_statesNestedInput
  }

  export type saml_relay_statesUncheckedUpdateWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    flow_state_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type saml_relay_statesUncheckedUpdateManyWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    flow_state_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sso_domainsUpdateWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sso_domainsUncheckedUpdateWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sso_domainsUncheckedUpdateManyWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type identitiesCreateManyUsersInput = {
    provider_id: string
    identity_data: JsonNullValueInput | InputJsonValue
    provider: string
    last_sign_in_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    email?: string | null
    id?: string
  }

  export type mfa_factorsCreateManyUsersInput = {
    id: string
    friendly_name?: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date | string
    updated_at: Date | string
    secret?: string | null
    phone?: string | null
    last_challenged_at?: Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: string | null
  }

  export type one_time_tokensCreateManyUsersInput = {
    id: string
    token_type: $Enums.one_time_token_type
    token_hash: string
    relates_to: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type sessionsCreateManyUsersInput = {
    id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
  }

  export type identitiesUpdateWithoutUsersInput = {
    provider_id?: StringFieldUpdateOperationsInput | string
    identity_data?: JsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
  }

  export type identitiesUncheckedUpdateWithoutUsersInput = {
    provider_id?: StringFieldUpdateOperationsInput | string
    identity_data?: JsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
  }

  export type identitiesUncheckedUpdateManyWithoutUsersInput = {
    provider_id?: StringFieldUpdateOperationsInput | string
    identity_data?: JsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
  }

  export type mfa_factorsUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    last_challenged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_challenges?: mfa_challengesUpdateManyWithoutMfa_factorsNestedInput
  }

  export type mfa_factorsUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    last_challenged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_challenges?: mfa_challengesUncheckedUpdateManyWithoutMfa_factorsNestedInput
  }

  export type mfa_factorsUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    last_challenged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type one_time_tokensUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    token_type?: Enumone_time_token_typeFieldUpdateOperationsInput | $Enums.one_time_token_type
    token_hash?: StringFieldUpdateOperationsInput | string
    relates_to?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type one_time_tokensUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    token_type?: Enumone_time_token_typeFieldUpdateOperationsInput | $Enums.one_time_token_type
    token_hash?: StringFieldUpdateOperationsInput | string
    relates_to?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type one_time_tokensUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    token_type?: Enumone_time_token_typeFieldUpdateOperationsInput | $Enums.one_time_token_type
    token_hash?: StringFieldUpdateOperationsInput | string
    relates_to?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sessionsUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_amr_claims?: mfa_amr_claimsUpdateManyWithoutSessionsNestedInput
    refresh_tokens?: refresh_tokensUpdateManyWithoutSessionsNestedInput
  }

  export type sessionsUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_amr_claims?: mfa_amr_claimsUncheckedUpdateManyWithoutSessionsNestedInput
    refresh_tokens?: refresh_tokensUncheckedUpdateManyWithoutSessionsNestedInput
  }

  export type sessionsUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type objectsCreateManyBucketsInput = {
    id?: string
    name?: string | null
    owner?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    last_accessed_at?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    path_tokens?: objectsCreatepath_tokensInput | string[]
    version?: string | null
    owner_id?: string | null
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type s3_multipart_uploadsCreateManyBucketsInput = {
    id: string
    in_progress_size?: bigint | number
    upload_signature: string
    key: string
    version: string
    owner_id?: string | null
    created_at?: Date | string
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type s3_multipart_uploads_partsCreateManyBucketsInput = {
    id?: string
    upload_id: string
    size?: bigint | number
    part_number: number
    key: string
    etag: string
    owner_id?: string | null
    version: string
    created_at?: Date | string
  }

  export type objectsUpdateWithoutBucketsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_accessed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    path_tokens?: objectsUpdatepath_tokensInput | string[]
    version?: NullableStringFieldUpdateOperationsInput | string | null
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type objectsUncheckedUpdateWithoutBucketsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_accessed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    path_tokens?: objectsUpdatepath_tokensInput | string[]
    version?: NullableStringFieldUpdateOperationsInput | string | null
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type objectsUncheckedUpdateManyWithoutBucketsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_accessed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    path_tokens?: objectsUpdatepath_tokensInput | string[]
    version?: NullableStringFieldUpdateOperationsInput | string | null
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type s3_multipart_uploadsUpdateWithoutBucketsInput = {
    id?: StringFieldUpdateOperationsInput | string
    in_progress_size?: BigIntFieldUpdateOperationsInput | bigint | number
    upload_signature?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
    s3_multipart_uploads_parts?: s3_multipart_uploads_partsUpdateManyWithoutS3_multipart_uploadsNestedInput
  }

  export type s3_multipart_uploadsUncheckedUpdateWithoutBucketsInput = {
    id?: StringFieldUpdateOperationsInput | string
    in_progress_size?: BigIntFieldUpdateOperationsInput | bigint | number
    upload_signature?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
    s3_multipart_uploads_parts?: s3_multipart_uploads_partsUncheckedUpdateManyWithoutS3_multipart_uploadsNestedInput
  }

  export type s3_multipart_uploadsUncheckedUpdateManyWithoutBucketsInput = {
    id?: StringFieldUpdateOperationsInput | string
    in_progress_size?: BigIntFieldUpdateOperationsInput | bigint | number
    upload_signature?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type s3_multipart_uploads_partsUpdateWithoutBucketsInput = {
    id?: StringFieldUpdateOperationsInput | string
    size?: BigIntFieldUpdateOperationsInput | bigint | number
    part_number?: IntFieldUpdateOperationsInput | number
    key?: StringFieldUpdateOperationsInput | string
    etag?: StringFieldUpdateOperationsInput | string
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    version?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    s3_multipart_uploads?: s3_multipart_uploadsUpdateOneRequiredWithoutS3_multipart_uploads_partsNestedInput
  }

  export type s3_multipart_uploads_partsUncheckedUpdateWithoutBucketsInput = {
    id?: StringFieldUpdateOperationsInput | string
    upload_id?: StringFieldUpdateOperationsInput | string
    size?: BigIntFieldUpdateOperationsInput | bigint | number
    part_number?: IntFieldUpdateOperationsInput | number
    key?: StringFieldUpdateOperationsInput | string
    etag?: StringFieldUpdateOperationsInput | string
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    version?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type s3_multipart_uploads_partsUncheckedUpdateManyWithoutBucketsInput = {
    id?: StringFieldUpdateOperationsInput | string
    upload_id?: StringFieldUpdateOperationsInput | string
    size?: BigIntFieldUpdateOperationsInput | bigint | number
    part_number?: IntFieldUpdateOperationsInput | number
    key?: StringFieldUpdateOperationsInput | string
    etag?: StringFieldUpdateOperationsInput | string
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    version?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type s3_multipart_uploads_partsCreateManyS3_multipart_uploadsInput = {
    id?: string
    size?: bigint | number
    part_number: number
    bucket_id: string
    key: string
    etag: string
    owner_id?: string | null
    version: string
    created_at?: Date | string
  }

  export type s3_multipart_uploads_partsUpdateWithoutS3_multipart_uploadsInput = {
    id?: StringFieldUpdateOperationsInput | string
    size?: BigIntFieldUpdateOperationsInput | bigint | number
    part_number?: IntFieldUpdateOperationsInput | number
    key?: StringFieldUpdateOperationsInput | string
    etag?: StringFieldUpdateOperationsInput | string
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    version?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    buckets?: bucketsUpdateOneRequiredWithoutS3_multipart_uploads_partsNestedInput
  }

  export type s3_multipart_uploads_partsUncheckedUpdateWithoutS3_multipart_uploadsInput = {
    id?: StringFieldUpdateOperationsInput | string
    size?: BigIntFieldUpdateOperationsInput | bigint | number
    part_number?: IntFieldUpdateOperationsInput | number
    bucket_id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    etag?: StringFieldUpdateOperationsInput | string
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    version?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type s3_multipart_uploads_partsUncheckedUpdateManyWithoutS3_multipart_uploadsInput = {
    id?: StringFieldUpdateOperationsInput | string
    size?: BigIntFieldUpdateOperationsInput | bigint | number
    part_number?: IntFieldUpdateOperationsInput | number
    bucket_id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    etag?: StringFieldUpdateOperationsInput | string
    owner_id?: NullableStringFieldUpdateOperationsInput | string | null
    version?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}