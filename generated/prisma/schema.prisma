// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String   @id @default(uuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  department    String   @default("unassigned")
  active        Boolean
  email         String   @unique
  name          String   @unique
  jobTitle      String?
  location      String?
  personalEmail String?  @unique
  reportsToId   String?
  type          String?

  reportsTo    User?  @relation("ManagerSubordinates", fields: [reportsToId], references: [id], onDelete: Cascade)
  subordinates User[] @relation("ManagerSubordinates")

  softwareNotes Software[] @relation("NotesLastUpdatedBy")

  // For reverse lookups, like softwareUser relations if you add a join table
}

model Software {
  id                   String   @id @default(uuid())
  name                 String
  description          String?
  category             String?
  status               String?
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  updatedBy            String?
  userCount            Int?
  notes                String?
  notesLastUpdatedById String

  notesLastUpdatedBy User @relation("NotesLastUpdatedBy", fields: [notesLastUpdatedById], references: [id])
}
